
Allocating common symbols
Common symbol       size              file

g_kData             0x11              tmp/KernelData.o
g_DynMem            0x20              tmp/Memory.o
g_TaskStruct        0x260a8           tmp/Task.o
g_Timer             0x80d             tmp/Timer.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 tmp/GDT.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/Timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/Keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/PIC.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/Clubcos0.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/Functions.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/Memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/Mouse.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/Interrupt.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/IDT.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/KernelData.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/Queue.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/Task.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/DynArray.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/KeyTable.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/EnglishFont.o
 .note.GNU-stack
                0x0000000000000000        0x0 tmp/Graphic.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000008048000                PROVIDE (__executable_start, 0x8048000)
                0x0000000008048094                . = (0x8048000 + SIZEOF_HEADERS)

.text           0x0000000000500000     0x48f2
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000500000      0x5fc tmp/AssemblyFunc.o
                0x0000000000500000                KernelStartup
                0x0000000000500007                LoadGdt
                0x0000000000500017                LoadIdt
                0x0000000000500027                LoadTr
                0x000000000050002d                InByte
                0x0000000000500038                InWord
                0x0000000000500044                OutByte
                0x000000000050004e                OutWord
                0x0000000000500059                memcpy
                0x000000000050006f                memset
                0x0000000000500083                memset_2
                0x000000000050009a                memset_4
                0x00000000005000b1                memchr_4
                0x00000000005000ca                GetTimeStamp
                0x00000000005000d5                AsmCli
                0x00000000005000d7                AsmSti
                0x00000000005000d9                AsmHlt
                0x00000000005000db                AsmStiHlt
                0x00000000005000de                GetEFlag
                0x00000000005000e1                SetEFlag
                0x00000000005000e7                GetCr0
                0x00000000005000eb                SetCr0
                0x00000000005000f3                FarJmp
                0x00000000005000f8                DefaultHandler0
                0x0000000000500131                DefaultHandler1
                0x000000000050016a                DefaultHandler2
                0x00000000005001a3                DefaultHandler3
                0x00000000005001dc                DefaultHandler4
                0x0000000000500215                DefaultHandler5
                0x000000000050024e                DefaultHandler6
                0x0000000000500287                DefaultHandler7
                0x00000000005002c0                DefaultHandler8
                0x00000000005002f9                DefaultHandler9
                0x0000000000500332                DefaultHandler10
                0x000000000050036b                DefaultHandler11
                0x00000000005003a4                DefaultHandler12
                0x00000000005003dd                DefaultHandler13
                0x0000000000500416                DefaultHandler14
                0x000000000050044f                DefaultHandler15
                0x0000000000500488                DefaultHandler16
                0x00000000005004c1                DefaultHandler17
                0x00000000005004fa                DefaultHandler18
                0x0000000000500533                DefaultHandler19
                0x000000000050056c                TimerHandler
                0x000000000050059c                KeyboardHandler
                0x00000000005005cc                MouseHandler
 *fill*         0x00000000005005fc        0x4 90909090
 .text          0x0000000000500600       0x62 tmp/GDT.o
                0x0000000000500600                InitGdt
                0x0000000000500650                InitNullGdt
 *fill*         0x0000000000500662        0xe 90909090
 .text          0x0000000000500670      0x308 tmp/Timer.o
                0x0000000000500670                InitTimer
                0x0000000000500700                SetTimer
                0x0000000000500790                _TimerHandler
                0x00000000005007e0                ReadRTCTime
                0x0000000000500880                ReadRTCDate
                0x0000000000500960                DayOfWeekStr
 *fill*         0x0000000000500978        0x8 90909090
 .text          0x0000000000500980      0x806 tmp/Keyboard.o
                0x0000000000500980                GetKeyCodeFromScanCode
                0x00000000005009e0                GetClubcos0AsciiFromKeyCode
                0x0000000000500a60                IsAsciiCode
                0x0000000000500a70                IsDownKey
                0x0000000000500a80                WaitKeyboardInputBuffer
                0x0000000000500ac0                WaitKeyboardOutputBuffer
                0x0000000000500b00                WaitKeyboardACK
                0x0000000000500c10                UpdateKeyboardLED
                0x0000000000500d00                InitKeyboard
                0x0000000000500d70                IsKeyboardOutputBufferFull
                0x0000000000500d90                IsKeyboardInputBufferFull
                0x0000000000500db0                PutScanCodeToInterruptQueue
                0x0000000000500e80                OnKeyboardInterrupt
                0x00000000005010a0                _KeyboardHandler
 *fill*         0x0000000000501186        0xa 90909090
 .text          0x0000000000501190      0x18b tmp/PIC.o
                0x0000000000501190                InitPic
                0x0000000000501280                SetPicInterrupt
                0x00000000005012c0                SendEOI
 *fill*         0x000000000050131b        0x5 90909090
 .text          0x0000000000501320      0x8ca tmp/Clubcos0.o
                0x0000000000501320                testtask
                0x0000000000501430                ClcMain
 *fill*         0x0000000000501bea        0x6 90909090
 .text          0x0000000000501bf0      0x5d3 tmp/Functions.o
                0x0000000000501bf0                isalpha
                0x0000000000501c10                isdigit
                0x0000000000501c30                strlen
                0x0000000000501c50                strcpy
                0x0000000000501c80                strrev
                0x0000000000501cf0                DecimalToString
                0x0000000000501e80                HexaToString
                0x0000000000501fb0                itoa
                0x0000000000501fe0                vsprintf
                0x00000000005021a0                sprintf
 *fill*         0x00000000005021c3        0xd 90909090
 .text          0x00000000005021d0      0x866 tmp/Memory.o
                0x00000000005021d0                InitMemory
                0x0000000000502590                AllocateMemory
                0x0000000000502890                FreeMemory
                0x0000000000502a30                GetMemorySize
 *fill*         0x0000000000502a36        0xa 90909090
 .text          0x0000000000502a40      0x4eb tmp/Mouse.o
                0x0000000000502a40                InitMouse
                0x0000000000502b70                EnableMouseInterrupt
                0x0000000000502be0                PutMouseCodeToInterruptQueue
                0x0000000000502c90                ApplyMouseData
                0x0000000000502d60                DrawMouse
                0x0000000000502da0                OnMouseInterrupt
                0x0000000000502e70                _MouseHandler
 *fill*         0x0000000000502f2b        0x5 90909090
 .text          0x0000000000502f30       0x31 tmp/Interrupt.o
                0x0000000000502f30                _DefaultHandler
 *fill*         0x0000000000502f61        0xf 90909090
 .text          0x0000000000502f70       0x30 tmp/IDT.o
                0x0000000000502f70                InitIdt
 .text          0x0000000000502fa0       0x23 tmp/KernelData.o
                0x0000000000502fa0                InitKernelData
 *fill*         0x0000000000502fc3        0xd 90909090
 .text          0x0000000000502fd0      0x13e tmp/Queue.o
                0x0000000000502fd0                InitQueue32
                0x0000000000502ff0                PutQueue32
                0x0000000000503040                GetQueue32
                0x00000000005030d0                RemoveQueue32
 *fill*         0x000000000050310e        0x2 90909090
 .text          0x0000000000503110      0xdad tmp/Task.o
                0x0000000000503110                InitTss
                0x00000000005031b0                InitTssDescriptor
                0x0000000000503210                InitTaskStruct
                0x0000000000503530                CreateTask
                0x00000000005036f0                TerminateTask
                0x00000000005037f0                ChangePriorityTask
                0x0000000000503970                TaskSchedule
 *fill*         0x0000000000503ebd        0x3 90909090
 .text          0x0000000000503ec0       0x8d tmp/DynArray.o
                0x0000000000503ec0                InitDynArray32
                0x0000000000503ee0                PushBackDynArray32
                0x0000000000503f00                EraseDynArray32
 *fill*         0x0000000000503f4d        0x3 90909090
 .text          0x0000000000503f50        0x0 tmp/KeyTable.o
 .text          0x0000000000503f50        0x0 tmp/EnglishFont.o
 .text          0x0000000000503f50      0x9a2 tmp/Graphic.o
                0x0000000000503f50                DrawBoxFill
                0x0000000000503fb0                DrawBox
                0x00000000005040f0                DrawPixel
                0x0000000000504110                DrawTaskBar
                0x0000000000504350                DrawButton
                0x0000000000504500                DrawBackGround
                0x0000000000504560                DrawFont
                0x0000000000504690                DrawString
                0x00000000005046f0                DrawStringFormat
                0x0000000000504780                DrawBlock
 *(.gnu.warning)

.iplt           0x0000000000504900        0x0
 .iplt          0x0000000000000000        0x0 tmp/AssemblyFunc.o

.rodata         0x0000000000504900      0x1c5
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.1
                0x0000000000504900       0x3f tmp/Timer.o
 *fill*         0x000000000050493f        0x1 
 .rodata        0x0000000000504940       0x20 tmp/Timer.o
 .rodata.str1.1
                0x0000000000504960       0x32 tmp/Keyboard.o
 *fill*         0x0000000000504992        0x2 
 .rodata        0x0000000000504994       0x44 tmp/Keyboard.o
 .rodata.str1.1
                0x00000000005049d8       0x41 tmp/Clubcos0.o
 .rodata.str1.1
                0x0000000000504a19        0xc tmp/Functions.o
 *fill*         0x0000000000504a25        0x3 
 .rodata        0x0000000000504a28       0x84 tmp/Functions.o
 .rodata.str1.1
                0x0000000000504aac       0x19 tmp/Interrupt.o

.rel.dyn        0x0000000000504ac8        0x0
 .rel.iplt      0x0000000000000000        0x0 tmp/AssemblyFunc.o

.rodata1
 *(.rodata1)
                0x0000000000504c00                . = ALIGN (0x200)

.data           0x0000000000504c00     0x12c0
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000504c00        0x0 tmp/GDT.o
 .data          0x0000000000504c00        0x0 tmp/Timer.o
 .data          0x0000000000504c00        0x0 tmp/Keyboard.o
 .data          0x0000000000504c00        0x0 tmp/PIC.o
 .data          0x0000000000504c00        0x0 tmp/Clubcos0.o
 .data          0x0000000000504c00        0x0 tmp/Functions.o
 .data          0x0000000000504c00        0x0 tmp/Memory.o
 .data          0x0000000000504c00       0xfc tmp/Mouse.o
 .data          0x0000000000504cfc        0x0 tmp/Interrupt.o
 .data          0x0000000000504cfc        0x0 tmp/IDT.o
 .data          0x0000000000504cfc        0x0 tmp/KernelData.o
 .data          0x0000000000504cfc        0x0 tmp/Queue.o
 .data          0x0000000000504cfc        0x0 tmp/Task.o
 .data          0x0000000000504cfc        0x0 tmp/DynArray.o
 *fill*         0x0000000000504cfc        0x4 
 .data          0x0000000000504d00      0x1bf tmp/KeyTable.o
                0x0000000000504d00                g_KeyTable
 *fill*         0x0000000000504ebf        0x1 
 .data          0x0000000000504ec0     0x1000 tmp/EnglishFont.o
                0x0000000000504ec0                g_vucEnglishFont
 .data          0x0000000000505ec0        0x0 tmp/Graphic.o

.igot.plt       0x0000000000505ec0        0x0
 .igot.plt      0x0000000000000000        0x0 tmp/AssemblyFunc.o

.data1
 *(.data1)
                0x0000000000505ec0                __bss_start = .

.bss            0x0000000000505ec0    0x27128
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000505ec0        0x0 tmp/GDT.o
 .bss           0x0000000000505ec0        0x0 tmp/Timer.o
 .bss           0x0000000000505ec0        0xd tmp/Keyboard.o
                0x0000000000505ec0                g_Keyboard
 *fill*         0x0000000000505ecd        0x3 
 .bss           0x0000000000505ed0        0x0 tmp/PIC.o
 .bss           0x0000000000505ed0        0x0 tmp/Clubcos0.o
 .bss           0x0000000000505ed0        0x0 tmp/Functions.o
 .bss           0x0000000000505ed0        0x0 tmp/Memory.o
 .bss           0x0000000000505ed0       0x10 tmp/Mouse.o
                0x0000000000505ed0                g_Mouse
 .bss           0x0000000000505ee0        0x0 tmp/Interrupt.o
 .bss           0x0000000000505ee0        0x0 tmp/IDT.o
 .bss           0x0000000000505ee0      0x800 tmp/KernelData.o
 .bss           0x00000000005066e0        0x0 tmp/Queue.o
 .bss           0x00000000005066e0        0x0 tmp/Task.o
 .bss           0x00000000005066e0        0x0 tmp/DynArray.o
 .bss           0x00000000005066e0        0x0 tmp/KeyTable.o
 .bss           0x00000000005066e0        0x0 tmp/EnglishFont.o
 .bss           0x00000000005066e0        0x0 tmp/Graphic.o
 *(COMMON)
 COMMON         0x00000000005066e0      0x80d tmp/Timer.o
                0x00000000005066e0                g_Timer
 *fill*         0x0000000000506eed       0x13 
 COMMON         0x0000000000506f00       0x20 tmp/Memory.o
                0x0000000000506f00                g_DynMem
 COMMON         0x0000000000506f20       0x11 tmp/KernelData.o
                0x0000000000506f20                g_kData
 *fill*         0x0000000000506f31        0xf 
 COMMON         0x0000000000506f40    0x260a8 tmp/Task.o
                0x0000000000506f40                g_TaskStruct
                0x000000000052cfe8                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x000000000052cfe8                . = ALIGN (0x4)
                0x000000000052cfe8                . = ALIGN (0x4)
                0x000000000052cfe8                _end = .
                0x000000000052cfe8                PROVIDE (end, .)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text       0x000000000052cfe8        0x0
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000000000000        0x0 tmp/AssemblyFunc.o

.rela.text
 *(.rela.text .rela.text.* .rela.gnu.linkonce.t.*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)

.rela.rodata
 *(.rela.rodata .rela.rodata.* .rela.gnu.linkonce.r.*)

.rel.data.rel.ro
 *(.rel.data.rel.ro* .rel.gnu.linkonce.d.rel.ro.*)

.rela.data.rel.ro
 *(.rela.data.rel.ro* .rela.gnu.linkonce.d.rel.ro.*)

.rel.data
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)

.rela.data
 *(.rela.data .rela.data.* .rela.gnu.linkonce.d.*)

.rel.tdata
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)

.rela.tdata
 *(.rela.tdata .rela.tdata.* .rela.gnu.linkonce.td.*)

.rel.tbss
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)

.rela.tbss
 *(.rela.tbss .rela.tbss.* .rela.gnu.linkonce.tb.*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)

.rela.bss
 *(.rela.bss .rela.bss.* .rela.gnu.linkonce.b.*)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.init
 *(.init)

.plt
 *(.plt)

.fini
 *(.fini)
                0x000000000052cfe8                PROVIDE (__etext, .)
                0x000000000052cfe8                PROVIDE (_etext, .)
                0x000000000052cfe8                PROVIDE (etext, .)

.preinit_array  0x000000000052cfe8        0x0
                0x000000000052cfe8                PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                0x000000000052cfe8                PROVIDE (__preinit_array_end, .)

.init_array     0x000000000052cfe8        0x0
                0x000000000052cfe8                PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*))
 *(.init_array)
                0x000000000052cfe8                PROVIDE (__init_array_end, .)

.fini_array     0x000000000052cfe8        0x0
                0x000000000052cfe8                PROVIDE (__fini_array_start, .)
 *(.fini_array)
 *(SORT(.fini_array.*))
                0x000000000052cfe8                PROVIDE (__fini_array_end, .)
                0x000000000052cfe8                _edata = .
                0x000000000052cfe8                PROVIDE (edata, .)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)

.got.plt
 *(.got.plt)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame       0x000000000052cfe8      0xd04
 *(.eh_frame)
 .eh_frame      0x000000000052cfe8       0x48 tmp/GDT.o
 .eh_frame      0x000000000052d030       0xcc tmp/Timer.o
                                         0xe4 (size before relaxing)
 .eh_frame      0x000000000052d0fc      0x21c tmp/Keyboard.o
                                        0x234 (size before relaxing)
 .eh_frame      0x000000000052d318       0x70 tmp/PIC.o
                                         0x88 (size before relaxing)
 .eh_frame      0x000000000052d388       0x5c tmp/Clubcos0.o
                                         0x74 (size before relaxing)
 .eh_frame      0x000000000052d3e4      0x1c8 tmp/Functions.o
                                        0x1e0 (size before relaxing)
 .eh_frame      0x000000000052d5ac      0x100 tmp/Memory.o
                                        0x118 (size before relaxing)
 .eh_frame      0x000000000052d6ac      0x118 tmp/Mouse.o
                                        0x130 (size before relaxing)
 .eh_frame      0x000000000052d7c4       0x14 tmp/Interrupt.o
                                         0x2c (size before relaxing)
 .eh_frame      0x000000000052d7d8       0x14 tmp/IDT.o
                                         0x2c (size before relaxing)
 .eh_frame      0x000000000052d7ec       0x18 tmp/KernelData.o
                                         0x30 (size before relaxing)
 .eh_frame      0x000000000052d804       0x8c tmp/Queue.o
                                         0xa4 (size before relaxing)
 .eh_frame      0x000000000052d890      0x194 tmp/Task.o
                                        0x1ac (size before relaxing)
 .eh_frame      0x000000000052da24       0x54 tmp/DynArray.o
                                         0x6c (size before relaxing)
 .eh_frame      0x000000000052da78      0x274 tmp/Graphic.o
                                        0x28c (size before relaxing)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 tmp/GDT.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 tmp/Timer.o
 .comment       0x0000000000000000       0x12 tmp/Keyboard.o
 .comment       0x0000000000000000       0x12 tmp/PIC.o
 .comment       0x0000000000000000       0x12 tmp/Clubcos0.o
 .comment       0x0000000000000000       0x12 tmp/Functions.o
 .comment       0x0000000000000000       0x12 tmp/Memory.o
 .comment       0x0000000000000000       0x12 tmp/Mouse.o
 .comment       0x0000000000000000       0x12 tmp/Interrupt.o
 .comment       0x0000000000000000       0x12 tmp/IDT.o
 .comment       0x0000000000000000       0x12 tmp/KernelData.o
 .comment       0x0000000000000000       0x12 tmp/Queue.o
 .comment       0x0000000000000000       0x12 tmp/Task.o
 .comment       0x0000000000000000       0x12 tmp/DynArray.o
 .comment       0x0000000000000000       0x12 tmp/KeyTable.o
 .comment       0x0000000000000000       0x12 tmp/EnglishFont.o
 .comment       0x0000000000000000       0x12 tmp/Graphic.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
Address of section .text set to 0x500000
LOAD tmp/AssemblyFunc.o
LOAD tmp/GDT.o
LOAD tmp/Timer.o
LOAD tmp/Keyboard.o
LOAD tmp/PIC.o
LOAD tmp/Clubcos0.o
LOAD tmp/Functions.o
LOAD tmp/Memory.o
LOAD tmp/Mouse.o
LOAD tmp/Interrupt.o
LOAD tmp/IDT.o
LOAD tmp/KernelData.o
LOAD tmp/Queue.o
LOAD tmp/Task.o
LOAD tmp/DynArray.o
LOAD tmp/KeyTable.o
LOAD tmp/EnglishFont.o
LOAD tmp/Graphic.o
OUTPUT(tmp/C_Kernel.exe elf32-i386)
