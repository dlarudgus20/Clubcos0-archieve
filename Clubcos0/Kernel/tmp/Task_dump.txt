
tmp/Task.o:     file format elf32-i386


Disassembly of section .text:

00000000 <InitTss>:
   0:	83 ec 0c             	sub    esp,0xc
   3:	89 1c 24             	mov    DWORD PTR [esp],ebx
   6:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
   a:	89 74 24 04          	mov    DWORD PTR [esp+0x4],esi
   e:	0f b7 54 24 14       	movzx  edx,WORD PTR [esp+0x14]
  13:	89 7c 24 08          	mov    DWORD PTR [esp+0x8],edi
  17:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
  1b:	0f b7 74 24 18       	movzx  esi,WORD PTR [esp+0x18]
  20:	0f b7 5c 24 20       	movzx  ebx,WORD PTR [esp+0x20]
  25:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
  29:	c7 40 24 02 02 00 00 	mov    DWORD PTR [eax+0x24],0x202
  30:	89 70 4c             	mov    DWORD PTR [eax+0x4c],esi
  33:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
  37:	89 58 50             	mov    DWORD PTR [eax+0x50],ebx
  3a:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
  3d:	89 78 20             	mov    DWORD PTR [eax+0x20],edi
  40:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
  44:	c7 40 44 00 00 00 00 	mov    DWORD PTR [eax+0x44],0x0
  4b:	c7 40 40 00 00 00 00 	mov    DWORD PTR [eax+0x40],0x0
  52:	c7 40 34 00 00 00 00 	mov    DWORD PTR [eax+0x34],0x0
  59:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
  60:	c7 40 2c 00 00 00 00 	mov    DWORD PTR [eax+0x2c],0x0
  67:	c7 40 28 00 00 00 00 	mov    DWORD PTR [eax+0x28],0x0
  6e:	89 48 38             	mov    DWORD PTR [eax+0x38],ecx
  71:	89 48 3c             	mov    DWORD PTR [eax+0x3c],ecx
  74:	89 50 5c             	mov    DWORD PTR [eax+0x5c],edx
  77:	89 50 58             	mov    DWORD PTR [eax+0x58],edx
  7a:	89 50 54             	mov    DWORD PTR [eax+0x54],edx
  7d:	89 50 48             	mov    DWORD PTR [eax+0x48],edx
  80:	c7 40 60 00 00 00 00 	mov    DWORD PTR [eax+0x60],0x0
  87:	c7 40 64 00 00 00 40 	mov    DWORD PTR [eax+0x64],0x40000000
  8e:	83 c4 0c             	add    esp,0xc
  91:	c3                   	ret    
  92:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
  99:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000000a0 <InitTssDescriptor>:
  a0:	83 ec 0c             	sub    esp,0xc
  a3:	89 7c 24 08          	mov    DWORD PTR [esp+0x8],edi
  a7:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
  ab:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
  af:	0f b6 54 24 18       	movzx  edx,BYTE PTR [esp+0x18]
  b4:	89 1c 24             	mov    DWORD PTR [esp],ebx
  b7:	89 74 24 04          	mov    DWORD PTR [esp+0x4],esi
  bb:	0f b6 48 06          	movzx  ecx,BYTE PTR [eax+0x6]
  bf:	89 fe                	mov    esi,edi
  c1:	c1 ee 10             	shr    esi,0x10
  c4:	83 e2 03             	and    edx,0x3
  c7:	89 f3                	mov    ebx,esi
  c9:	88 58 04             	mov    BYTE PTR [eax+0x4],bl
  cc:	c1 e2 05             	shl    edx,0x5
  cf:	89 fb                	mov    ebx,edi
  d1:	c1 eb 18             	shr    ebx,0x18
  d4:	83 ca 89             	or     edx,0xffffff89
  d7:	83 e1 10             	and    ecx,0x10
  da:	88 58 07             	mov    BYTE PTR [eax+0x7],bl
  dd:	88 50 05             	mov    BYTE PTR [eax+0x5],dl
  e0:	88 48 06             	mov    BYTE PTR [eax+0x6],cl
  e3:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
  e6:	66 89 78 02          	mov    WORD PTR [eax+0x2],di
  ea:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
  ee:	66 c7 00 68 00       	mov    WORD PTR [eax],0x68
  f3:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
  f7:	83 c4 0c             	add    esp,0xc
  fa:	c3                   	ret    
  fb:	90                   	nop
  fc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00000100 <InitTaskStruct>:
 100:	83 ec 1c             	sub    esp,0x1c
 103:	c7 44 24 08 00 c0 01 	mov    DWORD PTR [esp+0x8],0x1c000
 10a:	00 
 10b:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
 112:	00 
 113:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 11a:	e8 fc ff ff ff       	call   11b <InitTaskStruct+0x1b>
 11f:	c7 44 24 08 24 00 00 	mov    DWORD PTR [esp+0x8],0x24
 126:	00 
 127:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
 12e:	00 
 12f:	c7 04 24 78 60 02 00 	mov    DWORD PTR [esp],0x26078
 136:	e8 fc ff ff ff       	call   137 <InitTaskStruct+0x37>
 13b:	c7 44 24 08 0c d0 01 	mov    DWORD PTR [esp+0x8],0x1d00c
 142:	00 
 143:	c7 44 24 04 0c c0 01 	mov    DWORD PTR [esp+0x4],0x1c00c
 14a:	00 
 14b:	c7 04 24 00 c0 01 00 	mov    DWORD PTR [esp],0x1c000
 152:	e8 fc ff ff ff       	call   153 <InitTaskStruct+0x53>
 157:	c7 44 24 08 18 e0 01 	mov    DWORD PTR [esp+0x8],0x1e018
 15e:	00 
 15f:	c7 44 24 04 18 d0 01 	mov    DWORD PTR [esp+0x4],0x1d018
 166:	00 
 167:	c7 04 24 0c d0 01 00 	mov    DWORD PTR [esp],0x1d00c
 16e:	e8 fc ff ff ff       	call   16f <InitTaskStruct+0x6f>
 173:	c7 44 24 08 24 f0 01 	mov    DWORD PTR [esp+0x8],0x1f024
 17a:	00 
 17b:	c7 44 24 04 24 e0 01 	mov    DWORD PTR [esp+0x4],0x1e024
 182:	00 
 183:	c7 04 24 18 e0 01 00 	mov    DWORD PTR [esp],0x1e018
 18a:	e8 fc ff ff ff       	call   18b <InitTaskStruct+0x8b>
 18f:	c7 44 24 08 30 00 02 	mov    DWORD PTR [esp+0x8],0x20030
 196:	00 
 197:	c7 44 24 04 30 f0 01 	mov    DWORD PTR [esp+0x4],0x1f030
 19e:	00 
 19f:	c7 04 24 24 f0 01 00 	mov    DWORD PTR [esp],0x1f024
 1a6:	e8 fc ff ff ff       	call   1a7 <InitTaskStruct+0xa7>
 1ab:	c7 44 24 08 3c 10 02 	mov    DWORD PTR [esp+0x8],0x2103c
 1b2:	00 
 1b3:	c7 44 24 04 3c 00 02 	mov    DWORD PTR [esp+0x4],0x2003c
 1ba:	00 
 1bb:	c7 04 24 30 00 02 00 	mov    DWORD PTR [esp],0x20030
 1c2:	e8 fc ff ff ff       	call   1c3 <InitTaskStruct+0xc3>
 1c7:	c7 44 24 08 48 20 02 	mov    DWORD PTR [esp+0x8],0x22048
 1ce:	00 
 1cf:	c7 44 24 04 48 10 02 	mov    DWORD PTR [esp+0x4],0x21048
 1d6:	00 
 1d7:	c7 04 24 3c 10 02 00 	mov    DWORD PTR [esp],0x2103c
 1de:	e8 fc ff ff ff       	call   1df <InitTaskStruct+0xdf>
 1e3:	c7 44 24 08 54 30 02 	mov    DWORD PTR [esp+0x8],0x23054
 1ea:	00 
 1eb:	c7 44 24 04 54 20 02 	mov    DWORD PTR [esp+0x4],0x22054
 1f2:	00 
 1f3:	c7 04 24 48 20 02 00 	mov    DWORD PTR [esp],0x22048
 1fa:	e8 fc ff ff ff       	call   1fb <InitTaskStruct+0xfb>
 1ff:	c7 44 24 08 60 40 02 	mov    DWORD PTR [esp+0x8],0x24060
 206:	00 
 207:	c7 44 24 04 60 30 02 	mov    DWORD PTR [esp+0x4],0x23060
 20e:	00 
 20f:	c7 04 24 54 30 02 00 	mov    DWORD PTR [esp],0x23054
 216:	e8 fc ff ff ff       	call   217 <InitTaskStruct+0x117>
 21b:	c7 44 24 08 6c 50 02 	mov    DWORD PTR [esp+0x8],0x2506c
 222:	00 
 223:	c7 44 24 04 6c 40 02 	mov    DWORD PTR [esp+0x4],0x2406c
 22a:	00 
 22b:	c7 04 24 60 40 02 00 	mov    DWORD PTR [esp],0x24060
 232:	e8 fc ff ff ff       	call   233 <InitTaskStruct+0x133>
 237:	c7 44 24 08 78 60 02 	mov    DWORD PTR [esp+0x8],0x26078
 23e:	00 
 23f:	c7 44 24 04 78 50 02 	mov    DWORD PTR [esp+0x4],0x25078
 246:	00 
 247:	c7 04 24 6c 50 02 00 	mov    DWORD PTR [esp],0x2506c
 24e:	e8 fc ff ff ff       	call   24f <InitTaskStruct+0x14f>
 253:	ba 08 00 00 00       	mov    edx,0x8
 258:	80 25 04 00 00 00 fc 	and    BYTE PTR ds:0x4,0xfc
 25f:	89 d1                	mov    ecx,edx
 261:	a1 04 00 00 00       	mov    eax,ds:0x4
 266:	c1 e9 10             	shr    ecx,0x10
 269:	66 89 15 1a 00 60 00 	mov    WORD PTR ds:0x60001a,dx
 270:	c1 ea 18             	shr    edx,0x18
 273:	88 0d 1c 00 60 00    	mov    BYTE PTR ds:0x60001c,cl
 279:	88 15 1f 00 60 00    	mov    BYTE PTR ds:0x60001f,dl
 27f:	83 e0 03             	and    eax,0x3
 282:	83 c8 04             	or     eax,0x4
 285:	a3 04 00 00 00       	mov    ds:0x4,eax
 28a:	0f b6 05 1e 00 60 00 	movzx  eax,BYTE PTR ds:0x60001e
 291:	66 c7 05 18 00 60 00 	mov    WORD PTR ds:0x600018,0x68
 298:	68 00 
 29a:	c6 05 1d 00 60 00 89 	mov    BYTE PTR ds:0x60001d,0x89
 2a1:	c7 05 00 00 00 00 03 	mov    DWORD PTR ds:0x0,0x3
 2a8:	00 00 00 
 2ab:	83 e0 10             	and    eax,0x10
 2ae:	a2 1e 00 60 00       	mov    ds:0x60001e,al
 2b3:	c7 04 24 18 00 00 00 	mov    DWORD PTR [esp],0x18
 2ba:	c7 05 7c 60 02 00 01 	mov    DWORD PTR ds:0x2607c,0x1
 2c1:	00 00 00 
 2c4:	c7 05 9c 60 02 00 00 	mov    DWORD PTR ds:0x2609c,0x0
 2cb:	00 00 00 
 2ce:	e8 fc ff ff ff       	call   2cf <InitTaskStruct+0x1cf>
 2d3:	0f b6 05 74 00 00 00 	movzx  eax,BYTE PTR ds:0x74
 2da:	c7 04 24 00 00 20 00 	mov    DWORD PTR [esp],0x200000
 2e1:	c7 05 70 00 00 00 04 	mov    DWORD PTR ds:0x70,0x4
 2e8:	00 00 00 
 2eb:	c7 05 98 60 02 00 00 	mov    DWORD PTR ds:0x26098,0x0
 2f2:	00 00 00 
 2f5:	83 e0 fc             	and    eax,0xfffffffc
 2f8:	83 c8 01             	or     eax,0x1
 2fb:	a2 74 00 00 00       	mov    ds:0x74,al
 300:	a1 74 00 00 00       	mov    eax,ds:0x74
 305:	83 e0 03             	and    eax,0x3
 308:	83 c8 20             	or     eax,0x20
 30b:	a3 74 00 00 00       	mov    ds:0x74,eax
 310:	e8 fc ff ff ff       	call   311 <InitTaskStruct+0x211>
 315:	ba 78 00 00 00       	mov    edx,0x78
 31a:	89 d1                	mov    ecx,edx
 31c:	66 89 15 22 00 60 00 	mov    WORD PTR ds:0x600022,dx
 323:	c1 e9 10             	shr    ecx,0x10
 326:	c1 ea 18             	shr    edx,0x18
 329:	66 c7 05 20 00 60 00 	mov    WORD PTR ds:0x600020,0x68
 330:	68 00 
 332:	88 0d 24 00 60 00    	mov    BYTE PTR ds:0x600024,cl
 338:	a3 b0 00 00 00       	mov    ds:0xb0,eax
 33d:	a3 b4 00 00 00       	mov    ds:0xb4,eax
 342:	0f b6 05 26 00 60 00 	movzx  eax,BYTE PTR ds:0x600026
 349:	88 15 27 00 60 00    	mov    BYTE PTR ds:0x600027,dl
 34f:	c6 05 25 00 60 00 89 	mov    BYTE PTR ds:0x600025,0x89
 356:	c7 05 98 00 00 00 30 	mov    DWORD PTR ds:0x98,0xd30
 35d:	0d 00 00 
 360:	83 e0 10             	and    eax,0x10
 363:	a2 26 00 60 00       	mov    ds:0x600026,al
 368:	c7 44 24 04 70 00 00 	mov    DWORD PTR [esp+0x4],0x70
 36f:	00 
 370:	c7 04 24 60 40 02 00 	mov    DWORD PTR [esp],0x24060
 377:	c7 05 9c 00 00 00 02 	mov    DWORD PTR ds:0x9c,0x202
 37e:	02 00 00 
 381:	c7 05 bc 00 00 00 00 	mov    DWORD PTR ds:0xbc,0x0
 388:	00 00 00 
 38b:	c7 05 b8 00 00 00 00 	mov    DWORD PTR ds:0xb8,0x0
 392:	00 00 00 
 395:	c7 05 ac 00 00 00 00 	mov    DWORD PTR ds:0xac,0x0
 39c:	00 00 00 
 39f:	c7 05 a8 00 00 00 00 	mov    DWORD PTR ds:0xa8,0x0
 3a6:	00 00 00 
 3a9:	c7 05 a4 00 00 00 00 	mov    DWORD PTR ds:0xa4,0x0
 3b0:	00 00 00 
 3b3:	c7 05 a0 00 00 00 00 	mov    DWORD PTR ds:0xa0,0x0
 3ba:	00 00 00 
 3bd:	c7 05 d4 00 00 00 10 	mov    DWORD PTR ds:0xd4,0x10
 3c4:	00 00 00 
 3c7:	c7 05 d0 00 00 00 10 	mov    DWORD PTR ds:0xd0,0x10
 3ce:	00 00 00 
 3d1:	c7 05 cc 00 00 00 10 	mov    DWORD PTR ds:0xcc,0x10
 3d8:	00 00 00 
 3db:	c7 05 c0 00 00 00 10 	mov    DWORD PTR ds:0xc0,0x10
 3e2:	00 00 00 
 3e5:	c7 05 c4 00 00 00 08 	mov    DWORD PTR ds:0xc4,0x8
 3ec:	00 00 00 
 3ef:	c7 05 c8 00 00 00 10 	mov    DWORD PTR ds:0xc8,0x10
 3f6:	00 00 00 
 3f9:	c7 05 d8 00 00 00 00 	mov    DWORD PTR ds:0xd8,0x0
 400:	00 00 00 
 403:	c7 05 dc 00 00 00 00 	mov    DWORD PTR ds:0xdc,0x40000000
 40a:	00 00 40 
 40d:	e8 fc ff ff ff       	call   40e <InitTaskStruct+0x30e>
 412:	c7 05 a0 60 02 00 00 	mov    DWORD PTR ds:0x260a0,0x0
 419:	00 00 00 
 41c:	83 c4 1c             	add    esp,0x1c
 41f:	c3                   	ret    

00000420 <CreateTask>:
 420:	55                   	push   ebp
 421:	57                   	push   edi
 422:	56                   	push   esi
 423:	53                   	push   ebx
 424:	83 ec 2c             	sub    esp,0x2c
 427:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
 42b:	e8 fc ff ff ff       	call   42c <CreateTask+0xc>
 430:	69 fb 0c 10 00 00    	imul   edi,ebx,0x100c
 436:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
 43a:	81 c7 00 c0 01 00    	add    edi,0x1c000
 440:	8d b7 00 00 00 00    	lea    esi,[edi+0x0]
 446:	e8 fc ff ff ff       	call   447 <CreateTask+0x27>
 44b:	8b 6e 04             	mov    ebp,DWORD PTR [esi+0x4]
 44e:	8b 4e 08             	mov    ecx,DWORD PTR [esi+0x8]
 451:	39 cd                	cmp    ebp,ecx
 453:	0f 84 77 01 00 00    	je     5d0 <CreateTask+0x1b0>
 459:	b8 e0 00 00 00       	mov    eax,0xe0
 45e:	ba 02 00 00 00       	mov    edx,0x2
 463:	eb 15                	jmp    47a <CreateTask+0x5a>
 465:	8d 76 00             	lea    esi,[esi+0x0]
 468:	83 c2 01             	add    edx,0x1
 46b:	83 c0 70             	add    eax,0x70
 46e:	81 fa 00 04 00 00    	cmp    edx,0x400
 474:	0f 84 56 01 00 00    	je     5d0 <CreateTask+0x1b0>
 47a:	83 38 00             	cmp    DWORD PTR [eax],0x0
 47d:	75 e9                	jne    468 <CreateTask+0x48>
 47f:	8b 87 00 00 00 00    	mov    eax,DWORD PTR [edi+0x0]
 485:	29 c1                	sub    ecx,eax
 487:	29 c5                	sub    ebp,eax
 489:	c1 fd 02             	sar    ebp,0x2
 48c:	c1 f9 02             	sar    ecx,0x2
 48f:	29 e9                	sub    ecx,ebp
 491:	8b 2d 9c 60 02 00    	mov    ebp,DWORD PTR ds:0x2609c
 497:	0f b6 45 04          	movzx  eax,BYTE PTR [ebp+0x4]
 49b:	0f b6 7d 05          	movzx  edi,BYTE PTR [ebp+0x5]
 49f:	c0 e8 02             	shr    al,0x2
 4a2:	0f b6 c0             	movzx  eax,al
 4a5:	c1 e7 06             	shl    edi,0x6
 4a8:	09 c7                	or     edi,eax
 4aa:	0f b6 45 06          	movzx  eax,BYTE PTR [ebp+0x6]
 4ae:	c1 e0 0e             	shl    eax,0xe
 4b1:	09 f8                	or     eax,edi
 4b3:	0f b6 7d 07          	movzx  edi,BYTE PTR [ebp+0x7]
 4b7:	c1 e7 16             	shl    edi,0x16
 4ba:	09 c7                	or     edi,eax
 4bc:	31 c0                	xor    eax,eax
 4be:	39 df                	cmp    edi,ebx
 4c0:	0f 94 c0             	sete   al
 4c3:	31 ff                	xor    edi,edi
 4c5:	39 c1                	cmp    ecx,eax
 4c7:	0f 86 ec 00 00 00    	jbe    5b9 <CreateTask+0x199>
 4cd:	6b c2 70             	imul   eax,edx,0x70
 4d0:	8d 4a 03             	lea    ecx,[edx+0x3]
 4d3:	89 88 00 00 00 00    	mov    DWORD PTR [eax+0x0],ecx
 4d9:	8d b8 00 00 00 00    	lea    edi,[eax+0x0]
 4df:	8d 04 9d 01 00 00 00 	lea    eax,[ebx*4+0x1]
 4e6:	88 47 04             	mov    BYTE PTR [edi+0x4],al
 4e9:	89 d8                	mov    eax,ebx
 4eb:	c1 e8 06             	shr    eax,0x6
 4ee:	88 47 05             	mov    BYTE PTR [edi+0x5],al
 4f1:	89 d8                	mov    eax,ebx
 4f3:	c1 e8 0e             	shr    eax,0xe
 4f6:	c1 eb 16             	shr    ebx,0x16
 4f9:	88 5f 07             	mov    BYTE PTR [edi+0x7],bl
 4fc:	8d 4f 08             	lea    ecx,[edi+0x8]
 4ff:	88 47 06             	mov    BYTE PTR [edi+0x6],al
 502:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
 506:	89 cb                	mov    ebx,ecx
 508:	c7 47 2c 02 02 00 00 	mov    DWORD PTR [edi+0x2c],0x202
 50f:	c1 eb 10             	shr    ebx,0x10
 512:	c7 47 4c 00 00 00 00 	mov    DWORD PTR [edi+0x4c],0x0
 519:	c7 47 48 00 00 00 00 	mov    DWORD PTR [edi+0x48],0x0
 520:	89 47 28             	mov    DWORD PTR [edi+0x28],eax
 523:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
 527:	c7 47 3c 00 00 00 00 	mov    DWORD PTR [edi+0x3c],0x0
 52e:	c7 47 38 00 00 00 00 	mov    DWORD PTR [edi+0x38],0x0
 535:	c7 47 34 00 00 00 00 	mov    DWORD PTR [edi+0x34],0x0
 53c:	89 47 40             	mov    DWORD PTR [edi+0x40],eax
 53f:	89 47 44             	mov    DWORD PTR [edi+0x44],eax
 542:	8d 04 d5 18 00 60 00 	lea    eax,[edx*8+0x600018]
 549:	c7 47 30 00 00 00 00 	mov    DWORD PTR [edi+0x30],0x0
 550:	c7 47 64 10 00 00 00 	mov    DWORD PTR [edi+0x64],0x10
 557:	c7 47 60 10 00 00 00 	mov    DWORD PTR [edi+0x60],0x10
 55e:	c7 47 5c 10 00 00 00 	mov    DWORD PTR [edi+0x5c],0x10
 565:	c7 47 50 10 00 00 00 	mov    DWORD PTR [edi+0x50],0x10
 56c:	c7 47 54 08 00 00 00 	mov    DWORD PTR [edi+0x54],0x8
 573:	c7 47 58 10 00 00 00 	mov    DWORD PTR [edi+0x58],0x10
 57a:	c7 47 68 00 00 00 00 	mov    DWORD PTR [edi+0x68],0x0
 581:	c7 47 6c 00 00 00 40 	mov    DWORD PTR [edi+0x6c],0x40000000
 588:	66 c7 04 d5 18 00 60 	mov    WORD PTR [edx*8+0x600018],0x68
 58f:	00 68 00 
 592:	0f b6 50 06          	movzx  edx,BYTE PTR [eax+0x6]
 596:	66 89 48 02          	mov    WORD PTR [eax+0x2],cx
 59a:	c1 e9 18             	shr    ecx,0x18
 59d:	88 58 04             	mov    BYTE PTR [eax+0x4],bl
 5a0:	88 48 07             	mov    BYTE PTR [eax+0x7],cl
 5a3:	83 e2 10             	and    edx,0x10
 5a6:	c6 40 05 89          	mov    BYTE PTR [eax+0x5],0x89
 5aa:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
 5ad:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
 5b1:	89 34 24             	mov    DWORD PTR [esp],esi
 5b4:	e8 fc ff ff ff       	call   5b5 <CreateTask+0x195>
 5b9:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
 5bd:	89 04 24             	mov    DWORD PTR [esp],eax
 5c0:	e8 fc ff ff ff       	call   5c1 <CreateTask+0x1a1>
 5c5:	83 c4 2c             	add    esp,0x2c
 5c8:	89 f8                	mov    eax,edi
 5ca:	5b                   	pop    ebx
 5cb:	5e                   	pop    esi
 5cc:	5f                   	pop    edi
 5cd:	5d                   	pop    ebp
 5ce:	c3                   	ret    
 5cf:	90                   	nop
 5d0:	31 ff                	xor    edi,edi
 5d2:	eb e5                	jmp    5b9 <CreateTask+0x199>
 5d4:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 5da:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

000005e0 <TerminateTask>:
 5e0:	55                   	push   ebp
 5e1:	57                   	push   edi
 5e2:	56                   	push   esi
 5e3:	53                   	push   ebx
 5e4:	83 ec 1c             	sub    esp,0x1c
 5e7:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
 5eb:	81 fb 00 00 00 00    	cmp    ebx,0x0
 5f1:	72 15                	jb     608 <TerminateTask+0x28>
 5f3:	81 fb 00 c0 01 00    	cmp    ebx,0x1c000
 5f9:	73 0d                	jae    608 <TerminateTask+0x28>
 5fb:	81 fb 70 00 00 00    	cmp    ebx,0x70
 601:	77 15                	ja     618 <TerminateTask+0x38>
 603:	90                   	nop
 604:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 608:	83 c4 1c             	add    esp,0x1c
 60b:	31 c0                	xor    eax,eax
 60d:	5b                   	pop    ebx
 60e:	5e                   	pop    esi
 60f:	5f                   	pop    edi
 610:	5d                   	pop    ebp
 611:	c3                   	ret    
 612:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 618:	e8 fc ff ff ff       	call   619 <TerminateTask+0x39>
 61d:	89 c6                	mov    esi,eax
 61f:	e8 fc ff ff ff       	call   620 <TerminateTask+0x40>
 624:	a1 9c 60 02 00       	mov    eax,ds:0x2609c
 629:	39 d8                	cmp    eax,ebx
 62b:	0f 84 97 00 00 00    	je     6c8 <TerminateTask+0xe8>
 631:	0f b6 43 04          	movzx  eax,BYTE PTR [ebx+0x4]
 635:	0f b6 53 05          	movzx  edx,BYTE PTR [ebx+0x5]
 639:	c0 e8 02             	shr    al,0x2
 63c:	0f b6 c0             	movzx  eax,al
 63f:	c1 e2 06             	shl    edx,0x6
 642:	09 c2                	or     edx,eax
 644:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
 648:	c1 e0 0e             	shl    eax,0xe
 64b:	09 d0                	or     eax,edx
 64d:	0f b6 53 07          	movzx  edx,BYTE PTR [ebx+0x7]
 651:	89 5c 24 04          	mov    DWORD PTR [esp+0x4],ebx
 655:	c1 e2 16             	shl    edx,0x16
 658:	09 c2                	or     edx,eax
 65a:	69 c2 0c 10 00 00    	imul   eax,edx,0x100c
 660:	8d b8 00 c0 01 00    	lea    edi,[eax+0x1c000]
 666:	05 00 c0 01 00       	add    eax,0x1c000
 66b:	8b 80 00 00 00 00    	mov    eax,DWORD PTR [eax+0x0]
 671:	8b 57 04             	mov    edx,DWORD PTR [edi+0x4]
 674:	89 04 24             	mov    DWORD PTR [esp],eax
 677:	29 c2                	sub    edx,eax
 679:	c1 fa 02             	sar    edx,0x2
 67c:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
 680:	e8 fc ff ff ff       	call   681 <TerminateTask+0xa1>
 685:	39 47 04             	cmp    DWORD PTR [edi+0x4],eax
 688:	89 c5                	mov    ebp,eax
 68a:	74 25                	je     6b1 <TerminateTask+0xd1>
 68c:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 690:	89 3c 24             	mov    DWORD PTR [esp],edi
 693:	e8 fc ff ff ff       	call   694 <TerminateTask+0xb4>
 698:	39 6f 04             	cmp    DWORD PTR [edi+0x4],ebp
 69b:	74 14                	je     6b1 <TerminateTask+0xd1>
 69d:	80 4b 04 03          	or     BYTE PTR [ebx+0x4],0x3
 6a1:	89 5c 24 04          	mov    DWORD PTR [esp+0x4],ebx
 6a5:	c7 04 24 6c 50 02 00 	mov    DWORD PTR [esp],0x2506c
 6ac:	e8 fc ff ff ff       	call   6ad <TerminateTask+0xcd>
 6b1:	89 34 24             	mov    DWORD PTR [esp],esi
 6b4:	e8 fc ff ff ff       	call   6b5 <TerminateTask+0xd5>
 6b9:	83 c4 1c             	add    esp,0x1c
 6bc:	31 c0                	xor    eax,eax
 6be:	5b                   	pop    ebx
 6bf:	5e                   	pop    esi
 6c0:	5f                   	pop    edi
 6c1:	5d                   	pop    ebp
 6c2:	c3                   	ret    
 6c3:	90                   	nop
 6c4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 6c8:	80 48 04 03          	or     BYTE PTR [eax+0x4],0x3
 6cc:	89 34 24             	mov    DWORD PTR [esp],esi
 6cf:	e8 fc ff ff ff       	call   6d0 <TerminateTask+0xf0>
 6d4:	eb fe                	jmp    6d4 <TerminateTask+0xf4>
 6d6:	8d 76 00             	lea    esi,[esi+0x0]
 6d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000006e0 <ChangePriorityTask>:
 6e0:	83 ec 3c             	sub    esp,0x3c
 6e3:	31 c0                	xor    eax,eax
 6e5:	89 5c 24 2c          	mov    DWORD PTR [esp+0x2c],ebx
 6e9:	8b 5c 24 40          	mov    ebx,DWORD PTR [esp+0x40]
 6ed:	89 74 24 30          	mov    DWORD PTR [esp+0x30],esi
 6f1:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
 6f5:	89 6c 24 38          	mov    DWORD PTR [esp+0x38],ebp
 6f9:	81 fb 00 00 00 00    	cmp    ebx,0x0
 6ff:	0f 82 f5 00 00 00    	jb     7fa <ChangePriorityTask+0x11a>
 705:	81 fb 00 c0 01 00    	cmp    ebx,0x1c000
 70b:	0f 83 e9 00 00 00    	jae    7fa <ChangePriorityTask+0x11a>
 711:	e8 fc ff ff ff       	call   712 <ChangePriorityTask+0x32>
 716:	89 c5                	mov    ebp,eax
 718:	e8 fc ff ff ff       	call   719 <ChangePriorityTask+0x39>
 71d:	a1 9c 60 02 00       	mov    eax,ds:0x2609c
 722:	39 d8                	cmp    eax,ebx
 724:	0f 84 e6 00 00 00    	je     810 <ChangePriorityTask+0x130>
 72a:	0f b6 43 04          	movzx  eax,BYTE PTR [ebx+0x4]
 72e:	c0 e8 02             	shr    al,0x2
 731:	0f b6 d0             	movzx  edx,al
 734:	0f b6 43 05          	movzx  eax,BYTE PTR [ebx+0x5]
 738:	c1 e0 06             	shl    eax,0x6
 73b:	09 d0                	or     eax,edx
 73d:	0f b6 53 06          	movzx  edx,BYTE PTR [ebx+0x6]
 741:	c1 e2 0e             	shl    edx,0xe
 744:	09 c2                	or     edx,eax
 746:	0f b6 43 07          	movzx  eax,BYTE PTR [ebx+0x7]
 74a:	89 5c 24 04          	mov    DWORD PTR [esp+0x4],ebx
 74e:	c1 e0 16             	shl    eax,0x16
 751:	09 d0                	or     eax,edx
 753:	69 c0 0c 10 00 00    	imul   eax,eax,0x100c
 759:	8d b0 00 c0 01 00    	lea    esi,[eax+0x1c000]
 75f:	8b 90 00 c0 01 00    	mov    edx,DWORD PTR [eax+0x1c000]
 765:	8b 46 04             	mov    eax,DWORD PTR [esi+0x4]
 768:	89 14 24             	mov    DWORD PTR [esp],edx
 76b:	29 d0                	sub    eax,edx
 76d:	c1 f8 02             	sar    eax,0x2
 770:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 774:	e8 fc ff ff ff       	call   775 <ChangePriorityTask+0x95>
 779:	39 46 04             	cmp    DWORD PTR [esi+0x4],eax
 77c:	89 c7                	mov    edi,eax
 77e:	0f 84 cc 00 00 00    	je     850 <ChangePriorityTask+0x170>
 784:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 788:	89 34 24             	mov    DWORD PTR [esp],esi
 78b:	e8 fc ff ff ff       	call   78c <ChangePriorityTask+0xac>
 790:	39 7e 04             	cmp    DWORD PTR [esi+0x4],edi
 793:	0f 84 b7 00 00 00    	je     850 <ChangePriorityTask+0x170>
 799:	69 44 24 44 0c 10 00 	imul   eax,DWORD PTR [esp+0x44],0x100c
 7a0:	00 
 7a1:	89 5c 24 04          	mov    DWORD PTR [esp+0x4],ebx
 7a5:	05 00 c0 01 00       	add    eax,0x1c000
 7aa:	89 04 24             	mov    DWORD PTR [esp],eax
 7ad:	e8 fc ff ff ff       	call   7ae <ChangePriorityTask+0xce>
 7b2:	0f b6 54 24 44       	movzx  edx,BYTE PTR [esp+0x44]
 7b7:	0f b6 43 04          	movzx  eax,BYTE PTR [ebx+0x4]
 7bb:	c1 e2 02             	shl    edx,0x2
 7be:	83 e0 03             	and    eax,0x3
 7c1:	09 d0                	or     eax,edx
 7c3:	88 43 04             	mov    BYTE PTR [ebx+0x4],al
 7c6:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
 7ca:	c1 e8 06             	shr    eax,0x6
 7cd:	88 43 05             	mov    BYTE PTR [ebx+0x5],al
 7d0:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
 7d4:	c1 e8 0e             	shr    eax,0xe
 7d7:	88 43 06             	mov    BYTE PTR [ebx+0x6],al
 7da:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
 7de:	c1 e8 16             	shr    eax,0x16
 7e1:	88 43 07             	mov    BYTE PTR [ebx+0x7],al
 7e4:	b8 01 00 00 00       	mov    eax,0x1
 7e9:	89 2c 24             	mov    DWORD PTR [esp],ebp
 7ec:	88 44 24 1c          	mov    BYTE PTR [esp+0x1c],al
 7f0:	e8 fc ff ff ff       	call   7f1 <ChangePriorityTask+0x111>
 7f5:	0f b6 44 24 1c       	movzx  eax,BYTE PTR [esp+0x1c]
 7fa:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
 7fe:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
 802:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
 806:	8b 6c 24 38          	mov    ebp,DWORD PTR [esp+0x38]
 80a:	83 c4 3c             	add    esp,0x3c
 80d:	c3                   	ret    
 80e:	66 90                	xchg   ax,ax
 810:	0f b6 4c 24 44       	movzx  ecx,BYTE PTR [esp+0x44]
 815:	0f b6 50 04          	movzx  edx,BYTE PTR [eax+0x4]
 819:	c1 e1 02             	shl    ecx,0x2
 81c:	83 e2 03             	and    edx,0x3
 81f:	09 ca                	or     edx,ecx
 821:	88 50 04             	mov    BYTE PTR [eax+0x4],dl
 824:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
 828:	c1 ea 06             	shr    edx,0x6
 82b:	88 50 05             	mov    BYTE PTR [eax+0x5],dl
 82e:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
 832:	c1 ea 0e             	shr    edx,0xe
 835:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
 838:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
 83c:	c1 ea 16             	shr    edx,0x16
 83f:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
 842:	b8 01 00 00 00       	mov    eax,0x1
 847:	eb a0                	jmp    7e9 <ChangePriorityTask+0x109>
 849:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 850:	31 c0                	xor    eax,eax
 852:	eb 95                	jmp    7e9 <ChangePriorityTask+0x109>
 854:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 85a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

00000860 <TaskSchedule>:
 860:	57                   	push   edi
 861:	56                   	push   esi
 862:	53                   	push   ebx
 863:	83 ec 10             	sub    esp,0x10
 866:	e8 fc ff ff ff       	call   867 <TaskSchedule+0x7>
 86b:	89 c3                	mov    ebx,eax
 86d:	e8 fc ff ff ff       	call   86e <TaskSchedule+0xe>
 872:	8b 35 04 c0 01 00    	mov    esi,DWORD PTR ds:0x1c004
 878:	8b 0d 00 c0 01 00    	mov    ecx,DWORD PTR ds:0x1c000
 87e:	89 f0                	mov    eax,esi
 880:	29 c8                	sub    eax,ecx
 882:	c1 f8 02             	sar    eax,0x2
 885:	39 05 78 60 02 00    	cmp    DWORD PTR ds:0x26078,eax
 88b:	0f 82 6f 03 00 00    	jb     c00 <TaskSchedule+0x3a0>
 891:	8b 15 10 d0 01 00    	mov    edx,DWORD PTR ds:0x1d010
 897:	2b 15 0c d0 01 00    	sub    edx,DWORD PTR ds:0x1d00c
 89d:	c7 05 78 60 02 00 00 	mov    DWORD PTR ds:0x26078,0x0
 8a4:	00 00 00 
 8a7:	c1 fa 02             	sar    edx,0x2
 8aa:	39 15 7c 60 02 00    	cmp    DWORD PTR ds:0x2607c,edx
 8b0:	0f 82 8a 03 00 00    	jb     c40 <TaskSchedule+0x3e0>
 8b6:	8b 15 1c e0 01 00    	mov    edx,DWORD PTR ds:0x1e01c
 8bc:	2b 15 18 e0 01 00    	sub    edx,DWORD PTR ds:0x1e018
 8c2:	c7 05 7c 60 02 00 00 	mov    DWORD PTR ds:0x2607c,0x0
 8c9:	00 00 00 
 8cc:	c1 fa 02             	sar    edx,0x2
 8cf:	39 15 80 60 02 00    	cmp    DWORD PTR ds:0x26080,edx
 8d5:	0f 82 85 03 00 00    	jb     c60 <TaskSchedule+0x400>
 8db:	a1 28 f0 01 00       	mov    eax,ds:0x1f028
 8e0:	2b 05 24 f0 01 00    	sub    eax,DWORD PTR ds:0x1f024
 8e6:	c7 05 80 60 02 00 00 	mov    DWORD PTR ds:0x26080,0x0
 8ed:	00 00 00 
 8f0:	c1 f8 02             	sar    eax,0x2
 8f3:	39 05 84 60 02 00    	cmp    DWORD PTR ds:0x26084,eax
 8f9:	0f 82 71 03 00 00    	jb     c70 <TaskSchedule+0x410>
 8ff:	a1 34 00 02 00       	mov    eax,ds:0x20034
 904:	2b 05 30 00 02 00    	sub    eax,DWORD PTR ds:0x20030
 90a:	c7 05 84 60 02 00 00 	mov    DWORD PTR ds:0x26084,0x0
 911:	00 00 00 
 914:	c1 f8 02             	sar    eax,0x2
 917:	39 05 88 60 02 00    	cmp    DWORD PTR ds:0x26088,eax
 91d:	0f 82 6d 03 00 00    	jb     c90 <TaskSchedule+0x430>
 923:	a1 40 10 02 00       	mov    eax,ds:0x21040
 928:	2b 05 3c 10 02 00    	sub    eax,DWORD PTR ds:0x2103c
 92e:	c7 05 88 60 02 00 00 	mov    DWORD PTR ds:0x26088,0x0
 935:	00 00 00 
 938:	c1 f8 02             	sar    eax,0x2
 93b:	39 05 8c 60 02 00    	cmp    DWORD PTR ds:0x2608c,eax
 941:	0f 82 79 03 00 00    	jb     cc0 <TaskSchedule+0x460>
 947:	a1 4c 20 02 00       	mov    eax,ds:0x2204c
 94c:	2b 05 48 20 02 00    	sub    eax,DWORD PTR ds:0x22048
 952:	c7 05 8c 60 02 00 00 	mov    DWORD PTR ds:0x2608c,0x0
 959:	00 00 00 
 95c:	c1 f8 02             	sar    eax,0x2
 95f:	39 05 90 60 02 00    	cmp    DWORD PTR ds:0x26090,eax
 965:	0f 82 75 03 00 00    	jb     ce0 <TaskSchedule+0x480>
 96b:	a1 58 30 02 00       	mov    eax,ds:0x23058
 970:	2b 05 54 30 02 00    	sub    eax,DWORD PTR ds:0x23054
 976:	c7 05 90 60 02 00 00 	mov    DWORD PTR ds:0x26090,0x0
 97d:	00 00 00 
 980:	c1 f8 02             	sar    eax,0x2
 983:	39 05 94 60 02 00    	cmp    DWORD PTR ds:0x26094,eax
 989:	0f 82 61 03 00 00    	jb     cf0 <TaskSchedule+0x490>
 98f:	a1 64 40 02 00       	mov    eax,ds:0x24064
 994:	2b 05 60 40 02 00    	sub    eax,DWORD PTR ds:0x24060
 99a:	c7 05 94 60 02 00 00 	mov    DWORD PTR ds:0x26094,0x0
 9a1:	00 00 00 
 9a4:	c1 f8 02             	sar    eax,0x2
 9a7:	39 05 98 60 02 00    	cmp    DWORD PTR ds:0x26098,eax
 9ad:	0f 82 6d 03 00 00    	jb     d20 <TaskSchedule+0x4c0>
 9b3:	c7 05 98 60 02 00 00 	mov    DWORD PTR ds:0x26098,0x0
 9ba:	00 00 00 
 9bd:	29 ce                	sub    esi,ecx
 9bf:	31 ff                	xor    edi,edi
 9c1:	c1 fe 02             	sar    esi,0x2
 9c4:	b8 00 c0 01 00       	mov    eax,0x1c000
 9c9:	39 35 78 60 02 00    	cmp    DWORD PTR ds:0x26078,esi
 9cf:	0f 82 4b 01 00 00    	jb     b20 <TaskSchedule+0x2c0>
 9d5:	8b 15 10 d0 01 00    	mov    edx,DWORD PTR ds:0x1d010
 9db:	2b 15 0c d0 01 00    	sub    edx,DWORD PTR ds:0x1d00c
 9e1:	c7 05 78 60 02 00 00 	mov    DWORD PTR ds:0x26078,0x0
 9e8:	00 00 00 
 9eb:	c1 fa 02             	sar    edx,0x2
 9ee:	39 15 7c 60 02 00    	cmp    DWORD PTR ds:0x2607c,edx
 9f4:	0f 82 56 02 00 00    	jb     c50 <TaskSchedule+0x3f0>
 9fa:	a1 1c e0 01 00       	mov    eax,ds:0x1e01c
 9ff:	2b 05 18 e0 01 00    	sub    eax,DWORD PTR ds:0x1e018
 a05:	c7 05 7c 60 02 00 00 	mov    DWORD PTR ds:0x2607c,0x0
 a0c:	00 00 00 
 a0f:	c1 f8 02             	sar    eax,0x2
 a12:	39 05 80 60 02 00    	cmp    DWORD PTR ds:0x26080,eax
 a18:	0f 82 62 02 00 00    	jb     c80 <TaskSchedule+0x420>
 a1e:	a1 28 f0 01 00       	mov    eax,ds:0x1f028
 a23:	2b 05 24 f0 01 00    	sub    eax,DWORD PTR ds:0x1f024
 a29:	c7 05 80 60 02 00 00 	mov    DWORD PTR ds:0x26080,0x0
 a30:	00 00 00 
 a33:	c1 f8 02             	sar    eax,0x2
 a36:	39 05 84 60 02 00    	cmp    DWORD PTR ds:0x26084,eax
 a3c:	0f 82 5e 02 00 00    	jb     ca0 <TaskSchedule+0x440>
 a42:	a1 34 00 02 00       	mov    eax,ds:0x20034
 a47:	2b 05 30 00 02 00    	sub    eax,DWORD PTR ds:0x20030
 a4d:	c7 05 84 60 02 00 00 	mov    DWORD PTR ds:0x26084,0x0
 a54:	00 00 00 
 a57:	c1 f8 02             	sar    eax,0x2
 a5a:	39 05 88 60 02 00    	cmp    DWORD PTR ds:0x26088,eax
 a60:	0f 82 4a 02 00 00    	jb     cb0 <TaskSchedule+0x450>
 a66:	a1 40 10 02 00       	mov    eax,ds:0x21040
 a6b:	2b 05 3c 10 02 00    	sub    eax,DWORD PTR ds:0x2103c
 a71:	c7 05 88 60 02 00 00 	mov    DWORD PTR ds:0x26088,0x0
 a78:	00 00 00 
 a7b:	c1 f8 02             	sar    eax,0x2
 a7e:	39 05 8c 60 02 00    	cmp    DWORD PTR ds:0x2608c,eax
 a84:	0f 82 46 02 00 00    	jb     cd0 <TaskSchedule+0x470>
 a8a:	a1 4c 20 02 00       	mov    eax,ds:0x2204c
 a8f:	2b 05 48 20 02 00    	sub    eax,DWORD PTR ds:0x22048
 a95:	c7 05 8c 60 02 00 00 	mov    DWORD PTR ds:0x2608c,0x0
 a9c:	00 00 00 
 a9f:	c1 f8 02             	sar    eax,0x2
 aa2:	39 05 90 60 02 00    	cmp    DWORD PTR ds:0x26090,eax
 aa8:	0f 82 52 02 00 00    	jb     d00 <TaskSchedule+0x4a0>
 aae:	a1 58 30 02 00       	mov    eax,ds:0x23058
 ab3:	2b 05 54 30 02 00    	sub    eax,DWORD PTR ds:0x23054
 ab9:	c7 05 90 60 02 00 00 	mov    DWORD PTR ds:0x26090,0x0
 ac0:	00 00 00 
 ac3:	c1 f8 02             	sar    eax,0x2
 ac6:	39 05 94 60 02 00    	cmp    DWORD PTR ds:0x26094,eax
 acc:	0f 82 3e 02 00 00    	jb     d10 <TaskSchedule+0x4b0>
 ad2:	a1 64 40 02 00       	mov    eax,ds:0x24064
 ad7:	2b 05 60 40 02 00    	sub    eax,DWORD PTR ds:0x24060
 add:	c7 05 94 60 02 00 00 	mov    DWORD PTR ds:0x26094,0x0
 ae4:	00 00 00 
 ae7:	c1 f8 02             	sar    eax,0x2
 aea:	39 05 98 60 02 00    	cmp    DWORD PTR ds:0x26098,eax
 af0:	72 1e                	jb     b10 <TaskSchedule+0x2b0>
 af2:	c7 05 98 60 02 00 00 	mov    DWORD PTR ds:0x26098,0x0
 af9:	00 00 00 
 afc:	89 1c 24             	mov    DWORD PTR [esp],ebx
 aff:	e8 fc ff ff ff       	call   b00 <TaskSchedule+0x2a0>
 b04:	83 c4 10             	add    esp,0x10
 b07:	5b                   	pop    ebx
 b08:	5e                   	pop    esi
 b09:	5f                   	pop    edi
 b0a:	c3                   	ret    
 b0b:	90                   	nop
 b0c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 b10:	b8 60 40 02 00       	mov    eax,0x24060
 b15:	bf 08 00 00 00       	mov    edi,0x8
 b1a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 b20:	8b 10                	mov    edx,DWORD PTR [eax]
 b22:	8b 32                	mov    esi,DWORD PTR [edx]
 b24:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 b28:	89 04 24             	mov    DWORD PTR [esp],eax
 b2b:	e8 fc ff ff ff       	call   b2c <TaskSchedule+0x2cc>
 b30:	83 04 bd 78 60 02 00 	add    DWORD PTR [edi*4+0x26078],0x1
 b37:	01 
 b38:	85 f6                	test   esi,esi
 b3a:	74 c0                	je     afc <TaskSchedule+0x29c>
 b3c:	8b 0d 9c 60 02 00    	mov    ecx,DWORD PTR ds:0x2609c
 b42:	0f b6 41 04          	movzx  eax,BYTE PTR [ecx+0x4]
 b46:	83 e0 03             	and    eax,0x3
 b49:	3c 03                	cmp    al,0x3
 b4b:	0f 84 97 00 00 00    	je     be8 <TaskSchedule+0x388>
 b51:	89 4c 24 04          	mov    DWORD PTR [esp+0x4],ecx
 b55:	0f b6 41 04          	movzx  eax,BYTE PTR [ecx+0x4]
 b59:	c0 e8 02             	shr    al,0x2
 b5c:	0f b6 d0             	movzx  edx,al
 b5f:	0f b6 41 05          	movzx  eax,BYTE PTR [ecx+0x5]
 b63:	c1 e0 06             	shl    eax,0x6
 b66:	09 d0                	or     eax,edx
 b68:	0f b6 51 06          	movzx  edx,BYTE PTR [ecx+0x6]
 b6c:	c1 e2 0e             	shl    edx,0xe
 b6f:	09 c2                	or     edx,eax
 b71:	0f b6 41 07          	movzx  eax,BYTE PTR [ecx+0x7]
 b75:	c1 e0 16             	shl    eax,0x16
 b78:	09 d0                	or     eax,edx
 b7a:	69 c0 0c 10 00 00    	imul   eax,eax,0x100c
 b80:	05 00 c0 01 00       	add    eax,0x1c000
 b85:	89 04 24             	mov    DWORD PTR [esp],eax
 b88:	e8 fc ff ff ff       	call   b89 <TaskSchedule+0x329>
 b8d:	8b 15 9c 60 02 00    	mov    edx,DWORD PTR ds:0x2609c
 b93:	0f b6 42 04          	movzx  eax,BYTE PTR [edx+0x4]
 b97:	83 e0 fc             	and    eax,0xfffffffc
 b9a:	83 c8 01             	or     eax,0x1
 b9d:	88 42 04             	mov    BYTE PTR [edx+0x4],al
 ba0:	8b 06                	mov    eax,DWORD PTR [esi]
 ba2:	31 d2                	xor    edx,edx
 ba4:	89 35 9c 60 02 00    	mov    DWORD PTR ds:0x2609c,esi
 baa:	83 f8 04             	cmp    eax,0x4
 bad:	0f 94 c2             	sete   dl
 bb0:	03 15 a0 60 02 00    	add    edx,DWORD PTR ds:0x260a0
 bb6:	c1 e0 03             	shl    eax,0x3
 bb9:	0f b7 c0             	movzx  eax,ax
 bbc:	89 15 a0 60 02 00    	mov    DWORD PTR ds:0x260a0,edx
 bc2:	80 66 04 fc          	and    BYTE PTR [esi+0x4],0xfc
 bc6:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 bca:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 bd1:	e8 fc ff ff ff       	call   bd2 <TaskSchedule+0x372>
 bd6:	89 1c 24             	mov    DWORD PTR [esp],ebx
 bd9:	e8 fc ff ff ff       	call   bda <TaskSchedule+0x37a>
 bde:	83 c4 10             	add    esp,0x10
 be1:	5b                   	pop    ebx
 be2:	5e                   	pop    esi
 be3:	5f                   	pop    edi
 be4:	c3                   	ret    
 be5:	8d 76 00             	lea    esi,[esi+0x0]
 be8:	89 4c 24 04          	mov    DWORD PTR [esp+0x4],ecx
 bec:	c7 04 24 6c 50 02 00 	mov    DWORD PTR [esp],0x2506c
 bf3:	e8 fc ff ff ff       	call   bf4 <TaskSchedule+0x394>
 bf8:	eb a6                	jmp    ba0 <TaskSchedule+0x340>
 bfa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 c00:	b8 00 c0 01 00       	mov    eax,0x1c000
 c05:	31 ff                	xor    edi,edi
 c07:	90                   	nop
 c08:	8b 10                	mov    edx,DWORD PTR [eax]
 c0a:	8b 32                	mov    esi,DWORD PTR [edx]
 c0c:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 c10:	89 04 24             	mov    DWORD PTR [esp],eax
 c13:	e8 fc ff ff ff       	call   c14 <TaskSchedule+0x3b4>
 c18:	83 04 bd 78 60 02 00 	add    DWORD PTR [edi*4+0x26078],0x1
 c1f:	01 
 c20:	85 f6                	test   esi,esi
 c22:	0f 85 14 ff ff ff    	jne    b3c <TaskSchedule+0x2dc>
 c28:	8b 0d 00 c0 01 00    	mov    ecx,DWORD PTR ds:0x1c000
 c2e:	8b 35 04 c0 01 00    	mov    esi,DWORD PTR ds:0x1c004
 c34:	e9 84 fd ff ff       	jmp    9bd <TaskSchedule+0x15d>
 c39:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 c40:	b8 0c d0 01 00       	mov    eax,0x1d00c
 c45:	bf 01 00 00 00       	mov    edi,0x1
 c4a:	eb bc                	jmp    c08 <TaskSchedule+0x3a8>
 c4c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 c50:	b8 0c d0 01 00       	mov    eax,0x1d00c
 c55:	bf 01 00 00 00       	mov    edi,0x1
 c5a:	e9 c1 fe ff ff       	jmp    b20 <TaskSchedule+0x2c0>
 c5f:	90                   	nop
 c60:	b8 18 e0 01 00       	mov    eax,0x1e018
 c65:	bf 02 00 00 00       	mov    edi,0x2
 c6a:	eb 9c                	jmp    c08 <TaskSchedule+0x3a8>
 c6c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 c70:	b8 24 f0 01 00       	mov    eax,0x1f024
 c75:	bf 03 00 00 00       	mov    edi,0x3
 c7a:	eb 8c                	jmp    c08 <TaskSchedule+0x3a8>
 c7c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 c80:	b8 18 e0 01 00       	mov    eax,0x1e018
 c85:	bf 02 00 00 00       	mov    edi,0x2
 c8a:	e9 91 fe ff ff       	jmp    b20 <TaskSchedule+0x2c0>
 c8f:	90                   	nop
 c90:	b8 30 00 02 00       	mov    eax,0x20030
 c95:	bf 04 00 00 00       	mov    edi,0x4
 c9a:	e9 69 ff ff ff       	jmp    c08 <TaskSchedule+0x3a8>
 c9f:	90                   	nop
 ca0:	b8 24 f0 01 00       	mov    eax,0x1f024
 ca5:	bf 03 00 00 00       	mov    edi,0x3
 caa:	e9 71 fe ff ff       	jmp    b20 <TaskSchedule+0x2c0>
 caf:	90                   	nop
 cb0:	b8 30 00 02 00       	mov    eax,0x20030
 cb5:	bf 04 00 00 00       	mov    edi,0x4
 cba:	e9 61 fe ff ff       	jmp    b20 <TaskSchedule+0x2c0>
 cbf:	90                   	nop
 cc0:	b8 3c 10 02 00       	mov    eax,0x2103c
 cc5:	bf 05 00 00 00       	mov    edi,0x5
 cca:	e9 39 ff ff ff       	jmp    c08 <TaskSchedule+0x3a8>
 ccf:	90                   	nop
 cd0:	b8 3c 10 02 00       	mov    eax,0x2103c
 cd5:	bf 05 00 00 00       	mov    edi,0x5
 cda:	e9 41 fe ff ff       	jmp    b20 <TaskSchedule+0x2c0>
 cdf:	90                   	nop
 ce0:	b8 48 20 02 00       	mov    eax,0x22048
 ce5:	bf 06 00 00 00       	mov    edi,0x6
 cea:	e9 19 ff ff ff       	jmp    c08 <TaskSchedule+0x3a8>
 cef:	90                   	nop
 cf0:	b8 54 30 02 00       	mov    eax,0x23054
 cf5:	bf 07 00 00 00       	mov    edi,0x7
 cfa:	e9 09 ff ff ff       	jmp    c08 <TaskSchedule+0x3a8>
 cff:	90                   	nop
 d00:	b8 48 20 02 00       	mov    eax,0x22048
 d05:	bf 06 00 00 00       	mov    edi,0x6
 d0a:	e9 11 fe ff ff       	jmp    b20 <TaskSchedule+0x2c0>
 d0f:	90                   	nop
 d10:	b8 54 30 02 00       	mov    eax,0x23054
 d15:	bf 07 00 00 00       	mov    edi,0x7
 d1a:	e9 01 fe ff ff       	jmp    b20 <TaskSchedule+0x2c0>
 d1f:	90                   	nop
 d20:	b8 60 40 02 00       	mov    eax,0x24060
 d25:	bf 08 00 00 00       	mov    edi,0x8
 d2a:	e9 d9 fe ff ff       	jmp    c08 <TaskSchedule+0x3a8>
 d2f:	90                   	nop

00000d30 <IdleTask>:
 d30:	56                   	push   esi
 d31:	b9 64 00 00 00       	mov    ecx,0x64
 d36:	53                   	push   ebx
 d37:	83 ec 14             	sub    esp,0x14
 d3a:	8b 35 04 00 00 00    	mov    esi,DWORD PTR ds:0x4
 d40:	89 0d a4 60 02 00    	mov    DWORD PTR ds:0x260a4,ecx
 d46:	eb 29                	jmp    d71 <IdleTask+0x41>
 d48:	8b 1a                	mov    ebx,DWORD PTR [edx]
 d4a:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 d4e:	c7 04 24 6c 50 02 00 	mov    DWORD PTR [esp],0x2506c
 d55:	e8 fc ff ff ff       	call   d56 <IdleTask+0x26>
 d5a:	8b 03                	mov    eax,DWORD PTR [ebx]
 d5c:	8d 04 c5 00 00 60 00 	lea    eax,[eax*8+0x600000]
 d63:	89 04 24             	mov    DWORD PTR [esp],eax
 d66:	e8 fc ff ff ff       	call   d67 <IdleTask+0x37>
 d6b:	c7 03 00 00 00 00    	mov    DWORD PTR [ebx],0x0
 d71:	8b 15 6c 50 02 00    	mov    edx,DWORD PTR ds:0x2506c
 d77:	a1 70 50 02 00       	mov    eax,ds:0x25070
 d7c:	29 d0                	sub    eax,edx
 d7e:	c1 f8 02             	sar    eax,0x2
 d81:	85 c0                	test   eax,eax
 d83:	75 c3                	jne    d48 <IdleTask+0x18>
 d85:	e8 fc ff ff ff       	call   d86 <IdleTask+0x56>
 d8a:	8b 1d 04 00 00 00    	mov    ebx,DWORD PTR ds:0x4
 d90:	b9 64 00 00 00       	mov    ecx,0x64
 d95:	39 f3                	cmp    ebx,esi
 d97:	74 a7                	je     d40 <IdleTask+0x10>
 d99:	69 05 a0 60 02 00 d0 	imul   eax,DWORD PTR ds:0x260a0,0x7d0
 da0:	07 00 00 
 da3:	29 f3                	sub    ebx,esi
 da5:	31 d2                	xor    edx,edx
 da7:	f7 f3                	div    ebx
 da9:	29 c1                	sub    ecx,eax
 dab:	eb 93                	jmp    d40 <IdleTask+0x10>

Disassembly of section .comment:

00000000 <.comment>:
   0:	00 47 43             	add    BYTE PTR [edi+0x43],al
   3:	43                   	inc    ebx
   4:	3a 20                	cmp    ah,BYTE PTR [eax]
   6:	28 47 4e             	sub    BYTE PTR [edi+0x4e],al
   9:	55                   	push   ebp
   a:	29 20                	sub    DWORD PTR [eax],esp
   c:	34 2e                	xor    al,0x2e
   e:	37                   	aaa    
   f:	2e 33 00             	xor    eax,DWORD PTR cs:[eax]

Disassembly of section .eh_frame:

00000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	00 00                	add    BYTE PTR [eax],al
   6:	00 00                	add    BYTE PTR [eax],al
   8:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
   b:	00 01                	add    BYTE PTR [ecx],al
   d:	7c 08                	jl     17 <.eh_frame+0x17>
   f:	01 1b                	add    DWORD PTR [ebx],ebx
  11:	0c 04                	or     al,0x4
  13:	04 88                	add    al,0x88
  15:	01 00                	add    DWORD PTR [eax],eax
  17:	00 20                	add    BYTE PTR [eax],ah
  19:	00 00                	add    BYTE PTR [eax],al
  1b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  1e:	00 00                	add    BYTE PTR [eax],al
  20:	00 00                	add    BYTE PTR [eax],al
  22:	00 00                	add    BYTE PTR [eax],al
  24:	92                   	xchg   edx,eax
  25:	00 00                	add    BYTE PTR [eax],al
  27:	00 00                	add    BYTE PTR [eax],al
  29:	43                   	inc    ebx
  2a:	0e                   	push   cs
  2b:	10 54 83 04          	adc    BYTE PTR [ebx+eax*4+0x4],dl
  2f:	86 03                	xchg   BYTE PTR [ebx],al
  31:	87 02                	xchg   DWORD PTR [edx],eax
  33:	02 7a c7             	add    bh,BYTE PTR [edx-0x39]
  36:	c6 c3 0e             	mov    bl,0xe
  39:	04 00                	add    al,0x0
  3b:	00 20                	add    BYTE PTR [eax],ah
  3d:	00 00                	add    BYTE PTR [eax],al
  3f:	00 40 00             	add    BYTE PTR [eax+0x0],al
  42:	00 00                	add    BYTE PTR [eax],al
  44:	a0 00 00 00 5b       	mov    al,ds:0x5b000000
  49:	00 00                	add    BYTE PTR [eax],al
  4b:	00 00                	add    BYTE PTR [eax],al
  4d:	43                   	inc    ebx
  4e:	0e                   	push   cs
  4f:	10 48 87             	adc    BYTE PTR [eax-0x79],cl
  52:	02 50 83             	add    dl,BYTE PTR [eax-0x7d]
  55:	04 86                	add    al,0x86
  57:	03 7f c7             	add    edi,DWORD PTR [edi-0x39]
  5a:	c6 c3 0e             	mov    bl,0xe
  5d:	04 00                	add    al,0x0
  5f:	00 18                	add    BYTE PTR [eax],bl
  61:	00 00                	add    BYTE PTR [eax],al
  63:	00 64 00 00          	add    BYTE PTR [eax+eax*1+0x0],ah
  67:	00 00                	add    BYTE PTR [eax],al
  69:	01 00                	add    DWORD PTR [eax],eax
  6b:	00 20                	add    BYTE PTR [eax],ah
  6d:	03 00                	add    eax,DWORD PTR [eax]
  6f:	00 00                	add    BYTE PTR [eax],al
  71:	43                   	inc    ebx
  72:	0e                   	push   cs
  73:	20 03                	and    BYTE PTR [ebx],al
  75:	1c 03                	sbb    al,0x3
  77:	0e                   	push   cs
  78:	04 00                	add    al,0x0
  7a:	00 00                	add    BYTE PTR [eax],al
  7c:	3c 00                	cmp    al,0x0
  7e:	00 00                	add    BYTE PTR [eax],al
  80:	80 00 00             	add    BYTE PTR [eax],0x0
  83:	00 20                	add    BYTE PTR [eax],ah
  85:	04 00                	add    al,0x0
  87:	00 b4 01 00 00 00 41 	add    BYTE PTR [ecx+eax*1+0x41000000],dh
  8e:	0e                   	push   cs
  8f:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
  95:	87 03                	xchg   DWORD PTR [ebx],eax
  97:	41                   	inc    ecx
  98:	0e                   	push   cs
  99:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
  9f:	83 05 43 0e 40 03 a1 	add    DWORD PTR ds:0x3400e43,0xffffffa1
  a6:	01 0a                	add    DWORD PTR [edx],ecx
  a8:	0e                   	push   cs
  a9:	14 43                	adc    al,0x43
  ab:	c3                   	ret    
  ac:	0e                   	push   cs
  ad:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
  b0:	0e                   	push   cs
  b1:	0c 41                	or     al,0x41
  b3:	c7                   	(bad)  
  b4:	0e                   	push   cs
  b5:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
  b8:	0e                   	push   cs
  b9:	04 42                	add    al,0x42
  bb:	0b 54 00 00          	or     edx,DWORD PTR [eax+eax*1+0x0]
  bf:	00 c0                	add    al,al
  c1:	00 00                	add    BYTE PTR [eax],al
  c3:	00 e0                	add    al,ah
  c5:	05 00 00 f6 00       	add    eax,0xf60000
  ca:	00 00                	add    BYTE PTR [eax],al
  cc:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  cf:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
  d5:	87 03                	xchg   DWORD PTR [ebx],eax
  d7:	41                   	inc    ecx
  d8:	0e                   	push   cs
  d9:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
  df:	83 05 43 0e 30 64 0a 	add    DWORD PTR ds:0x64300e43,0xa
  e6:	0e                   	push   cs
  e7:	14 43                	adc    al,0x43
  e9:	c3                   	ret    
  ea:	0e                   	push   cs
  eb:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
  ee:	0e                   	push   cs
  ef:	0c 41                	or     al,0x41
  f1:	c7                   	(bad)  
  f2:	0e                   	push   cs
  f3:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
  f6:	0e                   	push   cs
  f7:	04 47                	add    al,0x47
  f9:	0b 02                	or     eax,DWORD PTR [edx]
  fb:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  fc:	0a 0e                	or     cl,BYTE PTR [esi]
  fe:	14 43                	adc    al,0x43
 100:	c3                   	ret    
 101:	0e                   	push   cs
 102:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 105:	0e                   	push   cs
 106:	0c 41                	or     al,0x41
 108:	c7                   	(bad)  
 109:	0e                   	push   cs
 10a:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 10d:	0e                   	push   cs
 10e:	04 46                	add    al,0x46
 110:	0b 00                	or     eax,DWORD PTR [eax]
 112:	00 00                	add    BYTE PTR [eax],al
 114:	28 00                	sub    BYTE PTR [eax],al
 116:	00 00                	add    BYTE PTR [eax],al
 118:	18 01                	sbb    BYTE PTR [ecx],al
 11a:	00 00                	add    BYTE PTR [eax],al
 11c:	e0 06                	loopne 124 <.eh_frame+0x124>
 11e:	00 00                	add    BYTE PTR [eax],al
 120:	74 01                	je     123 <.eh_frame+0x123>
 122:	00 00                	add    BYTE PTR [eax],al
 124:	00 43 0e             	add    BYTE PTR [ebx+0xe],al
 127:	40                   	inc    eax
 128:	46                   	inc    esi
 129:	83 05 50 86 04 87 03 	add    DWORD PTR ds:0x87048650,0x3
 130:	85 02                	test   DWORD PTR [edx],eax
 132:	03 14 01             	add    edx,DWORD PTR [ecx+eax*1]
 135:	0a c5                	or     al,ch
 137:	c7 c6 c3 0e 04 43    	mov    esi,0x43040ec3
 13d:	0b 00                	or     eax,DWORD PTR [eax]
 13f:	00 48 00             	add    BYTE PTR [eax+0x0],cl
 142:	00 00                	add    BYTE PTR [eax],al
 144:	44                   	inc    esp
 145:	01 00                	add    DWORD PTR [eax],eax
 147:	00 60 08             	add    BYTE PTR [eax+0x8],ah
 14a:	00 00                	add    BYTE PTR [eax],al
 14c:	cf                   	iret   
 14d:	04 00                	add    al,0x0
 14f:	00 00                	add    BYTE PTR [eax],al
 151:	41                   	inc    ecx
 152:	0e                   	push   cs
 153:	08 87 02 41 0e 0c    	or     BYTE PTR [edi+0xc0e4102],al
 159:	86 03                	xchg   BYTE PTR [ebx],al
 15b:	41                   	inc    ecx
 15c:	0e                   	push   cs
 15d:	10 83 04 43 0e 20    	adc    BYTE PTR [ebx+0x200e4304],al
 163:	03 a1 02 0a 0e 10    	add    esp,DWORD PTR [ecx+0x100e0a02]
 169:	41                   	inc    ecx
 16a:	c3                   	ret    
 16b:	0e                   	push   cs
 16c:	0c 41                	or     al,0x41
 16e:	c6                   	(bad)  
 16f:	0e                   	push   cs
 170:	08 41 c7             	or     BYTE PTR [ecx-0x39],al
 173:	0e                   	push   cs
 174:	04 46                	add    al,0x46
 176:	0b 02                	or     eax,DWORD PTR [edx]
 178:	d1 0a                	ror    DWORD PTR [edx],1
 17a:	0e                   	push   cs
 17b:	10 41 c3             	adc    BYTE PTR [ecx-0x3d],al
 17e:	0e                   	push   cs
 17f:	0c 41                	or     al,0x41
 181:	c6                   	(bad)  
 182:	0e                   	push   cs
 183:	08 41 c7             	or     BYTE PTR [ecx-0x39],al
 186:	0e                   	push   cs
 187:	04 44                	add    al,0x44
 189:	0b 00                	or     eax,DWORD PTR [eax]
 18b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 18e:	00 00                	add    BYTE PTR [eax],al
 190:	90                   	nop
 191:	01 00                	add    DWORD PTR [eax],eax
 193:	00 30                	add    BYTE PTR [eax],dh
 195:	0d 00 00 7d 00       	or     eax,0x7d0000
 19a:	00 00                	add    BYTE PTR [eax],al
 19c:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 19f:	08 86 02 46 0e 0c    	or     BYTE PTR [esi+0xc0e4602],al
 1a5:	83 03 43             	add    DWORD PTR [ebx],0x43
 1a8:	0e                   	push   cs
 1a9:	20 00                	and    BYTE PTR [eax],al
	...
