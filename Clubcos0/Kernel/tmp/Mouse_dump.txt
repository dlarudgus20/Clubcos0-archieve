
tmp/Mouse.o:     file format elf32-i386


Disassembly of section .text:

00000000 <InitMouse>:
   0:	56                   	push   esi
   1:	53                   	push   ebx
   2:	83 ec 24             	sub    esp,0x24
   5:	e8 fc ff ff ff       	call   6 <InitMouse+0x6>
   a:	89 c6                	mov    esi,eax
   c:	e8 fc ff ff ff       	call   d <InitMouse+0xd>
  11:	0f b7 15 01 80 26 00 	movzx  edx,WORD PTR ds:0x268001
  18:	66 d1 ea             	shr    dx,1
  1b:	0f b7 d2             	movzx  edx,dx
  1e:	89 15 00 00 00 00    	mov    DWORD PTR ds:0x0,edx
  24:	0f b7 15 03 80 26 00 	movzx  edx,WORD PTR ds:0x268003
  2b:	c7 44 24 04 a8 00 00 	mov    DWORD PTR [esp+0x4],0xa8
  32:	00 
  33:	c7 04 24 64 00 00 00 	mov    DWORD PTR [esp],0x64
  3a:	66 d1 ea             	shr    dx,1
  3d:	0f b7 d2             	movzx  edx,dx
  40:	89 15 04 00 00 00    	mov    DWORD PTR ds:0x4,edx
  46:	e8 fc ff ff ff       	call   47 <InitMouse+0x47>
  4b:	c7 44 24 04 d4 00 00 	mov    DWORD PTR [esp+0x4],0xd4
  52:	00 
  53:	c7 04 24 64 00 00 00 	mov    DWORD PTR [esp],0x64
  5a:	e8 fc ff ff ff       	call   5b <InitMouse+0x5b>
  5f:	e8 fc ff ff ff       	call   60 <InitMouse+0x60>
  64:	c7 44 24 04 f4 00 00 	mov    DWORD PTR [esp+0x4],0xf4
  6b:	00 
  6c:	c7 04 24 60 00 00 00 	mov    DWORD PTR [esp],0x60
  73:	e8 fc ff ff ff       	call   74 <InitMouse+0x74>
  78:	e8 fc ff ff ff       	call   79 <InitMouse+0x79>
  7d:	89 34 24             	mov    DWORD PTR [esp],esi
  80:	89 c3                	mov    ebx,eax
  82:	e8 fc ff ff ff       	call   83 <InitMouse+0x83>
  87:	84 db                	test   bl,bl
  89:	0f 84 8e 00 00 00    	je     11d <InitMouse+0x11d>
  8f:	c7 44 24 04 20 00 00 	mov    DWORD PTR [esp+0x4],0x20
  96:	00 
  97:	c7 04 24 64 00 00 00 	mov    DWORD PTR [esp],0x64
  9e:	e8 fc ff ff ff       	call   9f <InitMouse+0x9f>
  a3:	e8 fc ff ff ff       	call   a4 <InitMouse+0xa4>
  a8:	c7 04 24 60 00 00 00 	mov    DWORD PTR [esp],0x60
  af:	e8 fc ff ff ff       	call   b0 <InitMouse+0xb0>
  b4:	c7 44 24 04 60 00 00 	mov    DWORD PTR [esp+0x4],0x60
  bb:	00 
  bc:	c7 04 24 64 00 00 00 	mov    DWORD PTR [esp],0x64
  c3:	89 c6                	mov    esi,eax
  c5:	e8 fc ff ff ff       	call   c6 <InitMouse+0xc6>
  ca:	e8 fc ff ff ff       	call   cb <InitMouse+0xcb>
  cf:	89 f0                	mov    eax,esi
  d1:	83 c8 02             	or     eax,0x2
  d4:	0f b6 c0             	movzx  eax,al
  d7:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
  db:	c7 04 24 60 00 00 00 	mov    DWORD PTR [esp],0x60
  e2:	e8 fc ff ff ff       	call   e3 <InitMouse+0xe3>
  e7:	a1 04 00 00 00       	mov    eax,ds:0x4
  ec:	c7 44 24 14 f7 05 00 	mov    DWORD PTR [esp+0x14],0x5f7
  f3:	00 
  f4:	c7 44 24 10 13 00 00 	mov    DWORD PTR [esp+0x10],0x13
  fb:	00 
  fc:	c7 44 24 0c 0d 00 00 	mov    DWORD PTR [esp+0xc],0xd
 103:	00 
 104:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 108:	a1 00 00 00 00       	mov    eax,ds:0x0
 10d:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 114:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 118:	e8 fc ff ff ff       	call   119 <InitMouse+0x119>
 11d:	83 c4 24             	add    esp,0x24
 120:	89 d8                	mov    eax,ebx
 122:	5b                   	pop    ebx
 123:	5e                   	pop    esi
 124:	c3                   	ret    
 125:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 129:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00000130 <EnableMouseInterrupt>:
 130:	53                   	push   ebx
 131:	83 ec 18             	sub    esp,0x18
 134:	c7 44 24 04 20 00 00 	mov    DWORD PTR [esp+0x4],0x20
 13b:	00 
 13c:	c7 04 24 64 00 00 00 	mov    DWORD PTR [esp],0x64
 143:	e8 fc ff ff ff       	call   144 <EnableMouseInterrupt+0x14>
 148:	e8 fc ff ff ff       	call   149 <EnableMouseInterrupt+0x19>
 14d:	c7 04 24 60 00 00 00 	mov    DWORD PTR [esp],0x60
 154:	e8 fc ff ff ff       	call   155 <EnableMouseInterrupt+0x25>
 159:	c7 44 24 04 60 00 00 	mov    DWORD PTR [esp+0x4],0x60
 160:	00 
 161:	c7 04 24 64 00 00 00 	mov    DWORD PTR [esp],0x64
 168:	89 c3                	mov    ebx,eax
 16a:	e8 fc ff ff ff       	call   16b <EnableMouseInterrupt+0x3b>
 16f:	e8 fc ff ff ff       	call   170 <EnableMouseInterrupt+0x40>
 174:	89 d8                	mov    eax,ebx
 176:	83 c8 02             	or     eax,0x2
 179:	0f b6 c0             	movzx  eax,al
 17c:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 180:	c7 04 24 60 00 00 00 	mov    DWORD PTR [esp],0x60
 187:	e8 fc ff ff ff       	call   188 <EnableMouseInterrupt+0x58>
 18c:	83 c4 18             	add    esp,0x18
 18f:	5b                   	pop    ebx
 190:	c3                   	ret    
 191:	eb 0d                	jmp    1a0 <PutMouseCodeToInterruptQueue>
 193:	90                   	nop
 194:	90                   	nop
 195:	90                   	nop
 196:	90                   	nop
 197:	90                   	nop
 198:	90                   	nop
 199:	90                   	nop
 19a:	90                   	nop
 19b:	90                   	nop
 19c:	90                   	nop
 19d:	90                   	nop
 19e:	90                   	nop
 19f:	90                   	nop

000001a0 <PutMouseCodeToInterruptQueue>:
 1a0:	83 ec 1c             	sub    esp,0x1c
 1a3:	a1 f8 00 00 00       	mov    eax,ds:0xf8
 1a8:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
 1ac:	83 f8 02             	cmp    eax,0x2
 1af:	74 57                	je     208 <PutMouseCodeToInterruptQueue+0x68>
 1b1:	76 25                	jbe    1d8 <PutMouseCodeToInterruptQueue+0x38>
 1b3:	83 f8 03             	cmp    eax,0x3
 1b6:	89 d1                	mov    ecx,edx
 1b8:	74 2e                	je     1e8 <PutMouseCodeToInterruptQueue+0x48>
 1ba:	83 f8 04             	cmp    eax,0x4
 1bd:	8d 76 00             	lea    esi,[esi+0x0]
 1c0:	75 1b                	jne    1dd <PutMouseCodeToInterruptQueue+0x3d>
 1c2:	80 fa fa             	cmp    dl,0xfa
 1c5:	75 16                	jne    1dd <PutMouseCodeToInterruptQueue+0x3d>
 1c7:	c7 05 f8 00 00 00 03 	mov    DWORD PTR ds:0xf8,0x3
 1ce:	00 00 00 
 1d1:	83 c4 1c             	add    esp,0x1c
 1d4:	c3                   	ret    
 1d5:	8d 76 00             	lea    esi,[esi+0x0]
 1d8:	83 f8 01             	cmp    eax,0x1
 1db:	74 43                	je     220 <PutMouseCodeToInterruptQueue+0x80>
 1dd:	83 c4 1c             	add    esp,0x1c
 1e0:	c3                   	ret    
 1e1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 1e8:	83 e1 c8             	and    ecx,0xffffffc8
 1eb:	80 f9 08             	cmp    cl,0x8
 1ee:	75 ed                	jne    1dd <PutMouseCodeToInterruptQueue+0x3d>
 1f0:	88 15 0c 00 00 00    	mov    BYTE PTR ds:0xc,dl
 1f6:	c7 05 f8 00 00 00 02 	mov    DWORD PTR ds:0xf8,0x2
 1fd:	00 00 00 
 200:	eb db                	jmp    1dd <PutMouseCodeToInterruptQueue+0x3d>
 202:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 208:	88 15 0d 00 00 00    	mov    BYTE PTR ds:0xd,dl
 20e:	c7 05 f8 00 00 00 01 	mov    DWORD PTR ds:0xf8,0x1
 215:	00 00 00 
 218:	83 c4 1c             	add    esp,0x1c
 21b:	c3                   	ret    
 21c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 220:	88 15 0e 00 00 00    	mov    BYTE PTR ds:0xe,dl
 226:	a1 0c 00 00 00       	mov    eax,ds:0xc
 22b:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 232:	0d 00 00 00 03       	or     eax,0x3000000
 237:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 23b:	e8 fc ff ff ff       	call   23c <PutMouseCodeToInterruptQueue+0x9c>
 240:	c7 05 f8 00 00 00 03 	mov    DWORD PTR ds:0xf8,0x3
 247:	00 00 00 
 24a:	eb 85                	jmp    1d1 <PutMouseCodeToInterruptQueue+0x31>
 24c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00000250 <ApplyMouseData>:
 250:	56                   	push   esi
 251:	53                   	push   ebx
 252:	83 ec 24             	sub    esp,0x24
 255:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4
 25b:	a1 00 00 00 00       	mov    eax,ds:0x0
 260:	0f be 74 24 31       	movsx  esi,BYTE PTR [esp+0x31]
 265:	c7 44 24 10 f7 05 00 	mov    DWORD PTR [esp+0x10],0x5f7
 26c:	00 
 26d:	0f b6 5c 24 32       	movzx  ebx,BYTE PTR [esp+0x32]
 272:	8d 4a 13             	lea    ecx,[edx+0x13]
 275:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
 279:	8d 48 0d             	lea    ecx,[eax+0xd]
 27c:	89 4c 24 08          	mov    DWORD PTR [esp+0x8],ecx
 280:	89 04 24             	mov    DWORD PTR [esp],eax
 283:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 287:	e8 fc ff ff ff       	call   288 <ApplyMouseData+0x38>
 28c:	89 f1                	mov    ecx,esi
 28e:	31 c0                	xor    eax,eax
 290:	03 0d 00 00 00 00    	add    ecx,DWORD PTR ds:0x0
 296:	78 0f                	js     2a7 <ApplyMouseData+0x57>
 298:	0f b7 05 01 80 26 00 	movzx  eax,WORD PTR ds:0x268001
 29f:	83 e8 01             	sub    eax,0x1
 2a2:	39 c8                	cmp    eax,ecx
 2a4:	0f 4f c1             	cmovg  eax,ecx
 2a7:	8b 0d 04 00 00 00    	mov    ecx,DWORD PTR ds:0x4
 2ad:	0f be d3             	movsx  edx,bl
 2b0:	a3 00 00 00 00       	mov    ds:0x0,eax
 2b5:	29 d1                	sub    ecx,edx
 2b7:	78 57                	js     310 <ApplyMouseData+0xc0>
 2b9:	0f b7 15 03 80 26 00 	movzx  edx,WORD PTR ds:0x268003
 2c0:	83 ea 01             	sub    edx,0x1
 2c3:	39 ca                	cmp    edx,ecx
 2c5:	0f 4f d1             	cmovg  edx,ecx
 2c8:	0f b6 4c 24 30       	movzx  ecx,BYTE PTR [esp+0x30]
 2cd:	c7 44 24 14 f7 05 00 	mov    DWORD PTR [esp+0x14],0x5f7
 2d4:	00 
 2d5:	c7 44 24 10 13 00 00 	mov    DWORD PTR [esp+0x10],0x13
 2dc:	00 
 2dd:	c7 44 24 0c 0d 00 00 	mov    DWORD PTR [esp+0xc],0xd
 2e4:	00 
 2e5:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
 2e9:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 2ed:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 2f4:	89 15 04 00 00 00    	mov    DWORD PTR ds:0x4,edx
 2fa:	88 0d 08 00 00 00    	mov    BYTE PTR ds:0x8,cl
 300:	e8 fc ff ff ff       	call   301 <ApplyMouseData+0xb1>
 305:	83 c4 24             	add    esp,0x24
 308:	5b                   	pop    ebx
 309:	5e                   	pop    esi
 30a:	c3                   	ret    
 30b:	90                   	nop
 30c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 310:	31 d2                	xor    edx,edx
 312:	eb b4                	jmp    2c8 <ApplyMouseData+0x78>
 314:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 31a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

00000320 <DrawMouse>:
 320:	83 ec 2c             	sub    esp,0x2c
 323:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 327:	c7 44 24 14 f7 05 00 	mov    DWORD PTR [esp+0x14],0x5f7
 32e:	00 
 32f:	c7 44 24 10 13 00 00 	mov    DWORD PTR [esp+0x10],0x13
 336:	00 
 337:	c7 44 24 0c 0d 00 00 	mov    DWORD PTR [esp+0xc],0xd
 33e:	00 
 33f:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 343:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
 347:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 34e:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 352:	e8 fc ff ff ff       	call   353 <DrawMouse+0x33>
 357:	83 c4 2c             	add    esp,0x2c
 35a:	c3                   	ret    
 35b:	90                   	nop
 35c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00000360 <OnMouseInterrupt>:
 360:	56                   	push   esi
 361:	53                   	push   ebx
 362:	83 ec 34             	sub    esp,0x34
 365:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0
 36b:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
 36f:	c7 44 24 10 f7 05 00 	mov    DWORD PTR [esp+0x10],0x5f7
 376:	00 
 377:	89 14 24             	mov    DWORD PTR [esp],edx
 37a:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
 37e:	89 c6                	mov    esi,eax
 380:	89 c3                	mov    ebx,eax
 382:	a1 04 00 00 00       	mov    eax,ds:0x4
 387:	66 c1 ee 08          	shr    si,0x8
 38b:	c1 eb 10             	shr    ebx,0x10
 38e:	8d 48 13             	lea    ecx,[eax+0x13]
 391:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
 395:	8d 4a 0d             	lea    ecx,[edx+0xd]
 398:	89 4c 24 08          	mov    DWORD PTR [esp+0x8],ecx
 39c:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 3a0:	e8 fc ff ff ff       	call   3a1 <OnMouseInterrupt+0x41>
 3a5:	89 f0                	mov    eax,esi
 3a7:	31 d2                	xor    edx,edx
 3a9:	0f be c8             	movsx  ecx,al
 3ac:	03 0d 00 00 00 00    	add    ecx,DWORD PTR ds:0x0
 3b2:	78 0f                	js     3c3 <OnMouseInterrupt+0x63>
 3b4:	0f b7 15 01 80 26 00 	movzx  edx,WORD PTR ds:0x268001
 3bb:	83 ea 01             	sub    edx,0x1
 3be:	39 ca                	cmp    edx,ecx
 3c0:	0f 4f d1             	cmovg  edx,ecx
 3c3:	8b 0d 04 00 00 00    	mov    ecx,DWORD PTR ds:0x4
 3c9:	0f be c3             	movsx  eax,bl
 3cc:	89 15 00 00 00 00    	mov    DWORD PTR ds:0x0,edx
 3d2:	29 c1                	sub    ecx,eax
 3d4:	78 52                	js     428 <OnMouseInterrupt+0xc8>
 3d6:	0f b7 05 03 80 26 00 	movzx  eax,WORD PTR ds:0x268003
 3dd:	83 e8 01             	sub    eax,0x1
 3e0:	39 c8                	cmp    eax,ecx
 3e2:	0f 4f c1             	cmovg  eax,ecx
 3e5:	0f b6 4c 24 2c       	movzx  ecx,BYTE PTR [esp+0x2c]
 3ea:	c7 44 24 14 f7 05 00 	mov    DWORD PTR [esp+0x14],0x5f7
 3f1:	00 
 3f2:	c7 44 24 10 13 00 00 	mov    DWORD PTR [esp+0x10],0x13
 3f9:	00 
 3fa:	c7 44 24 0c 0d 00 00 	mov    DWORD PTR [esp+0xc],0xd
 401:	00 
 402:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 406:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 40a:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 411:	a3 04 00 00 00       	mov    ds:0x4,eax
 416:	88 0d 08 00 00 00    	mov    BYTE PTR ds:0x8,cl
 41c:	e8 fc ff ff ff       	call   41d <OnMouseInterrupt+0xbd>
 421:	83 c4 34             	add    esp,0x34
 424:	5b                   	pop    ebx
 425:	5e                   	pop    esi
 426:	c3                   	ret    
 427:	90                   	nop
 428:	31 c0                	xor    eax,eax
 42a:	eb b9                	jmp    3e5 <OnMouseInterrupt+0x85>
 42c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00000430 <_MouseHandler>:
 430:	83 ec 1c             	sub    esp,0x1c
 433:	c7 04 24 0c 00 00 00 	mov    DWORD PTR [esp],0xc
 43a:	e8 fc ff ff ff       	call   43b <_MouseHandler+0xb>
 43f:	c7 04 24 60 00 00 00 	mov    DWORD PTR [esp],0x60
 446:	e8 fc ff ff ff       	call   447 <_MouseHandler+0x17>
 44b:	8b 15 f8 00 00 00    	mov    edx,DWORD PTR ds:0xf8
 451:	83 fa 02             	cmp    edx,0x2
 454:	74 52                	je     4a8 <_MouseHandler+0x78>
 456:	76 20                	jbe    478 <_MouseHandler+0x48>
 458:	83 fa 03             	cmp    edx,0x3
 45b:	74 2b                	je     488 <_MouseHandler+0x58>
 45d:	83 fa 04             	cmp    edx,0x4
 460:	75 1b                	jne    47d <_MouseHandler+0x4d>
 462:	3c fa                	cmp    al,0xfa
 464:	75 17                	jne    47d <_MouseHandler+0x4d>
 466:	c7 05 f8 00 00 00 03 	mov    DWORD PTR ds:0xf8,0x3
 46d:	00 00 00 
 470:	83 c4 1c             	add    esp,0x1c
 473:	c3                   	ret    
 474:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 478:	83 fa 01             	cmp    edx,0x1
 47b:	74 43                	je     4c0 <_MouseHandler+0x90>
 47d:	83 c4 1c             	add    esp,0x1c
 480:	c3                   	ret    
 481:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 488:	89 c2                	mov    edx,eax
 48a:	83 e2 c8             	and    edx,0xffffffc8
 48d:	80 fa 08             	cmp    dl,0x8
 490:	75 eb                	jne    47d <_MouseHandler+0x4d>
 492:	a2 0c 00 00 00       	mov    ds:0xc,al
 497:	c7 05 f8 00 00 00 02 	mov    DWORD PTR ds:0xf8,0x2
 49e:	00 00 00 
 4a1:	eb da                	jmp    47d <_MouseHandler+0x4d>
 4a3:	90                   	nop
 4a4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 4a8:	a2 0d 00 00 00       	mov    ds:0xd,al
 4ad:	c7 05 f8 00 00 00 01 	mov    DWORD PTR ds:0xf8,0x1
 4b4:	00 00 00 
 4b7:	83 c4 1c             	add    esp,0x1c
 4ba:	c3                   	ret    
 4bb:	90                   	nop
 4bc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 4c0:	a2 0e 00 00 00       	mov    ds:0xe,al
 4c5:	a1 0c 00 00 00       	mov    eax,ds:0xc
 4ca:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 4d1:	0d 00 00 00 03       	or     eax,0x3000000
 4d6:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 4da:	e8 fc ff ff ff       	call   4db <_MouseHandler+0xab>
 4df:	c7 05 f8 00 00 00 03 	mov    DWORD PTR ds:0xf8,0x3
 4e6:	00 00 00 
 4e9:	eb 85                	jmp    470 <_MouseHandler+0x40>

Disassembly of section .data:

00000000 <MouseBlock.1358>:
   0:	2a 2e                	sub    ch,BYTE PTR [esi]
   2:	2e 2e 2e 2e 2e 2e 2e 	cs cs cs cs cs cs cs cs cs cs sub ch,BYTE PTR cs:[edx]
   9:	2e 2e 2e 2e 2a 2a 
   f:	2e 2e 2e 2e 2e 2e 2e 	cs cs cs cs cs cs cs cs cs cs (bad)
  16:	2e 2e 2e 2e 2a 2d 2a 
  1d:	2e 
  1e:	2e 2e 2e 2e 2e 2e 2e 	cs cs cs cs cs cs cs cs sub ch,BYTE PTR cs:[edi+0x2d]
  25:	2e 2e 2a 6f 2d 
  2a:	2a 2e                	sub    ch,BYTE PTR [esi]
  2c:	2e 2e 2e 2e 2e 2e 2e 	cs cs cs cs cs cs cs sub ch,BYTE PTR cs:[edi+0x6f]
  33:	2e 2a 6f 6f 
  37:	2d 2a 2e 2e 2e       	sub    eax,0x2e2e2e2a
  3c:	2e 2e 2e 2e 2e 2a 6f 	cs cs cs cs sub ch,BYTE PTR cs:[edi+0x6f]
  43:	6f 
  44:	6f                   	outs   dx,DWORD PTR ds:[esi]
  45:	2d 2a 2e 2e 2e       	sub    eax,0x2e2e2e2a
  4a:	2e 2e 2e 2e 2a 6f 6f 	cs cs cs sub ch,BYTE PTR cs:[edi+0x6f]
  51:	6f                   	outs   dx,DWORD PTR ds:[esi]
  52:	6f                   	outs   dx,DWORD PTR ds:[esi]
  53:	2d 2a 2e 2e 2e       	sub    eax,0x2e2e2e2a
  58:	2e 2e 2e 2a 6f 6f    	cs cs sub ch,BYTE PTR cs:[edi+0x6f]
  5e:	6f                   	outs   dx,DWORD PTR ds:[esi]
  5f:	6f                   	outs   dx,DWORD PTR ds:[esi]
  60:	6f                   	outs   dx,DWORD PTR ds:[esi]
  61:	2d 2a 2e 2e 2e       	sub    eax,0x2e2e2e2a
  66:	2e 2e 2a 6f 6f       	cs sub ch,BYTE PTR cs:[edi+0x6f]
  6b:	6f                   	outs   dx,DWORD PTR ds:[esi]
  6c:	6f                   	outs   dx,DWORD PTR ds:[esi]
  6d:	6f                   	outs   dx,DWORD PTR ds:[esi]
  6e:	6f                   	outs   dx,DWORD PTR ds:[esi]
  6f:	2d 2a 2e 2e 2e       	sub    eax,0x2e2e2e2a
  74:	2e 2a 6f 6f          	sub    ch,BYTE PTR cs:[edi+0x6f]
  78:	6f                   	outs   dx,DWORD PTR ds:[esi]
  79:	6f                   	outs   dx,DWORD PTR ds:[esi]
  7a:	6f                   	outs   dx,DWORD PTR ds:[esi]
  7b:	6f                   	outs   dx,DWORD PTR ds:[esi]
  7c:	6f                   	outs   dx,DWORD PTR ds:[esi]
  7d:	2d 2a 2e 2e 2e       	sub    eax,0x2e2e2e2a
  82:	2a 6f 6f             	sub    ch,BYTE PTR [edi+0x6f]
  85:	6f                   	outs   dx,DWORD PTR ds:[esi]
  86:	6f                   	outs   dx,DWORD PTR ds:[esi]
  87:	6f                   	outs   dx,DWORD PTR ds:[esi]
  88:	6f                   	outs   dx,DWORD PTR ds:[esi]
  89:	6f                   	outs   dx,DWORD PTR ds:[esi]
  8a:	6f                   	outs   dx,DWORD PTR ds:[esi]
  8b:	2d 2a 2e 2e 2a       	sub    eax,0x2a2e2e2a
  90:	6f                   	outs   dx,DWORD PTR ds:[esi]
  91:	6f                   	outs   dx,DWORD PTR ds:[esi]
  92:	6f                   	outs   dx,DWORD PTR ds:[esi]
  93:	6f                   	outs   dx,DWORD PTR ds:[esi]
  94:	6f                   	outs   dx,DWORD PTR ds:[esi]
  95:	6f                   	outs   dx,DWORD PTR ds:[esi]
  96:	6f                   	outs   dx,DWORD PTR ds:[esi]
  97:	6f                   	outs   dx,DWORD PTR ds:[esi]
  98:	6f                   	outs   dx,DWORD PTR ds:[esi]
  99:	2d 2a 2e 2a 6f       	sub    eax,0x6f2a2e2a
  9e:	6f                   	outs   dx,DWORD PTR ds:[esi]
  9f:	6f                   	outs   dx,DWORD PTR ds:[esi]
  a0:	6f                   	outs   dx,DWORD PTR ds:[esi]
  a1:	6f                   	outs   dx,DWORD PTR ds:[esi]
  a2:	6f                   	outs   dx,DWORD PTR ds:[esi]
  a3:	2a 2a                	sub    ch,BYTE PTR [edx]
  a5:	2a 2a                	sub    ch,BYTE PTR [edx]
  a7:	2a 2a                	sub    ch,BYTE PTR [edx]
  a9:	2a 6f 6f             	sub    ch,BYTE PTR [edi+0x6f]
  ac:	6f                   	outs   dx,DWORD PTR ds:[esi]
  ad:	2a 2d 6f 2a 2e 2e    	sub    ch,BYTE PTR ds:0x2e2e2a6f
  b3:	2e 2e 2e 2a 6f 6f    	cs cs sub ch,BYTE PTR cs:[edi+0x6f]
  b9:	2a 2e                	sub    ch,BYTE PTR [esi]
  bb:	2a 6f 6f             	sub    ch,BYTE PTR [edi+0x6f]
  be:	2a 2e                	sub    ch,BYTE PTR [esi]
  c0:	2e 2e 2e 2a 2d 2a 2e 	cs cs sub ch,BYTE PTR cs:0x2a2e2e2a
  c7:	2e 2a 
  c9:	2d 6f 2a 2e 2e       	sub    eax,0x2e2e2a6f
  ce:	2e 2e 2a 2a          	cs sub ch,BYTE PTR cs:[edx]
  d2:	2e 2e 2e 2e 2a 6f 6f 	cs cs cs sub ch,BYTE PTR cs:[edi+0x6f]
  d9:	2a 2e                	sub    ch,BYTE PTR [esi]
  db:	2e 2e 2a 2e          	cs sub ch,BYTE PTR cs:[esi]
  df:	2e 2e 2e 2e 2a 2d 2d 	cs cs cs sub ch,BYTE PTR cs:0x2e2e2a2d
  e6:	2a 2e 2e 
  e9:	2e 2e 2e 2e 2e 2e 2e 	cs cs cs cs cs cs cs sub ch,BYTE PTR cs:[edx]
  f0:	2e 2a 2a 
  f3:	2e 2e 2e 2e 00 04 00 	cs cs cs add BYTE PTR cs:[eax+eax*1],al

000000f8 <phase.1345>:
  f8:	04 00                	add    al,0x0
	...

Disassembly of section .bss:

00000000 <g_Mouse>:
	...

0000000c <data.1344>:
   c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	00 47 43             	add    BYTE PTR [edi+0x43],al
   3:	43                   	inc    ebx
   4:	3a 20                	cmp    ah,BYTE PTR [eax]
   6:	28 47 4e             	sub    BYTE PTR [edi+0x4e],al
   9:	55                   	push   ebp
   a:	29 20                	sub    DWORD PTR [eax],esp
   c:	34 2e                	xor    al,0x2e
   e:	37                   	aaa    
   f:	2e 33 00             	xor    eax,DWORD PTR cs:[eax]

Disassembly of section .eh_frame:

00000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	00 00                	add    BYTE PTR [eax],al
   6:	00 00                	add    BYTE PTR [eax],al
   8:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
   b:	00 01                	add    BYTE PTR [ecx],al
   d:	7c 08                	jl     17 <.eh_frame+0x17>
   f:	01 1b                	add    DWORD PTR [ebx],ebx
  11:	0c 04                	or     al,0x4
  13:	04 88                	add    al,0x88
  15:	01 00                	add    DWORD PTR [eax],eax
  17:	00 28                	add    BYTE PTR [eax],ch
  19:	00 00                	add    BYTE PTR [eax],al
  1b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  1e:	00 00                	add    BYTE PTR [eax],al
  20:	00 00                	add    BYTE PTR [eax],al
  22:	00 00                	add    BYTE PTR [eax],al
  24:	25 01 00 00 00       	and    eax,0x1
  29:	41                   	inc    ecx
  2a:	0e                   	push   cs
  2b:	08 86 02 41 0e 0c    	or     BYTE PTR [esi+0xc0e4102],al
  31:	83 03 43             	add    DWORD PTR [ebx],0x43
  34:	0e                   	push   cs
  35:	30 03                	xor    BYTE PTR [ebx],al
  37:	1b 01                	sbb    eax,DWORD PTR [ecx]
  39:	0e                   	push   cs
  3a:	0c 43                	or     al,0x43
  3c:	c3                   	ret    
  3d:	0e                   	push   cs
  3e:	08 41 c6             	or     BYTE PTR [ecx-0x3a],al
  41:	0e                   	push   cs
  42:	04 00                	add    al,0x0
  44:	20 00                	and    BYTE PTR [eax],al
  46:	00 00                	add    BYTE PTR [eax],al
  48:	48                   	dec    eax
  49:	00 00                	add    BYTE PTR [eax],al
  4b:	00 30                	add    BYTE PTR [eax],dh
  4d:	01 00                	add    DWORD PTR [eax],eax
  4f:	00 61 00             	add    BYTE PTR [ecx+0x0],ah
  52:	00 00                	add    BYTE PTR [eax],al
  54:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  57:	08 83 02 43 0e 20    	or     BYTE PTR [ebx+0x200e4302],al
  5d:	02 5b 0e             	add    bl,BYTE PTR [ebx+0xe]
  60:	08 41 c3             	or     BYTE PTR [ecx-0x3d],al
  63:	0e                   	push   cs
  64:	04 00                	add    al,0x0
  66:	00 00                	add    BYTE PTR [eax],al
  68:	24 00                	and    al,0x0
  6a:	00 00                	add    BYTE PTR [eax],al
  6c:	6c                   	ins    BYTE PTR es:[edi],dx
  6d:	00 00                	add    BYTE PTR [eax],al
  6f:	00 a0 01 00 00 ac    	add    BYTE PTR [eax-0x53ffffff],ah
  75:	00 00                	add    BYTE PTR [eax],al
  77:	00 00                	add    BYTE PTR [eax],al
  79:	43                   	inc    ebx
  7a:	0e                   	push   cs
  7b:	20 71 0a             	and    BYTE PTR [ecx+0xa],dh
  7e:	0e                   	push   cs
  7f:	04 44                	add    al,0x44
  81:	0b 48 0a             	or     ecx,DWORD PTR [eax+0xa]
  84:	0e                   	push   cs
  85:	04 48                	add    al,0x48
  87:	0b 73 0a             	or     esi,DWORD PTR [ebx+0xa]
  8a:	0e                   	push   cs
  8b:	04 45                	add    al,0x45
  8d:	0b 00                	or     eax,DWORD PTR [eax]
  8f:	00 2c 00             	add    BYTE PTR [eax+eax*1],ch
  92:	00 00                	add    BYTE PTR [eax],al
  94:	94                   	xchg   esp,eax
  95:	00 00                	add    BYTE PTR [eax],al
  97:	00 50 02             	add    BYTE PTR [eax+0x2],dl
  9a:	00 00                	add    BYTE PTR [eax],al
  9c:	c4 00                	les    eax,FWORD PTR [eax]
  9e:	00 00                	add    BYTE PTR [eax],al
  a0:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  a3:	08 86 02 41 0e 0c    	or     BYTE PTR [esi+0xc0e4102],al
  a9:	83 03 43             	add    DWORD PTR [ebx],0x43
  ac:	0e                   	push   cs
  ad:	30 02                	xor    BYTE PTR [edx],al
  af:	b3 0a                	mov    bl,0xa
  b1:	0e                   	push   cs
  b2:	0c 41                	or     al,0x41
  b4:	c3                   	ret    
  b5:	0e                   	push   cs
  b6:	08 41 c6             	or     BYTE PTR [ecx-0x3a],al
  b9:	0e                   	push   cs
  ba:	04 46                	add    al,0x46
  bc:	0b 00                	or     eax,DWORD PTR [eax]
  be:	00 00                	add    BYTE PTR [eax],al
  c0:	14 00                	adc    al,0x0
  c2:	00 00                	add    BYTE PTR [eax],al
  c4:	c4 00                	les    eax,FWORD PTR [eax]
  c6:	00 00                	add    BYTE PTR [eax],al
  c8:	20 03                	and    BYTE PTR [ebx],al
  ca:	00 00                	add    BYTE PTR [eax],al
  cc:	3b 00                	cmp    eax,DWORD PTR [eax]
  ce:	00 00                	add    BYTE PTR [eax],al
  d0:	00 43 0e             	add    BYTE PTR [ebx+0xe],al
  d3:	30 77 0e             	xor    BYTE PTR [edi+0xe],dh
  d6:	04 00                	add    al,0x0
  d8:	2c 00                	sub    al,0x0
  da:	00 00                	add    BYTE PTR [eax],al
  dc:	dc 00                	fadd   QWORD PTR [eax]
  de:	00 00                	add    BYTE PTR [eax],al
  e0:	60                   	pusha  
  e1:	03 00                	add    eax,DWORD PTR [eax]
  e3:	00 cc                	add    ah,cl
  e5:	00 00                	add    BYTE PTR [eax],al
  e7:	00 00                	add    BYTE PTR [eax],al
  e9:	41                   	inc    ecx
  ea:	0e                   	push   cs
  eb:	08 86 02 41 0e 0c    	or     BYTE PTR [esi+0xc0e4102],al
  f1:	83 03 43             	add    DWORD PTR [ebx],0x43
  f4:	0e                   	push   cs
  f5:	40                   	inc    eax
  f6:	02 bf 0a 0e 0c 41    	add    bh,BYTE PTR [edi+0x410c0e0a]
  fc:	c3                   	ret    
  fd:	0e                   	push   cs
  fe:	08 41 c6             	or     BYTE PTR [ecx-0x3a],al
 101:	0e                   	push   cs
 102:	04 42                	add    al,0x42
 104:	0b 00                	or     eax,DWORD PTR [eax]
 106:	00 00                	add    BYTE PTR [eax],al
 108:	24 00                	and    al,0x0
 10a:	00 00                	add    BYTE PTR [eax],al
 10c:	0c 01                	or     al,0x1
 10e:	00 00                	add    BYTE PTR [eax],al
 110:	30 04 00             	xor    BYTE PTR [eax+eax*1],al
 113:	00 bb 00 00 00 00    	add    BYTE PTR [ebx+0x0],bh
 119:	43                   	inc    ebx
 11a:	0e                   	push   cs
 11b:	20 02                	and    BYTE PTR [edx],al
 11d:	40                   	inc    eax
 11e:	0a 0e                	or     cl,BYTE PTR [esi]
 120:	04 45                	add    al,0x45
 122:	0b 48 0a             	or     ecx,DWORD PTR [eax+0xa]
 125:	0e                   	push   cs
 126:	04 48                	add    al,0x48
 128:	0b 72 0a             	or     esi,DWORD PTR [edx+0xa]
 12b:	0e                   	push   cs
 12c:	04 46                	add    al,0x46
 12e:	0b 00                	or     eax,DWORD PTR [eax]
