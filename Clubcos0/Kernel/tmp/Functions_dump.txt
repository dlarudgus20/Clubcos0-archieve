
tmp/Functions.o:     file format elf32-i386


Disassembly of section .text:

00000000 <isalpha>:
   0:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   4:	83 e0 df             	and    eax,0xffffffdf
   7:	83 e8 41             	sub    eax,0x41
   a:	83 f8 19             	cmp    eax,0x19
   d:	0f 96 c0             	setbe  al
  10:	0f b6 c0             	movzx  eax,al
  13:	c3                   	ret    
  14:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
  1a:	8d bf 00 00 00 00    	lea    edi,[edi+0x0]

00000020 <isdigit>:
  20:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
  24:	83 e8 30             	sub    eax,0x30
  27:	83 f8 09             	cmp    eax,0x9
  2a:	0f 96 c0             	setbe  al
  2d:	0f b6 c0             	movzx  eax,al
  30:	c3                   	ret    
  31:	eb 0d                	jmp    40 <strlen>
  33:	90                   	nop
  34:	90                   	nop
  35:	90                   	nop
  36:	90                   	nop
  37:	90                   	nop
  38:	90                   	nop
  39:	90                   	nop
  3a:	90                   	nop
  3b:	90                   	nop
  3c:	90                   	nop
  3d:	90                   	nop
  3e:	90                   	nop
  3f:	90                   	nop

00000040 <strlen>:
  40:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
  44:	31 c0                	xor    eax,eax
  46:	80 3a 00             	cmp    BYTE PTR [edx],0x0
  49:	74 10                	je     5b <strlen+0x1b>
  4b:	90                   	nop
  4c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
  50:	83 c0 01             	add    eax,0x1
  53:	80 3c 02 00          	cmp    BYTE PTR [edx+eax*1],0x0
  57:	75 f7                	jne    50 <strlen+0x10>
  59:	f3 c3                	repz ret 
  5b:	f3 c3                	repz ret 
  5d:	8d 76 00             	lea    esi,[esi+0x0]

00000060 <strcpy>:
  60:	56                   	push   esi
  61:	31 c9                	xor    ecx,ecx
  63:	53                   	push   ebx
  64:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
  68:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
  6c:	0f b6 16             	movzx  edx,BYTE PTR [esi]
  6f:	84 d2                	test   dl,dl
  71:	74 15                	je     88 <strcpy+0x28>
  73:	31 c0                	xor    eax,eax
  75:	8d 76 00             	lea    esi,[esi+0x0]
  78:	83 c0 01             	add    eax,0x1
  7b:	88 14 0b             	mov    BYTE PTR [ebx+ecx*1],dl
  7e:	0f b6 14 06          	movzx  edx,BYTE PTR [esi+eax*1]
  82:	89 c1                	mov    ecx,eax
  84:	84 d2                	test   dl,dl
  86:	75 f0                	jne    78 <strcpy+0x18>
  88:	c6 04 0b 00          	mov    BYTE PTR [ebx+ecx*1],0x0
  8c:	5b                   	pop    ebx
  8d:	5e                   	pop    esi
  8e:	c3                   	ret    
  8f:	90                   	nop

00000090 <strrev>:
  90:	55                   	push   ebp
  91:	31 c9                	xor    ecx,ecx
  93:	57                   	push   edi
  94:	56                   	push   esi
  95:	53                   	push   ebx
  96:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
  9a:	0f b6 28             	movzx  ebp,BYTE PTR [eax]
  9d:	89 ea                	mov    edx,ebp
  9f:	84 d2                	test   dl,dl
  a1:	75 07                	jne    aa <strrev+0x1a>
  a3:	eb 49                	jmp    ee <strrev+0x5e>
  a5:	8d 76 00             	lea    esi,[esi+0x0]
  a8:	89 d1                	mov    ecx,edx
  aa:	80 7c 08 01 00       	cmp    BYTE PTR [eax+ecx*1+0x1],0x0
  af:	8d 51 01             	lea    edx,[ecx+0x1]
  b2:	75 f4                	jne    a8 <strrev+0x18>
  b4:	85 c9                	test   ecx,ecx
  b6:	74 36                	je     ee <strrev+0x5e>
  b8:	83 e9 01             	sub    ecx,0x1
  bb:	89 c6                	mov    esi,eax
  bd:	31 d2                	xor    edx,edx
  bf:	eb 0e                	jmp    cf <strrev+0x3f>
  c1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
  c8:	83 e9 01             	sub    ecx,0x1
  cb:	39 d7                	cmp    edi,edx
  cd:	7e 1f                	jle    ee <strrev+0x5e>
  cf:	0f b6 5c 08 01       	movzx  ebx,BYTE PTR [eax+ecx*1+0x1]
  d4:	83 c2 01             	add    edx,0x1
  d7:	89 cf                	mov    edi,ecx
  d9:	88 1e                	mov    BYTE PTR [esi],bl
  db:	89 eb                	mov    ebx,ebp
  dd:	88 5c 08 01          	mov    BYTE PTR [eax+ecx*1+0x1],bl
  e1:	0f b6 2c 10          	movzx  ebp,BYTE PTR [eax+edx*1]
  e5:	8d 34 10             	lea    esi,[eax+edx*1]
  e8:	89 eb                	mov    ebx,ebp
  ea:	84 db                	test   bl,bl
  ec:	75 da                	jne    c8 <strrev+0x38>
  ee:	5b                   	pop    ebx
  ef:	5e                   	pop    esi
  f0:	5f                   	pop    edi
  f1:	5d                   	pop    ebp
  f2:	c3                   	ret    
  f3:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
  f9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00000100 <DecimalToString>:
 100:	55                   	push   ebp
 101:	57                   	push   edi
 102:	56                   	push   esi
 103:	53                   	push   ebx
 104:	83 ec 04             	sub    esp,0x4
 107:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
 10b:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
 10f:	85 db                	test   ebx,ebx
 111:	0f 84 b1 00 00 00    	je     1c8 <DecimalToString+0xc8>
 117:	81 fb 00 00 00 80    	cmp    ebx,0x80000000
 11d:	0f 84 b5 00 00 00    	je     1d8 <DecimalToString+0xd8>
 123:	31 f6                	xor    esi,esi
 125:	85 db                	test   ebx,ebx
 127:	0f 88 db 00 00 00    	js     208 <DecimalToString+0x108>
 12d:	bf 67 66 66 66       	mov    edi,0x66666667
 132:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 138:	89 d8                	mov    eax,ebx
 13a:	f7 ef                	imul   edi
 13c:	89 d8                	mov    eax,ebx
 13e:	c1 f8 1f             	sar    eax,0x1f
 141:	c1 fa 02             	sar    edx,0x2
 144:	29 c2                	sub    edx,eax
 146:	8d 04 92             	lea    eax,[edx+edx*4]
 149:	01 c0                	add    eax,eax
 14b:	29 c3                	sub    ebx,eax
 14d:	83 c3 30             	add    ebx,0x30
 150:	88 1c 31             	mov    BYTE PTR [ecx+esi*1],bl
 153:	83 c6 01             	add    esi,0x1
 156:	85 d2                	test   edx,edx
 158:	89 d3                	mov    ebx,edx
 15a:	75 dc                	jne    138 <DecimalToString+0x38>
 15c:	c6 04 31 00          	mov    BYTE PTR [ecx+esi*1],0x0
 160:	0f b6 31             	movzx  esi,BYTE PTR [ecx]
 163:	89 f3                	mov    ebx,esi
 165:	80 fb 2d             	cmp    bl,0x2d
 168:	0f 84 aa 00 00 00    	je     218 <DecimalToString+0x118>
 16e:	31 d2                	xor    edx,edx
 170:	84 db                	test   bl,bl
 172:	75 06                	jne    17a <DecimalToString+0x7a>
 174:	eb 59                	jmp    1cf <DecimalToString+0xcf>
 176:	66 90                	xchg   ax,ax
 178:	89 c2                	mov    edx,eax
 17a:	80 7c 11 01 00       	cmp    BYTE PTR [ecx+edx*1+0x1],0x0
 17f:	8d 42 01             	lea    eax,[edx+0x1]
 182:	75 f4                	jne    178 <DecimalToString+0x78>
 184:	85 d2                	test   edx,edx
 186:	74 47                	je     1cf <DecimalToString+0xcf>
 188:	83 ea 01             	sub    edx,0x1
 18b:	89 cf                	mov    edi,ecx
 18d:	31 c0                	xor    eax,eax
 18f:	eb 0e                	jmp    19f <DecimalToString+0x9f>
 191:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 198:	83 ea 01             	sub    edx,0x1
 19b:	39 c5                	cmp    ebp,eax
 19d:	7e 30                	jle    1cf <DecimalToString+0xcf>
 19f:	0f b6 5c 11 01       	movzx  ebx,BYTE PTR [ecx+edx*1+0x1]
 1a4:	83 c0 01             	add    eax,0x1
 1a7:	89 d5                	mov    ebp,edx
 1a9:	88 1f                	mov    BYTE PTR [edi],bl
 1ab:	89 f3                	mov    ebx,esi
 1ad:	88 5c 11 01          	mov    BYTE PTR [ecx+edx*1+0x1],bl
 1b1:	0f b6 34 01          	movzx  esi,BYTE PTR [ecx+eax*1]
 1b5:	8d 3c 01             	lea    edi,[ecx+eax*1]
 1b8:	89 f3                	mov    ebx,esi
 1ba:	84 db                	test   bl,bl
 1bc:	75 da                	jne    198 <DecimalToString+0x98>
 1be:	83 c4 04             	add    esp,0x4
 1c1:	5b                   	pop    ebx
 1c2:	5e                   	pop    esi
 1c3:	5f                   	pop    edi
 1c4:	5d                   	pop    ebp
 1c5:	c3                   	ret    
 1c6:	66 90                	xchg   ax,ax
 1c8:	c6 01 30             	mov    BYTE PTR [ecx],0x30
 1cb:	c6 41 01 00          	mov    BYTE PTR [ecx+0x1],0x0
 1cf:	83 c4 04             	add    esp,0x4
 1d2:	5b                   	pop    ebx
 1d3:	5e                   	pop    esi
 1d4:	5f                   	pop    edi
 1d5:	5d                   	pop    ebp
 1d6:	c3                   	ret    
 1d7:	90                   	nop
 1d8:	31 c0                	xor    eax,eax
 1da:	ba 2d 00 00 00       	mov    edx,0x2d
 1df:	31 db                	xor    ebx,ebx
 1e1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 1e8:	83 c0 01             	add    eax,0x1
 1eb:	88 14 19             	mov    BYTE PTR [ecx+ebx*1],dl
 1ee:	0f b6 90 00 00 00 00 	movzx  edx,BYTE PTR [eax+0x0]
 1f5:	89 c3                	mov    ebx,eax
 1f7:	84 d2                	test   dl,dl
 1f9:	75 ed                	jne    1e8 <DecimalToString+0xe8>
 1fb:	c6 04 01 00          	mov    BYTE PTR [ecx+eax*1],0x0
 1ff:	83 c4 04             	add    esp,0x4
 202:	5b                   	pop    ebx
 203:	5e                   	pop    esi
 204:	5f                   	pop    edi
 205:	5d                   	pop    ebp
 206:	c3                   	ret    
 207:	90                   	nop
 208:	c6 01 2d             	mov    BYTE PTR [ecx],0x2d
 20b:	f7 db                	neg    ebx
 20d:	be 01 00 00 00       	mov    esi,0x1
 212:	e9 16 ff ff ff       	jmp    12d <DecimalToString+0x2d>
 217:	90                   	nop
 218:	0f b6 71 01          	movzx  esi,BYTE PTR [ecx+0x1]
 21c:	8d 79 01             	lea    edi,[ecx+0x1]
 21f:	89 f0                	mov    eax,esi
 221:	84 c0                	test   al,al
 223:	74 aa                	je     1cf <DecimalToString+0xcf>
 225:	31 c0                	xor    eax,eax
 227:	eb 09                	jmp    232 <DecimalToString+0x132>
 229:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 230:	89 d0                	mov    eax,edx
 232:	8d 50 01             	lea    edx,[eax+0x1]
 235:	80 7c 11 01 00       	cmp    BYTE PTR [ecx+edx*1+0x1],0x0
 23a:	75 f4                	jne    230 <DecimalToString+0x130>
 23c:	85 c0                	test   eax,eax
 23e:	74 8f                	je     1cf <DecimalToString+0xcf>
 240:	83 e8 01             	sub    eax,0x1
 243:	ba 01 00 00 00       	mov    edx,0x1
 248:	eb 12                	jmp    25c <DecimalToString+0x15c>
 24a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 250:	83 e8 01             	sub    eax,0x1
 253:	3b 2c 24             	cmp    ebp,DWORD PTR [esp]
 256:	0f 8e 73 ff ff ff    	jle    1cf <DecimalToString+0xcf>
 25c:	0f b6 5c 01 02       	movzx  ebx,BYTE PTR [ecx+eax*1+0x2]
 261:	89 c5                	mov    ebp,eax
 263:	89 14 24             	mov    DWORD PTR [esp],edx
 266:	83 c2 01             	add    edx,0x1
 269:	88 1f                	mov    BYTE PTR [edi],bl
 26b:	89 f3                	mov    ebx,esi
 26d:	88 5c 01 02          	mov    BYTE PTR [ecx+eax*1+0x2],bl
 271:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 274:	8d 3c 11             	lea    edi,[ecx+edx*1]
 277:	0f b6 74 19 01       	movzx  esi,BYTE PTR [ecx+ebx*1+0x1]
 27c:	89 f3                	mov    ebx,esi
 27e:	84 db                	test   bl,bl
 280:	75 ce                	jne    250 <DecimalToString+0x150>
 282:	e9 48 ff ff ff       	jmp    1cf <DecimalToString+0xcf>
 287:	89 f6                	mov    esi,esi
 289:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00000290 <HexaToString>:
 290:	55                   	push   ebp
 291:	57                   	push   edi
 292:	56                   	push   esi
 293:	53                   	push   ebx
 294:	83 ec 04             	sub    esp,0x4
 297:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
 29b:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
 29f:	85 d2                	test   edx,edx
 2a1:	0f 84 99 00 00 00    	je     340 <HexaToString+0xb0>
 2a7:	31 c9                	xor    ecx,ecx
 2a9:	eb 15                	jmp    2c0 <HexaToString+0x30>
 2ab:	90                   	nop
 2ac:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 2b0:	83 c3 30             	add    ebx,0x30
 2b3:	c1 ea 04             	shr    edx,0x4
 2b6:	88 1c 08             	mov    BYTE PTR [eax+ecx*1],bl
 2b9:	83 c1 01             	add    ecx,0x1
 2bc:	85 d2                	test   edx,edx
 2be:	74 1a                	je     2da <HexaToString+0x4a>
 2c0:	89 d3                	mov    ebx,edx
 2c2:	83 e3 0f             	and    ebx,0xf
 2c5:	83 fb 09             	cmp    ebx,0x9
 2c8:	76 e6                	jbe    2b0 <HexaToString+0x20>
 2ca:	83 c3 57             	add    ebx,0x57
 2cd:	c1 ea 04             	shr    edx,0x4
 2d0:	88 1c 08             	mov    BYTE PTR [eax+ecx*1],bl
 2d3:	83 c1 01             	add    ecx,0x1
 2d6:	85 d2                	test   edx,edx
 2d8:	75 e6                	jne    2c0 <HexaToString+0x30>
 2da:	c6 04 08 00          	mov    BYTE PTR [eax+ecx*1],0x0
 2de:	0f b6 30             	movzx  esi,BYTE PTR [eax]
 2e1:	89 f2                	mov    edx,esi
 2e3:	80 fa 2d             	cmp    dl,0x2d
 2e6:	74 68                	je     350 <HexaToString+0xc0>
 2e8:	31 c9                	xor    ecx,ecx
 2ea:	84 d2                	test   dl,dl
 2ec:	75 04                	jne    2f2 <HexaToString+0x62>
 2ee:	eb 57                	jmp    347 <HexaToString+0xb7>
 2f0:	89 d1                	mov    ecx,edx
 2f2:	80 7c 08 01 00       	cmp    BYTE PTR [eax+ecx*1+0x1],0x0
 2f7:	8d 51 01             	lea    edx,[ecx+0x1]
 2fa:	75 f4                	jne    2f0 <HexaToString+0x60>
 2fc:	85 c9                	test   ecx,ecx
 2fe:	74 47                	je     347 <HexaToString+0xb7>
 300:	83 e9 01             	sub    ecx,0x1
 303:	89 c7                	mov    edi,eax
 305:	31 d2                	xor    edx,edx
 307:	eb 0e                	jmp    317 <HexaToString+0x87>
 309:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 310:	83 e9 01             	sub    ecx,0x1
 313:	39 d5                	cmp    ebp,edx
 315:	7e 30                	jle    347 <HexaToString+0xb7>
 317:	0f b6 5c 08 01       	movzx  ebx,BYTE PTR [eax+ecx*1+0x1]
 31c:	83 c2 01             	add    edx,0x1
 31f:	89 cd                	mov    ebp,ecx
 321:	88 1f                	mov    BYTE PTR [edi],bl
 323:	89 f3                	mov    ebx,esi
 325:	88 5c 08 01          	mov    BYTE PTR [eax+ecx*1+0x1],bl
 329:	0f b6 34 10          	movzx  esi,BYTE PTR [eax+edx*1]
 32d:	8d 3c 10             	lea    edi,[eax+edx*1]
 330:	89 f3                	mov    ebx,esi
 332:	84 db                	test   bl,bl
 334:	75 da                	jne    310 <HexaToString+0x80>
 336:	83 c4 04             	add    esp,0x4
 339:	5b                   	pop    ebx
 33a:	5e                   	pop    esi
 33b:	5f                   	pop    edi
 33c:	5d                   	pop    ebp
 33d:	c3                   	ret    
 33e:	66 90                	xchg   ax,ax
 340:	c6 00 30             	mov    BYTE PTR [eax],0x30
 343:	c6 40 01 00          	mov    BYTE PTR [eax+0x1],0x0
 347:	83 c4 04             	add    esp,0x4
 34a:	5b                   	pop    ebx
 34b:	5e                   	pop    esi
 34c:	5f                   	pop    edi
 34d:	5d                   	pop    ebp
 34e:	c3                   	ret    
 34f:	90                   	nop
 350:	0f b6 70 01          	movzx  esi,BYTE PTR [eax+0x1]
 354:	8d 78 01             	lea    edi,[eax+0x1]
 357:	89 f3                	mov    ebx,esi
 359:	84 db                	test   bl,bl
 35b:	74 ea                	je     347 <HexaToString+0xb7>
 35d:	31 d2                	xor    edx,edx
 35f:	eb 09                	jmp    36a <HexaToString+0xda>
 361:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 368:	89 ca                	mov    edx,ecx
 36a:	8d 4a 01             	lea    ecx,[edx+0x1]
 36d:	80 7c 08 01 00       	cmp    BYTE PTR [eax+ecx*1+0x1],0x0
 372:	75 f4                	jne    368 <HexaToString+0xd8>
 374:	85 d2                	test   edx,edx
 376:	74 cf                	je     347 <HexaToString+0xb7>
 378:	83 ea 01             	sub    edx,0x1
 37b:	b9 01 00 00 00       	mov    ecx,0x1
 380:	eb 0e                	jmp    390 <HexaToString+0x100>
 382:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 388:	83 ea 01             	sub    edx,0x1
 38b:	3b 2c 24             	cmp    ebp,DWORD PTR [esp]
 38e:	7e b7                	jle    347 <HexaToString+0xb7>
 390:	0f b6 5c 10 02       	movzx  ebx,BYTE PTR [eax+edx*1+0x2]
 395:	89 d5                	mov    ebp,edx
 397:	89 0c 24             	mov    DWORD PTR [esp],ecx
 39a:	83 c1 01             	add    ecx,0x1
 39d:	88 1f                	mov    BYTE PTR [edi],bl
 39f:	89 f3                	mov    ebx,esi
 3a1:	88 5c 10 02          	mov    BYTE PTR [eax+edx*1+0x2],bl
 3a5:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 3a8:	8d 3c 08             	lea    edi,[eax+ecx*1]
 3ab:	0f b6 74 18 01       	movzx  esi,BYTE PTR [eax+ebx*1+0x1]
 3b0:	89 f3                	mov    ebx,esi
 3b2:	84 db                	test   bl,bl
 3b4:	75 d2                	jne    388 <HexaToString+0xf8>
 3b6:	eb 8f                	jmp    347 <HexaToString+0xb7>
 3b8:	90                   	nop
 3b9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

000003c0 <itoa>:
 3c0:	83 7c 24 0c 10       	cmp    DWORD PTR [esp+0xc],0x10
 3c5:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
 3c9:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
 3cd:	74 09                	je     3d8 <itoa+0x18>
 3cf:	e9 fc ff ff ff       	jmp    3d0 <itoa+0x10>
 3d4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 3d8:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
 3dc:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 3e0:	e9 fc ff ff ff       	jmp    3e1 <itoa+0x21>
 3e5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 3e9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000003f0 <vsprintf>:
 3f0:	55                   	push   ebp
 3f1:	57                   	push   edi
 3f2:	56                   	push   esi
 3f3:	53                   	push   ebx
 3f4:	83 ec 14             	sub    esp,0x14
 3f7:	8b 6c 24 2c          	mov    ebp,DWORD PTR [esp+0x2c]
 3fb:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
 3ff:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
 403:	0f b6 4d 00          	movzx  ecx,BYTE PTR [ebp+0x0]
 407:	84 c9                	test   cl,cl
 409:	0f 84 7e 01 00 00    	je     58d <vsprintf+0x19d>
 40f:	89 fa                	mov    edx,edi
 411:	31 c0                	xor    eax,eax
 413:	89 f7                	mov    edi,esi
 415:	31 db                	xor    ebx,ebx
 417:	89 d6                	mov    esi,edx
 419:	eb 1e                	jmp    439 <vsprintf+0x49>
 41b:	90                   	nop
 41c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 420:	88 0c 07             	mov    BYTE PTR [edi+eax*1],cl
 423:	83 c0 01             	add    eax,0x1
 426:	8d 14 07             	lea    edx,[edi+eax*1]
 429:	83 c3 01             	add    ebx,0x1
 42c:	0f b6 4c 1d 00       	movzx  ecx,BYTE PTR [ebp+ebx*1+0x0]
 431:	84 c9                	test   cl,cl
 433:	0f 84 9f 00 00 00    	je     4d8 <vsprintf+0xe8>
 439:	80 f9 25             	cmp    cl,0x25
 43c:	75 e2                	jne    420 <vsprintf+0x30>
 43e:	83 c3 01             	add    ebx,0x1
 441:	0f b6 4c 1d 00       	movzx  ecx,BYTE PTR [ebp+ebx*1+0x0]
 446:	8d 51 a8             	lea    edx,[ecx-0x58]
 449:	80 fa 20             	cmp    dl,0x20
 44c:	77 d2                	ja     420 <vsprintf+0x30>
 44e:	0f b6 d2             	movzx  edx,dl
 451:	ff 24 95 00 00 00 00 	jmp    DWORD PTR [edx*4+0x0]
 458:	8b 0e                	mov    ecx,DWORD PTR [esi]
 45a:	8d 56 04             	lea    edx,[esi+0x4]
 45d:	01 f8                	add    eax,edi
 45f:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
 463:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 467:	0f b6 11             	movzx  edx,BYTE PTR [ecx]
 46a:	84 d2                	test   dl,dl
 46c:	0f 84 24 01 00 00    	je     596 <vsprintf+0x1a6>
 472:	89 5c 24 10          	mov    DWORD PTR [esp+0x10],ebx
 476:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
 47a:	31 c0                	xor    eax,eax
 47c:	31 f6                	xor    esi,esi
 47e:	66 90                	xchg   ax,ax
 480:	83 c0 01             	add    eax,0x1
 483:	88 14 33             	mov    BYTE PTR [ebx+esi*1],dl
 486:	0f b6 14 01          	movzx  edx,BYTE PTR [ecx+eax*1]
 48a:	89 c6                	mov    esi,eax
 48c:	84 d2                	test   dl,dl
 48e:	75 f0                	jne    480 <vsprintf+0x90>
 490:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
 494:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
 498:	c6 04 30 00          	mov    BYTE PTR [eax+esi*1],0x0
 49c:	80 3f 00             	cmp    BYTE PTR [edi],0x0
 49f:	0f 84 f8 00 00 00    	je     59d <vsprintf+0x1ad>
 4a5:	8d 4f 01             	lea    ecx,[edi+0x1]
 4a8:	31 c0                	xor    eax,eax
 4aa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 4b0:	89 ca                	mov    edx,ecx
 4b2:	83 c0 01             	add    eax,0x1
 4b5:	8d 49 01             	lea    ecx,[ecx+0x1]
 4b8:	80 79 ff 00          	cmp    BYTE PTR [ecx-0x1],0x0
 4bc:	75 f2                	jne    4b0 <vsprintf+0xc0>
 4be:	83 c3 01             	add    ebx,0x1
 4c1:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
 4c5:	0f b6 4c 1d 00       	movzx  ecx,BYTE PTR [ebp+ebx*1+0x0]
 4ca:	84 c9                	test   cl,cl
 4cc:	0f 85 67 ff ff ff    	jne    439 <vsprintf+0x49>
 4d2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 4d8:	c6 02 00             	mov    BYTE PTR [edx],0x0
 4db:	83 c4 14             	add    esp,0x14
 4de:	5b                   	pop    ebx
 4df:	5e                   	pop    esi
 4e0:	5f                   	pop    edi
 4e1:	5d                   	pop    ebp
 4e2:	c3                   	ret    
 4e3:	90                   	nop
 4e4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 4e8:	01 f8                	add    eax,edi
 4ea:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 4ee:	8b 06                	mov    eax,DWORD PTR [esi]
 4f0:	8d 56 04             	lea    edx,[esi+0x4]
 4f3:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
 4f7:	89 04 24             	mov    DWORD PTR [esp],eax
 4fa:	e8 fc ff ff ff       	call   4fb <vsprintf+0x10b>
 4ff:	80 3f 00             	cmp    BYTE PTR [edi],0x0
 502:	74 7c                	je     580 <vsprintf+0x190>
 504:	8d 4f 01             	lea    ecx,[edi+0x1]
 507:	31 c0                	xor    eax,eax
 509:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 510:	89 ca                	mov    edx,ecx
 512:	83 c0 01             	add    eax,0x1
 515:	8d 49 01             	lea    ecx,[ecx+0x1]
 518:	80 79 ff 00          	cmp    BYTE PTR [ecx-0x1],0x0
 51c:	75 f2                	jne    510 <vsprintf+0x120>
 51e:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
 522:	e9 02 ff ff ff       	jmp    429 <vsprintf+0x39>
 527:	90                   	nop
 528:	8b 16                	mov    edx,DWORD PTR [esi]
 52a:	83 c6 04             	add    esi,0x4
 52d:	88 14 07             	mov    BYTE PTR [edi+eax*1],dl
 530:	83 c0 01             	add    eax,0x1
 533:	8d 14 07             	lea    edx,[edi+eax*1]
 536:	e9 ee fe ff ff       	jmp    429 <vsprintf+0x39>
 53b:	90                   	nop
 53c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 540:	01 f8                	add    eax,edi
 542:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 546:	8b 06                	mov    eax,DWORD PTR [esi]
 548:	8d 56 04             	lea    edx,[esi+0x4]
 54b:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
 54f:	89 04 24             	mov    DWORD PTR [esp],eax
 552:	e8 fc ff ff ff       	call   553 <vsprintf+0x163>
 557:	80 3f 00             	cmp    BYTE PTR [edi],0x0
 55a:	74 24                	je     580 <vsprintf+0x190>
 55c:	8d 4f 01             	lea    ecx,[edi+0x1]
 55f:	31 c0                	xor    eax,eax
 561:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 568:	89 ca                	mov    edx,ecx
 56a:	83 c0 01             	add    eax,0x1
 56d:	8d 49 01             	lea    ecx,[ecx+0x1]
 570:	80 79 ff 00          	cmp    BYTE PTR [ecx-0x1],0x0
 574:	75 f2                	jne    568 <vsprintf+0x178>
 576:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
 57a:	e9 aa fe ff ff       	jmp    429 <vsprintf+0x39>
 57f:	90                   	nop
 580:	89 fa                	mov    edx,edi
 582:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
 586:	31 c0                	xor    eax,eax
 588:	e9 9c fe ff ff       	jmp    429 <vsprintf+0x39>
 58d:	89 f2                	mov    edx,esi
 58f:	31 c0                	xor    eax,eax
 591:	e9 42 ff ff ff       	jmp    4d8 <vsprintf+0xe8>
 596:	31 f6                	xor    esi,esi
 598:	e9 f7 fe ff ff       	jmp    494 <vsprintf+0xa4>
 59d:	89 fa                	mov    edx,edi
 59f:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
 5a3:	31 c0                	xor    eax,eax
 5a5:	e9 7f fe ff ff       	jmp    429 <vsprintf+0x39>
 5aa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

000005b0 <sprintf>:
 5b0:	83 ec 0c             	sub    esp,0xc
 5b3:	8d 44 24 18          	lea    eax,[esp+0x18]
 5b7:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 5bb:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
 5bf:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 5c3:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
 5c7:	89 04 24             	mov    DWORD PTR [esp],eax
 5ca:	e8 fc ff ff ff       	call   5cb <sprintf+0x1b>
 5cf:	83 c4 0c             	add    esp,0xc
 5d2:	c3                   	ret    

Disassembly of section .rodata.str1.1:

00000000 <.rodata.str1.1>:
   0:	2d 32 31 34 37       	sub    eax,0x37343132
   5:	34 38                	xor    al,0x38
   7:	33 36                	xor    esi,DWORD PTR [esi]
   9:	34 38                	xor    al,0x38
	...

Disassembly of section .rodata:

00000000 <.rodata>:
   0:	40                   	inc    eax
   1:	05 00 00 20 04       	add    eax,0x4200000
   6:	00 00                	add    BYTE PTR [eax],al
   8:	20 04 00             	and    BYTE PTR [eax+eax*1],al
   b:	00 20                	add    BYTE PTR [eax],ah
   d:	04 00                	add    al,0x0
   f:	00 20                	add    BYTE PTR [eax],ah
  11:	04 00                	add    al,0x0
  13:	00 20                	add    BYTE PTR [eax],ah
  15:	04 00                	add    al,0x0
  17:	00 20                	add    BYTE PTR [eax],ah
  19:	04 00                	add    al,0x0
  1b:	00 20                	add    BYTE PTR [eax],ah
  1d:	04 00                	add    al,0x0
  1f:	00 20                	add    BYTE PTR [eax],ah
  21:	04 00                	add    al,0x0
  23:	00 20                	add    BYTE PTR [eax],ah
  25:	04 00                	add    al,0x0
  27:	00 20                	add    BYTE PTR [eax],ah
  29:	04 00                	add    al,0x0
  2b:	00 28                	add    BYTE PTR [eax],ch
  2d:	05 00 00 e8 04       	add    eax,0x4e80000
  32:	00 00                	add    BYTE PTR [eax],al
  34:	20 04 00             	and    BYTE PTR [eax+eax*1],al
  37:	00 20                	add    BYTE PTR [eax],ah
  39:	04 00                	add    al,0x0
  3b:	00 20                	add    BYTE PTR [eax],ah
  3d:	04 00                	add    al,0x0
  3f:	00 20                	add    BYTE PTR [eax],ah
  41:	04 00                	add    al,0x0
  43:	00 e8                	add    al,ch
  45:	04 00                	add    al,0x0
  47:	00 20                	add    BYTE PTR [eax],ah
  49:	04 00                	add    al,0x0
  4b:	00 20                	add    BYTE PTR [eax],ah
  4d:	04 00                	add    al,0x0
  4f:	00 20                	add    BYTE PTR [eax],ah
  51:	04 00                	add    al,0x0
  53:	00 20                	add    BYTE PTR [eax],ah
  55:	04 00                	add    al,0x0
  57:	00 20                	add    BYTE PTR [eax],ah
  59:	04 00                	add    al,0x0
  5b:	00 20                	add    BYTE PTR [eax],ah
  5d:	04 00                	add    al,0x0
  5f:	00 40 05             	add    BYTE PTR [eax+0x5],al
  62:	00 00                	add    BYTE PTR [eax],al
  64:	20 04 00             	and    BYTE PTR [eax+eax*1],al
  67:	00 20                	add    BYTE PTR [eax],ah
  69:	04 00                	add    al,0x0
  6b:	00 58 04             	add    BYTE PTR [eax+0x4],bl
  6e:	00 00                	add    BYTE PTR [eax],al
  70:	20 04 00             	and    BYTE PTR [eax+eax*1],al
  73:	00 20                	add    BYTE PTR [eax],ah
  75:	04 00                	add    al,0x0
  77:	00 20                	add    BYTE PTR [eax],ah
  79:	04 00                	add    al,0x0
  7b:	00 20                	add    BYTE PTR [eax],ah
  7d:	04 00                	add    al,0x0
  7f:	00 40 05             	add    BYTE PTR [eax+0x5],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	00 47 43             	add    BYTE PTR [edi+0x43],al
   3:	43                   	inc    ebx
   4:	3a 20                	cmp    ah,BYTE PTR [eax]
   6:	28 47 4e             	sub    BYTE PTR [edi+0x4e],al
   9:	55                   	push   ebp
   a:	29 20                	sub    DWORD PTR [eax],esp
   c:	34 2e                	xor    al,0x2e
   e:	37                   	aaa    
   f:	2e 33 00             	xor    eax,DWORD PTR cs:[eax]

Disassembly of section .eh_frame:

00000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	00 00                	add    BYTE PTR [eax],al
   6:	00 00                	add    BYTE PTR [eax],al
   8:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
   b:	00 01                	add    BYTE PTR [ecx],al
   d:	7c 08                	jl     17 <.eh_frame+0x17>
   f:	01 1b                	add    DWORD PTR [ebx],ebx
  11:	0c 04                	or     al,0x4
  13:	04 88                	add    al,0x88
  15:	01 00                	add    DWORD PTR [eax],eax
  17:	00 10                	add    BYTE PTR [eax],dl
  19:	00 00                	add    BYTE PTR [eax],al
  1b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  1e:	00 00                	add    BYTE PTR [eax],al
  20:	00 00                	add    BYTE PTR [eax],al
  22:	00 00                	add    BYTE PTR [eax],al
  24:	14 00                	adc    al,0x0
  26:	00 00                	add    BYTE PTR [eax],al
  28:	00 00                	add    BYTE PTR [eax],al
  2a:	00 00                	add    BYTE PTR [eax],al
  2c:	10 00                	adc    BYTE PTR [eax],al
  2e:	00 00                	add    BYTE PTR [eax],al
  30:	30 00                	xor    BYTE PTR [eax],al
  32:	00 00                	add    BYTE PTR [eax],al
  34:	20 00                	and    BYTE PTR [eax],al
  36:	00 00                	add    BYTE PTR [eax],al
  38:	11 00                	adc    DWORD PTR [eax],eax
  3a:	00 00                	add    BYTE PTR [eax],al
  3c:	00 00                	add    BYTE PTR [eax],al
  3e:	00 00                	add    BYTE PTR [eax],al
  40:	10 00                	adc    BYTE PTR [eax],al
  42:	00 00                	add    BYTE PTR [eax],al
  44:	44                   	inc    esp
  45:	00 00                	add    BYTE PTR [eax],al
  47:	00 40 00             	add    BYTE PTR [eax+0x0],al
  4a:	00 00                	add    BYTE PTR [eax],al
  4c:	1d 00 00 00 00       	sbb    eax,0x0
  51:	00 00                	add    BYTE PTR [eax],al
  53:	00 20                	add    BYTE PTR [eax],ah
  55:	00 00                	add    BYTE PTR [eax],al
  57:	00 58 00             	add    BYTE PTR [eax+0x0],bl
  5a:	00 00                	add    BYTE PTR [eax],al
  5c:	60                   	pusha  
  5d:	00 00                	add    BYTE PTR [eax],al
  5f:	00 2f                	add    BYTE PTR [edi],ch
  61:	00 00                	add    BYTE PTR [eax],al
  63:	00 00                	add    BYTE PTR [eax],al
  65:	41                   	inc    ecx
  66:	0e                   	push   cs
  67:	08 86 02 43 0e 0c    	or     BYTE PTR [esi+0xc0e4302],al
  6d:	83 03 69             	add    DWORD PTR [ebx],0x69
  70:	c3                   	ret    
  71:	0e                   	push   cs
  72:	08 41 c6             	or     BYTE PTR [ecx-0x3a],al
  75:	0e                   	push   cs
  76:	04 00                	add    al,0x0
  78:	34 00                	xor    al,0x0
  7a:	00 00                	add    BYTE PTR [eax],al
  7c:	7c 00                	jl     7e <.eh_frame+0x7e>
  7e:	00 00                	add    BYTE PTR [eax],al
  80:	90                   	nop
  81:	00 00                	add    BYTE PTR [eax],al
  83:	00 63 00             	add    BYTE PTR [ebx+0x0],ah
  86:	00 00                	add    BYTE PTR [eax],al
  88:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  8b:	08 85 02 43 0e 0c    	or     BYTE PTR [ebp+0xc0e4302],al
  91:	87 03                	xchg   DWORD PTR [ebx],eax
  93:	41                   	inc    ecx
  94:	0e                   	push   cs
  95:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
  9b:	83 05 02 59 c3 0e 10 	add    DWORD PTR ds:0xec35902,0x10
  a2:	41                   	inc    ecx
  a3:	c6                   	(bad)  
  a4:	0e                   	push   cs
  a5:	0c 41                	or     al,0x41
  a7:	c7                   	(bad)  
  a8:	0e                   	push   cs
  a9:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
  ac:	0e                   	push   cs
  ad:	04 00                	add    al,0x0
  af:	00 68 00             	add    BYTE PTR [eax+0x0],ch
  b2:	00 00                	add    BYTE PTR [eax],al
  b4:	b4 00                	mov    ah,0x0
  b6:	00 00                	add    BYTE PTR [eax],al
  b8:	00 01                	add    BYTE PTR [ecx],al
  ba:	00 00                	add    BYTE PTR [eax],al
  bc:	87 01                	xchg   DWORD PTR [ecx],eax
  be:	00 00                	add    BYTE PTR [eax],al
  c0:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  c3:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
  c9:	87 03                	xchg   DWORD PTR [ebx],eax
  cb:	41                   	inc    ecx
  cc:	0e                   	push   cs
  cd:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
  d3:	83 05 43 0e 18 02 ba 	add    DWORD PTR ds:0x2180e43,0xffffffba
  da:	0a 0e                	or     cl,BYTE PTR [esi]
  dc:	14 41                	adc    al,0x41
  de:	c3                   	ret    
  df:	0e                   	push   cs
  e0:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
  e3:	0e                   	push   cs
  e4:	0c 41                	or     al,0x41
  e6:	c7                   	(bad)  
  e7:	0e                   	push   cs
  e8:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
  eb:	0e                   	push   cs
  ec:	04 43                	add    al,0x43
  ee:	0b 4a 0a             	or     ecx,DWORD PTR [edx+0xa]
  f1:	0e                   	push   cs
  f2:	14 41                	adc    al,0x41
  f4:	c3                   	ret    
  f5:	0e                   	push   cs
  f6:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
  f9:	0e                   	push   cs
  fa:	0c 41                	or     al,0x41
  fc:	c7                   	(bad)  
  fd:	0e                   	push   cs
  fe:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 101:	0e                   	push   cs
 102:	04 42                	add    al,0x42
 104:	0b 6a 0a             	or     ebp,DWORD PTR [edx+0xa]
 107:	0e                   	push   cs
 108:	14 41                	adc    al,0x41
 10a:	c3                   	ret    
 10b:	0e                   	push   cs
 10c:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 10f:	0e                   	push   cs
 110:	0c 41                	or     al,0x41
 112:	c7                   	(bad)  
 113:	0e                   	push   cs
 114:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 117:	0e                   	push   cs
 118:	04 42                	add    al,0x42
 11a:	0b 00                	or     eax,DWORD PTR [eax]
 11c:	54                   	push   esp
 11d:	00 00                	add    BYTE PTR [eax],al
 11f:	00 20                	add    BYTE PTR [eax],ah
 121:	01 00                	add    DWORD PTR [eax],eax
 123:	00 90 02 00 00 28    	add    BYTE PTR [eax+0x28000002],dl
 129:	01 00                	add    DWORD PTR [eax],eax
 12b:	00 00                	add    BYTE PTR [eax],al
 12d:	41                   	inc    ecx
 12e:	0e                   	push   cs
 12f:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 135:	87 03                	xchg   DWORD PTR [ebx],eax
 137:	41                   	inc    ecx
 138:	0e                   	push   cs
 139:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 13f:	83 05 43 0e 18 02 a2 	add    DWORD PTR ds:0x2180e43,0xffffffa2
 146:	0a 0e                	or     cl,BYTE PTR [esi]
 148:	14 41                	adc    al,0x41
 14a:	c3                   	ret    
 14b:	0e                   	push   cs
 14c:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 14f:	0e                   	push   cs
 150:	0c 41                	or     al,0x41
 152:	c7                   	(bad)  
 153:	0e                   	push   cs
 154:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 157:	0e                   	push   cs
 158:	04 43                	add    al,0x43
 15a:	0b 4a 0a             	or     ecx,DWORD PTR [edx+0xa]
 15d:	0e                   	push   cs
 15e:	14 41                	adc    al,0x41
 160:	c3                   	ret    
 161:	0e                   	push   cs
 162:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 165:	0e                   	push   cs
 166:	0c 41                	or     al,0x41
 168:	c7                   	(bad)  
 169:	0e                   	push   cs
 16a:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 16d:	0e                   	push   cs
 16e:	04 42                	add    al,0x42
 170:	0b 00                	or     eax,DWORD PTR [eax]
 172:	00 00                	add    BYTE PTR [eax],al
 174:	10 00                	adc    BYTE PTR [eax],al
 176:	00 00                	add    BYTE PTR [eax],al
 178:	78 01                	js     17b <.eh_frame+0x17b>
 17a:	00 00                	add    BYTE PTR [eax],al
 17c:	c0 03 00             	rol    BYTE PTR [ebx],0x0
 17f:	00 25 00 00 00 00    	add    BYTE PTR ds:0x0,ah
 185:	00 00                	add    BYTE PTR [eax],al
 187:	00 3c 00             	add    BYTE PTR [eax+eax*1],bh
 18a:	00 00                	add    BYTE PTR [eax],al
 18c:	8c 01                	mov    WORD PTR [ecx],es
 18e:	00 00                	add    BYTE PTR [eax],al
 190:	f0 03 00             	lock add eax,DWORD PTR [eax]
 193:	00 ba 01 00 00 00    	add    BYTE PTR [edx+0x1],bh
 199:	41                   	inc    ecx
 19a:	0e                   	push   cs
 19b:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 1a1:	87 03                	xchg   DWORD PTR [ebx],eax
 1a3:	41                   	inc    ecx
 1a4:	0e                   	push   cs
 1a5:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 1ab:	83 05 43 0e 28 02 e7 	add    DWORD PTR ds:0x2280e43,0xffffffe7
 1b2:	0a 0e                	or     cl,BYTE PTR [esi]
 1b4:	14 41                	adc    al,0x41
 1b6:	c3                   	ret    
 1b7:	0e                   	push   cs
 1b8:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 1bb:	0e                   	push   cs
 1bc:	0c 41                	or     al,0x41
 1be:	c7                   	(bad)  
 1bf:	0e                   	push   cs
 1c0:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 1c3:	0e                   	push   cs
 1c4:	04 46                	add    al,0x46
 1c6:	0b 00                	or     eax,DWORD PTR [eax]
 1c8:	14 00                	adc    al,0x0
 1ca:	00 00                	add    BYTE PTR [eax],al
 1cc:	cc                   	int3   
 1cd:	01 00                	add    DWORD PTR [eax],eax
 1cf:	00 b0 05 00 00 23    	add    BYTE PTR [eax+0x23000005],dh
 1d5:	00 00                	add    BYTE PTR [eax],al
 1d7:	00 00                	add    BYTE PTR [eax],al
 1d9:	43                   	inc    ebx
 1da:	0e                   	push   cs
 1db:	10 5f 0e             	adc    BYTE PTR [edi+0xe],bl
 1de:	04 00                	add    al,0x0
