
tmp/DynArray.o:     file format elf32-i386


Disassembly of section .text:

00000000 <InitDynArray32>:
   0:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
   4:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
   8:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
   b:	89 10                	mov    DWORD PTR [eax],edx
   d:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
  11:	89 50 08             	mov    DWORD PTR [eax+0x8],edx
  14:	c3                   	ret    
  15:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
  19:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00000020 <PushBackDynArray32>:
  20:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
  24:	8b 42 04             	mov    eax,DWORD PTR [edx+0x4]
  27:	3b 42 08             	cmp    eax,DWORD PTR [edx+0x8]
  2a:	74 0c                	je     38 <PushBackDynArray32+0x18>
  2c:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
  30:	89 08                	mov    DWORD PTR [eax],ecx
  32:	8d 48 04             	lea    ecx,[eax+0x4]
  35:	89 4a 04             	mov    DWORD PTR [edx+0x4],ecx
  38:	f3 c3                	repz ret 
  3a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00000040 <EraseDynArray32>:
  40:	53                   	push   ebx
  41:	31 c0                	xor    eax,eax
  43:	83 ec 18             	sub    esp,0x18
  46:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
  4a:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
  4e:	39 13                	cmp    DWORD PTR [ebx],edx
  50:	77 07                	ja     59 <EraseDynArray32+0x19>
  52:	8b 4b 04             	mov    ecx,DWORD PTR [ebx+0x4]
  55:	39 ca                	cmp    edx,ecx
  57:	72 07                	jb     60 <EraseDynArray32+0x20>
  59:	83 c4 18             	add    esp,0x18
  5c:	5b                   	pop    ebx
  5d:	c3                   	ret    
  5e:	66 90                	xchg   ax,ax
  60:	29 d1                	sub    ecx,edx
  62:	c1 f9 02             	sar    ecx,0x2
  65:	8d 04 8d fc ff ff ff 	lea    eax,[ecx*4-0x4]
  6c:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
  70:	8d 42 04             	lea    eax,[edx+0x4]
  73:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
  77:	89 14 24             	mov    DWORD PTR [esp],edx
  7a:	e8 fc ff ff ff       	call   7b <EraseDynArray32+0x3b>
  7f:	b8 01 00 00 00       	mov    eax,0x1
  84:	83 6b 04 04          	sub    DWORD PTR [ebx+0x4],0x4
  88:	83 c4 18             	add    esp,0x18
  8b:	5b                   	pop    ebx
  8c:	c3                   	ret    

Disassembly of section .comment:

00000000 <.comment>:
   0:	00 47 43             	add    BYTE PTR [edi+0x43],al
   3:	43                   	inc    ebx
   4:	3a 20                	cmp    ah,BYTE PTR [eax]
   6:	28 47 4e             	sub    BYTE PTR [edi+0x4e],al
   9:	55                   	push   ebp
   a:	29 20                	sub    DWORD PTR [eax],esp
   c:	34 2e                	xor    al,0x2e
   e:	37                   	aaa    
   f:	2e 33 00             	xor    eax,DWORD PTR cs:[eax]

Disassembly of section .eh_frame:

00000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	00 00                	add    BYTE PTR [eax],al
   6:	00 00                	add    BYTE PTR [eax],al
   8:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
   b:	00 01                	add    BYTE PTR [ecx],al
   d:	7c 08                	jl     17 <.eh_frame+0x17>
   f:	01 1b                	add    DWORD PTR [ebx],ebx
  11:	0c 04                	or     al,0x4
  13:	04 88                	add    al,0x88
  15:	01 00                	add    DWORD PTR [eax],eax
  17:	00 10                	add    BYTE PTR [eax],dl
  19:	00 00                	add    BYTE PTR [eax],al
  1b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  1e:	00 00                	add    BYTE PTR [eax],al
  20:	00 00                	add    BYTE PTR [eax],al
  22:	00 00                	add    BYTE PTR [eax],al
  24:	15 00 00 00 00       	adc    eax,0x0
  29:	00 00                	add    BYTE PTR [eax],al
  2b:	00 10                	add    BYTE PTR [eax],dl
  2d:	00 00                	add    BYTE PTR [eax],al
  2f:	00 30                	add    BYTE PTR [eax],dh
  31:	00 00                	add    BYTE PTR [eax],al
  33:	00 20                	add    BYTE PTR [eax],ah
  35:	00 00                	add    BYTE PTR [eax],al
  37:	00 1a                	add    BYTE PTR [edx],bl
  39:	00 00                	add    BYTE PTR [eax],al
  3b:	00 00                	add    BYTE PTR [eax],al
  3d:	00 00                	add    BYTE PTR [eax],al
  3f:	00 28                	add    BYTE PTR [eax],ch
  41:	00 00                	add    BYTE PTR [eax],al
  43:	00 44 00 00          	add    BYTE PTR [eax+eax*1+0x0],al
  47:	00 40 00             	add    BYTE PTR [eax+0x0],al
  4a:	00 00                	add    BYTE PTR [eax],al
  4c:	4d                   	dec    ebp
  4d:	00 00                	add    BYTE PTR [eax],al
  4f:	00 00                	add    BYTE PTR [eax],al
  51:	41                   	inc    ecx
  52:	0e                   	push   cs
  53:	08 83 02 45 0e 20    	or     BYTE PTR [ebx+0x200e4502],al
  59:	56                   	push   esi
  5a:	0a 0e                	or     cl,BYTE PTR [esi]
  5c:	08 41 c3             	or     BYTE PTR [ecx-0x3d],al
  5f:	0e                   	push   cs
  60:	04 43                	add    al,0x43
  62:	0b 6b 0e             	or     ebp,DWORD PTR [ebx+0xe]
  65:	08 41 c3             	or     BYTE PTR [ecx-0x3d],al
  68:	0e                   	push   cs
  69:	04 00                	add    al,0x0
	...
