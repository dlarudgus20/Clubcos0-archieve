     1                                  [bits 32]					; 32비트 모드
     2                                  
     3                                  [extern ClcMain]			; void main();
     4                                  
     5                                  segment .text
     6                                  	[global KernelStartup]
     7                                  	KernelStartup:			; void KernelStartup();
     8 00000000 E8(00000000)            		call ClcMain		; ClcMain();			/* ClcMain함수 호출 */
     9 00000005 EBFE                    		jmp $				; while(1);				/* 멈춤 */
    10                                  
    11                                  	; 특수 load 어셈블리어
    12                                  	[global LoadGdt]		; void LoadGdt(WORD size, Gdt *address);
    13                                  	LoadGdt:
    14 00000007 668B442404              		mov ax, [esp + 4]
    15 0000000C 6689442406              		mov [esp + 6], ax
    16 00000011 0F01542406              		lgdt [esp + 6]
    17 00000016 C3                      		ret
    18                                  
    19                                  	[global LoadIdt]		; void LoadIdt(WORD size, Idt *address);
    20                                  	LoadIdt:
    21 00000017 668B442404              		mov ax, [esp + 4]
    22 0000001C 6689442406              		mov [esp + 6], ax
    23 00000021 0F015C2406              		lidt [esp + 6]
    24 00000026 C3                      		ret
    25                                  
    26                                  	[global LoadTr]			; void LoadTr(DWORD tr);
    27                                  	LoadTr:
    28 00000027 0F005C2404              		ltr [esp + 4]
    29 0000002C C3                      		ret
    30                                  
    31                                  	; In/Out 명령들
    32                                  	[global InByte]			; BYTE InByte(BYTE port);
    33                                  	InByte:
    34 0000002D 8B542404                		mov edx, [esp + 4]
    35 00000031 B800000000              		mov eax, 0
    36 00000036 EC                      		in al, dx
    37 00000037 C3                      		ret
    38                                  	[global InWord]			; WORD InWord(BYTE port);
    39                                  	InWord:
    40 00000038 8B542404                		mov edx, [esp + 4]
    41 0000003C B800000000              		mov eax, 0
    42 00000041 66ED                    		in ax, dx
    43 00000043 C3                      		ret
    44                                  	[global OutByte]		; void OutByte(BYTE port, BYTE data);
    45                                  	OutByte:
    46 00000044 8B542404                		mov edx, [esp + 4]
    47 00000048 8B442408                		mov eax, [esp + 8]
    48 0000004C EE                      		out dx, al
    49 0000004D C3                      		ret
    50                                  	[global OutWord]		; void OutWord(BYTE port, WORD data);
    51                                  	OutWord:
    52 0000004E 8B542404                		mov edx, [esp + 4]
    53 00000052 8B442408                		mov eax, [esp + 8]
    54 00000056 66EF                    		out dx, ax
    55 00000058 C3                      		ret
    56                                  
    57                                  	; 어셈블리 함수
    58                                  	[global memcpy]			; void memcpy(void *dest, const void *src, unsigned size);
    59                                  	memcpy:
    60 00000059 57                      		push edi
    61 0000005A 56                      		push esi
    62 0000005B 51                      		push ecx
    63                                  
    64 0000005C 8B7C2410                		mov edi, [esp + 12 + 4]
    65 00000060 8B742414                		mov esi, [esp + 12 + 8]
    66 00000064 8B4C2418                		mov ecx, [esp + 12 + 12]
    67                                  
    68 00000068 FC                      		cld
    69 00000069 F3A4                    		rep movsb
    70                                  
    71 0000006B 59                      		pop ecx
    72 0000006C 5E                      		pop esi
    73 0000006D 5F                      		pop edi
    74 0000006E C3                      		ret
    75                                  
    76                                  	[global memset]			; void memset(void *mem, BYTE c, unsigned size);
    77                                  	memset:
    78 0000006F 57                      		push edi
    79 00000070 51                      		push ecx
    80                                  
    81 00000071 8B7C240C                		mov edi, [esp + 8 + 4]
    82 00000075 8B442410                		mov eax, [esp + 8 + 8]
    83 00000079 8B4C2414                		mov ecx, [esp + 8 + 12]
    84                                  
    85 0000007D FC                      		cld
    86 0000007E F3AA                    		rep stosb
    87                                  
    88 00000080 59                      		pop ecx
    89 00000081 5F                      		pop edi
    90 00000082 C3                      		ret
    91                                  
    92                                  	[global memset_2]		; void memset_2(void *mem, WORD s, unsigned size);
    93                                  	memset_2:
    94 00000083 57                      		push edi
    95 00000084 51                      		push ecx
    96                                  
    97 00000085 8B7C240C                		mov edi, [esp + 8 + 4]
    98 00000089 8B442410                		mov eax, [esp + 8 + 8]
    99 0000008D 8B4C2414                		mov ecx, [esp + 8 + 12]
   100 00000091 D1E9                    		shr ecx, 1
   101                                  
   102 00000093 FC                      		cld
   103 00000094 F366AB                  		rep stosw
   104                                  
   105 00000097 59                      		pop ecx
   106 00000098 5F                      		pop edi
   107 00000099 C3                      		ret
   108                                  
   109                                  	[global memset_4]		; void memset_4(void *mem, DWORD i, unsigned size);
   110                                  	memset_4:
   111 0000009A 57                      		push edi
   112 0000009B 51                      		push ecx
   113                                  
   114 0000009C 8B7C240C                		mov edi, [esp + 8 + 4]
   115 000000A0 8B442410                		mov eax, [esp + 8 + 8]
   116 000000A4 8B4C2414                		mov ecx, [esp + 8 + 12]
   117 000000A8 C1E902                  		shr ecx, 2
   118                                  
   119 000000AB FC                      		cld
   120 000000AC F3AB                    		rep stosd
   121                                  
   122 000000AE 59                      		pop ecx
   123 000000AF 5F                      		pop edi
   124 000000B0 C3                      		ret
   125                                  
   126                                  	[global memchr_4]		; void *memchr_4(void *mem, DWORD i, unsigned size);
   127                                  	memchr_4:
   128 000000B1 57                      		push edi
   129 000000B2 51                      		push ecx
   130                                  
   131 000000B3 8B7C240C                		mov edi, [esp + 8 + 4]
   132 000000B7 8B442410                		mov eax, [esp + 8 + 8]
   133 000000BB 8B4C2414                		mov ecx, [esp + 8 + 12]
   134 000000BF C1E902                  		shr ecx, 2
   135                                  
   136 000000C2 FC                      		cld
   137 000000C3 F2A7                    		repne cmpsd
   138 000000C5 89F8                    		mov eax, edi
   139                                  
   140 000000C7 59                      		pop ecx
   141 000000C8 5F                      		pop edi
   142 000000C9 C3                      		ret
   143                                  
   144                                  	[global GetTimeStamp]	; void GetTimeStamp(DWORD *high, DWORD *low); // Timer.h
   145                                  	GetTimeStamp:
   146 000000CA 0F31                    		rdtsc
   147 000000CC 89542404                		mov [esp + 4], edx
   148 000000D0 89442408                		mov [esp + 8], eax
   149 000000D4 C3                      		ret
   150                                  
   151                                  	; 기타 어셈블리 명령들
   152                                  	[global AsmCli]			; void AsmCli();
   153                                  	AsmCli:
   154 000000D5 FA                      		cli
   155 000000D6 C3                      		ret
   156                                  	[global AsmSti]			; void AsmSti();
   157                                  	AsmSti:
   158 000000D7 FB                      		sti
   159 000000D8 C3                      		ret
   160                                  	[global AsmHlt]			; void AsmHlt();
   161                                  	AsmHlt:
   162 000000D9 F4                      		hlt
   163 000000DA C3                      		ret
   164                                  	[global AsmStiHlt]			; void AsmStiHlt();
   165                                  	AsmStiHlt:
   166 000000DB FB                      		sti
   167 000000DC F4                      		hlt
   168 000000DD C3                      		ret
   169                                  
   170                                  	[global GetEFlag]			; DWORD GetEFlag();
   171                                  	GetEFlag:
   172 000000DE 9C                      		pushfd
   173 000000DF 58                      		pop eax
   174 000000E0 C3                      		ret
   175                                  	[global SetEFlag]			; void SetEFlag(DWORD eflag);
   176                                  	SetEFlag:
   177 000000E1 FF742404                		push dword [esp + 4]
   178 000000E5 9D                      		popfd
   179 000000E6 C3                      		ret
   180                                  
   181                                  	[global GetCr0]			; DWORD GetCr0();
   182                                  	GetCr0:
   183 000000E7 0F20C0                  		mov eax, cr0
   184 000000EA C3                      		ret
   185                                  	[global SetCr0]			; void SetCr0(DWORD cr0);
   186                                  	SetCr0:
   187 000000EB 8B442404                		mov eax, dword [esp + 4]
   188 000000EF 0F22C0                  		mov cr0, eax
   189 000000F2 C3                      		ret
   190                                  
   191                                  	[global FarJmp]			; void FarJmp(DWORD eip, WORD cs);
   192                                  	FarJmp:
   193 000000F3 FF6C2404                		jmp far [esp + 4]
   194 000000F7 C3                      		ret
   195                                  
   196                                  ; Interrupt Handlers
   197                                  %macro PushRegisters 0
   198                                          push eax
   199                                          push ebx
   200                                          push ecx
   201                                          push edx
   202                                          push esi
   203                                          push edi
   204                                          push ebp
   205                                          push ds
   206                                          push es
   207                                          push fs
   208                                          push gs
   209                                  
   210                                          mov ax, 2 * 8
   211                                          mov ds, ax
   212                                          mov es, ax
   213                                          mov gs, ax
   214                                          mov fs, ax
   215                                  %endmacro
   216                                  %macro PopRegisters 0
   217                                          pop gs
   218                                          pop fs
   219                                          pop es
   220                                          pop ds
   221                                          pop ebp
   222                                          pop edi
   223                                          pop esi
   224                                          pop edx
   225                                          pop ecx
   226                                          pop ebx
   227                                          pop eax
   228                                  %endmacro
   229                                  
   230                                  %macro MakeIntHandler 1
   231                                  	[global %1]
   232                                  	[extern _%1]
   233                                  	%1:
   234                                  		PushRegisters
   235                                  
   236                                  		push esp
   237                                  		call _%1
   238                                  		add esp, 4
   239                                  
   240                                  		PopRegisters
   241                                  		iretd
   242                                  %endmacro
   243                                  
   244                                  %macro DefaultHandler 1
   245                                      [extern _DefaultHandler]
   246                                      [global DefaultHandler%1]
   247                                      DefaultHandler%1:
   248                                          PushRegisters
   249                                  
   250                                          push esp
   251                                          push %1
   252                                          call _DefaultHandler
   253                                          add esp, 8
   254                                  
   255                                          or eax, eax
   256                                          jz .skip
   257                                          add esp, 4
   258                                      .skip:
   259                                          PopRegisters
   260                                          iretd
   261                                  %endmacro
   262                                  
   263                                  DefaultHandler 0
   264                              <1>  [extern _DefaultHandler]
   265                              <1>  [global DefaultHandler%1]
   266                              <1>  DefaultHandler%1:
   267                              <1>  PushRegisters
   268 000000F8 50                  <2>  push eax
   269 000000F9 53                  <2>  push ebx
   270 000000FA 51                  <2>  push ecx
   271 000000FB 52                  <2>  push edx
   272 000000FC 56                  <2>  push esi
   273 000000FD 57                  <2>  push edi
   274 000000FE 55                  <2>  push ebp
   275 000000FF 1E                  <2>  push ds
   276 00000100 06                  <2>  push es
   277 00000101 0FA0                <2>  push fs
   278 00000103 0FA8                <2>  push gs
   279                              <2> 
   280 00000105 66B81000            <2>  mov ax, 2 * 8
   281 00000109 8ED8                <2>  mov ds, ax
   282 0000010B 8EC0                <2>  mov es, ax
   283 0000010D 8EE8                <2>  mov gs, ax
   284 0000010F 8EE0                <2>  mov fs, ax
   285                              <1> 
   286 00000111 54                  <1>  push esp
   287 00000112 6A00                <1>  push %1
   288 00000114 E8(00000000)        <1>  call _DefaultHandler
   289 00000119 83C408              <1>  add esp, 8
   290                              <1> 
   291 0000011C 09C0                <1>  or eax, eax
   292 0000011E 7403                <1>  jz .skip
   293 00000120 83C404              <1>  add esp, 4
   294                              <1>  .skip:
   295                              <1>  PopRegisters
   296 00000123 0FA9                <2>  pop gs
   297 00000125 0FA1                <2>  pop fs
   298 00000127 07                  <2>  pop es
   299 00000128 1F                  <2>  pop ds
   300 00000129 5D                  <2>  pop ebp
   301 0000012A 5F                  <2>  pop edi
   302 0000012B 5E                  <2>  pop esi
   303 0000012C 5A                  <2>  pop edx
   304 0000012D 59                  <2>  pop ecx
   305 0000012E 5B                  <2>  pop ebx
   306 0000012F 58                  <2>  pop eax
   307 00000130 CF                  <1>  iretd
   308                                  DefaultHandler 1
   309                              <1>  [extern _DefaultHandler]
   310                              <1>  [global DefaultHandler%1]
   311                              <1>  DefaultHandler%1:
   312                              <1>  PushRegisters
   313 00000131 50                  <2>  push eax
   314 00000132 53                  <2>  push ebx
   315 00000133 51                  <2>  push ecx
   316 00000134 52                  <2>  push edx
   317 00000135 56                  <2>  push esi
   318 00000136 57                  <2>  push edi
   319 00000137 55                  <2>  push ebp
   320 00000138 1E                  <2>  push ds
   321 00000139 06                  <2>  push es
   322 0000013A 0FA0                <2>  push fs
   323 0000013C 0FA8                <2>  push gs
   324                              <2> 
   325 0000013E 66B81000            <2>  mov ax, 2 * 8
   326 00000142 8ED8                <2>  mov ds, ax
   327 00000144 8EC0                <2>  mov es, ax
   328 00000146 8EE8                <2>  mov gs, ax
   329 00000148 8EE0                <2>  mov fs, ax
   330                              <1> 
   331 0000014A 54                  <1>  push esp
   332 0000014B 6A01                <1>  push %1
   333 0000014D E8(00000000)        <1>  call _DefaultHandler
   334 00000152 83C408              <1>  add esp, 8
   335                              <1> 
   336 00000155 09C0                <1>  or eax, eax
   337 00000157 7403                <1>  jz .skip
   338 00000159 83C404              <1>  add esp, 4
   339                              <1>  .skip:
   340                              <1>  PopRegisters
   341 0000015C 0FA9                <2>  pop gs
   342 0000015E 0FA1                <2>  pop fs
   343 00000160 07                  <2>  pop es
   344 00000161 1F                  <2>  pop ds
   345 00000162 5D                  <2>  pop ebp
   346 00000163 5F                  <2>  pop edi
   347 00000164 5E                  <2>  pop esi
   348 00000165 5A                  <2>  pop edx
   349 00000166 59                  <2>  pop ecx
   350 00000167 5B                  <2>  pop ebx
   351 00000168 58                  <2>  pop eax
   352 00000169 CF                  <1>  iretd
   353                                  DefaultHandler 2
   354                              <1>  [extern _DefaultHandler]
   355                              <1>  [global DefaultHandler%1]
   356                              <1>  DefaultHandler%1:
   357                              <1>  PushRegisters
   358 0000016A 50                  <2>  push eax
   359 0000016B 53                  <2>  push ebx
   360 0000016C 51                  <2>  push ecx
   361 0000016D 52                  <2>  push edx
   362 0000016E 56                  <2>  push esi
   363 0000016F 57                  <2>  push edi
   364 00000170 55                  <2>  push ebp
   365 00000171 1E                  <2>  push ds
   366 00000172 06                  <2>  push es
   367 00000173 0FA0                <2>  push fs
   368 00000175 0FA8                <2>  push gs
   369                              <2> 
   370 00000177 66B81000            <2>  mov ax, 2 * 8
   371 0000017B 8ED8                <2>  mov ds, ax
   372 0000017D 8EC0                <2>  mov es, ax
   373 0000017F 8EE8                <2>  mov gs, ax
   374 00000181 8EE0                <2>  mov fs, ax
   375                              <1> 
   376 00000183 54                  <1>  push esp
   377 00000184 6A02                <1>  push %1
   378 00000186 E8(00000000)        <1>  call _DefaultHandler
   379 0000018B 83C408              <1>  add esp, 8
   380                              <1> 
   381 0000018E 09C0                <1>  or eax, eax
   382 00000190 7403                <1>  jz .skip
   383 00000192 83C404              <1>  add esp, 4
   384                              <1>  .skip:
   385                              <1>  PopRegisters
   386 00000195 0FA9                <2>  pop gs
   387 00000197 0FA1                <2>  pop fs
   388 00000199 07                  <2>  pop es
   389 0000019A 1F                  <2>  pop ds
   390 0000019B 5D                  <2>  pop ebp
   391 0000019C 5F                  <2>  pop edi
   392 0000019D 5E                  <2>  pop esi
   393 0000019E 5A                  <2>  pop edx
   394 0000019F 59                  <2>  pop ecx
   395 000001A0 5B                  <2>  pop ebx
   396 000001A1 58                  <2>  pop eax
   397 000001A2 CF                  <1>  iretd
   398                                  DefaultHandler 3
   399                              <1>  [extern _DefaultHandler]
   400                              <1>  [global DefaultHandler%1]
   401                              <1>  DefaultHandler%1:
   402                              <1>  PushRegisters
   403 000001A3 50                  <2>  push eax
   404 000001A4 53                  <2>  push ebx
   405 000001A5 51                  <2>  push ecx
   406 000001A6 52                  <2>  push edx
   407 000001A7 56                  <2>  push esi
   408 000001A8 57                  <2>  push edi
   409 000001A9 55                  <2>  push ebp
   410 000001AA 1E                  <2>  push ds
   411 000001AB 06                  <2>  push es
   412 000001AC 0FA0                <2>  push fs
   413 000001AE 0FA8                <2>  push gs
   414                              <2> 
   415 000001B0 66B81000            <2>  mov ax, 2 * 8
   416 000001B4 8ED8                <2>  mov ds, ax
   417 000001B6 8EC0                <2>  mov es, ax
   418 000001B8 8EE8                <2>  mov gs, ax
   419 000001BA 8EE0                <2>  mov fs, ax
   420                              <1> 
   421 000001BC 54                  <1>  push esp
   422 000001BD 6A03                <1>  push %1
   423 000001BF E8(00000000)        <1>  call _DefaultHandler
   424 000001C4 83C408              <1>  add esp, 8
   425                              <1> 
   426 000001C7 09C0                <1>  or eax, eax
   427 000001C9 7403                <1>  jz .skip
   428 000001CB 83C404              <1>  add esp, 4
   429                              <1>  .skip:
   430                              <1>  PopRegisters
   431 000001CE 0FA9                <2>  pop gs
   432 000001D0 0FA1                <2>  pop fs
   433 000001D2 07                  <2>  pop es
   434 000001D3 1F                  <2>  pop ds
   435 000001D4 5D                  <2>  pop ebp
   436 000001D5 5F                  <2>  pop edi
   437 000001D6 5E                  <2>  pop esi
   438 000001D7 5A                  <2>  pop edx
   439 000001D8 59                  <2>  pop ecx
   440 000001D9 5B                  <2>  pop ebx
   441 000001DA 58                  <2>  pop eax
   442 000001DB CF                  <1>  iretd
   443                                  DefaultHandler 4
   444                              <1>  [extern _DefaultHandler]
   445                              <1>  [global DefaultHandler%1]
   446                              <1>  DefaultHandler%1:
   447                              <1>  PushRegisters
   448 000001DC 50                  <2>  push eax
   449 000001DD 53                  <2>  push ebx
   450 000001DE 51                  <2>  push ecx
   451 000001DF 52                  <2>  push edx
   452 000001E0 56                  <2>  push esi
   453 000001E1 57                  <2>  push edi
   454 000001E2 55                  <2>  push ebp
   455 000001E3 1E                  <2>  push ds
   456 000001E4 06                  <2>  push es
   457 000001E5 0FA0                <2>  push fs
   458 000001E7 0FA8                <2>  push gs
   459                              <2> 
   460 000001E9 66B81000            <2>  mov ax, 2 * 8
   461 000001ED 8ED8                <2>  mov ds, ax
   462 000001EF 8EC0                <2>  mov es, ax
   463 000001F1 8EE8                <2>  mov gs, ax
   464 000001F3 8EE0                <2>  mov fs, ax
   465                              <1> 
   466 000001F5 54                  <1>  push esp
   467 000001F6 6A04                <1>  push %1
   468 000001F8 E8(00000000)        <1>  call _DefaultHandler
   469 000001FD 83C408              <1>  add esp, 8
   470                              <1> 
   471 00000200 09C0                <1>  or eax, eax
   472 00000202 7403                <1>  jz .skip
   473 00000204 83C404              <1>  add esp, 4
   474                              <1>  .skip:
   475                              <1>  PopRegisters
   476 00000207 0FA9                <2>  pop gs
   477 00000209 0FA1                <2>  pop fs
   478 0000020B 07                  <2>  pop es
   479 0000020C 1F                  <2>  pop ds
   480 0000020D 5D                  <2>  pop ebp
   481 0000020E 5F                  <2>  pop edi
   482 0000020F 5E                  <2>  pop esi
   483 00000210 5A                  <2>  pop edx
   484 00000211 59                  <2>  pop ecx
   485 00000212 5B                  <2>  pop ebx
   486 00000213 58                  <2>  pop eax
   487 00000214 CF                  <1>  iretd
   488                                  DefaultHandler 5
   489                              <1>  [extern _DefaultHandler]
   490                              <1>  [global DefaultHandler%1]
   491                              <1>  DefaultHandler%1:
   492                              <1>  PushRegisters
   493 00000215 50                  <2>  push eax
   494 00000216 53                  <2>  push ebx
   495 00000217 51                  <2>  push ecx
   496 00000218 52                  <2>  push edx
   497 00000219 56                  <2>  push esi
   498 0000021A 57                  <2>  push edi
   499 0000021B 55                  <2>  push ebp
   500 0000021C 1E                  <2>  push ds
   501 0000021D 06                  <2>  push es
   502 0000021E 0FA0                <2>  push fs
   503 00000220 0FA8                <2>  push gs
   504                              <2> 
   505 00000222 66B81000            <2>  mov ax, 2 * 8
   506 00000226 8ED8                <2>  mov ds, ax
   507 00000228 8EC0                <2>  mov es, ax
   508 0000022A 8EE8                <2>  mov gs, ax
   509 0000022C 8EE0                <2>  mov fs, ax
   510                              <1> 
   511 0000022E 54                  <1>  push esp
   512 0000022F 6A05                <1>  push %1
   513 00000231 E8(00000000)        <1>  call _DefaultHandler
   514 00000236 83C408              <1>  add esp, 8
   515                              <1> 
   516 00000239 09C0                <1>  or eax, eax
   517 0000023B 7403                <1>  jz .skip
   518 0000023D 83C404              <1>  add esp, 4
   519                              <1>  .skip:
   520                              <1>  PopRegisters
   521 00000240 0FA9                <2>  pop gs
   522 00000242 0FA1                <2>  pop fs
   523 00000244 07                  <2>  pop es
   524 00000245 1F                  <2>  pop ds
   525 00000246 5D                  <2>  pop ebp
   526 00000247 5F                  <2>  pop edi
   527 00000248 5E                  <2>  pop esi
   528 00000249 5A                  <2>  pop edx
   529 0000024A 59                  <2>  pop ecx
   530 0000024B 5B                  <2>  pop ebx
   531 0000024C 58                  <2>  pop eax
   532 0000024D CF                  <1>  iretd
   533                                  DefaultHandler 6
   534                              <1>  [extern _DefaultHandler]
   535                              <1>  [global DefaultHandler%1]
   536                              <1>  DefaultHandler%1:
   537                              <1>  PushRegisters
   538 0000024E 50                  <2>  push eax
   539 0000024F 53                  <2>  push ebx
   540 00000250 51                  <2>  push ecx
   541 00000251 52                  <2>  push edx
   542 00000252 56                  <2>  push esi
   543 00000253 57                  <2>  push edi
   544 00000254 55                  <2>  push ebp
   545 00000255 1E                  <2>  push ds
   546 00000256 06                  <2>  push es
   547 00000257 0FA0                <2>  push fs
   548 00000259 0FA8                <2>  push gs
   549                              <2> 
   550 0000025B 66B81000            <2>  mov ax, 2 * 8
   551 0000025F 8ED8                <2>  mov ds, ax
   552 00000261 8EC0                <2>  mov es, ax
   553 00000263 8EE8                <2>  mov gs, ax
   554 00000265 8EE0                <2>  mov fs, ax
   555                              <1> 
   556 00000267 54                  <1>  push esp
   557 00000268 6A06                <1>  push %1
   558 0000026A E8(00000000)        <1>  call _DefaultHandler
   559 0000026F 83C408              <1>  add esp, 8
   560                              <1> 
   561 00000272 09C0                <1>  or eax, eax
   562 00000274 7403                <1>  jz .skip
   563 00000276 83C404              <1>  add esp, 4
   564                              <1>  .skip:
   565                              <1>  PopRegisters
   566 00000279 0FA9                <2>  pop gs
   567 0000027B 0FA1                <2>  pop fs
   568 0000027D 07                  <2>  pop es
   569 0000027E 1F                  <2>  pop ds
   570 0000027F 5D                  <2>  pop ebp
   571 00000280 5F                  <2>  pop edi
   572 00000281 5E                  <2>  pop esi
   573 00000282 5A                  <2>  pop edx
   574 00000283 59                  <2>  pop ecx
   575 00000284 5B                  <2>  pop ebx
   576 00000285 58                  <2>  pop eax
   577 00000286 CF                  <1>  iretd
   578                                  DefaultHandler 7
   579                              <1>  [extern _DefaultHandler]
   580                              <1>  [global DefaultHandler%1]
   581                              <1>  DefaultHandler%1:
   582                              <1>  PushRegisters
   583 00000287 50                  <2>  push eax
   584 00000288 53                  <2>  push ebx
   585 00000289 51                  <2>  push ecx
   586 0000028A 52                  <2>  push edx
   587 0000028B 56                  <2>  push esi
   588 0000028C 57                  <2>  push edi
   589 0000028D 55                  <2>  push ebp
   590 0000028E 1E                  <2>  push ds
   591 0000028F 06                  <2>  push es
   592 00000290 0FA0                <2>  push fs
   593 00000292 0FA8                <2>  push gs
   594                              <2> 
   595 00000294 66B81000            <2>  mov ax, 2 * 8
   596 00000298 8ED8                <2>  mov ds, ax
   597 0000029A 8EC0                <2>  mov es, ax
   598 0000029C 8EE8                <2>  mov gs, ax
   599 0000029E 8EE0                <2>  mov fs, ax
   600                              <1> 
   601 000002A0 54                  <1>  push esp
   602 000002A1 6A07                <1>  push %1
   603 000002A3 E8(00000000)        <1>  call _DefaultHandler
   604 000002A8 83C408              <1>  add esp, 8
   605                              <1> 
   606 000002AB 09C0                <1>  or eax, eax
   607 000002AD 7403                <1>  jz .skip
   608 000002AF 83C404              <1>  add esp, 4
   609                              <1>  .skip:
   610                              <1>  PopRegisters
   611 000002B2 0FA9                <2>  pop gs
   612 000002B4 0FA1                <2>  pop fs
   613 000002B6 07                  <2>  pop es
   614 000002B7 1F                  <2>  pop ds
   615 000002B8 5D                  <2>  pop ebp
   616 000002B9 5F                  <2>  pop edi
   617 000002BA 5E                  <2>  pop esi
   618 000002BB 5A                  <2>  pop edx
   619 000002BC 59                  <2>  pop ecx
   620 000002BD 5B                  <2>  pop ebx
   621 000002BE 58                  <2>  pop eax
   622 000002BF CF                  <1>  iretd
   623                                  DefaultHandler 8
   624                              <1>  [extern _DefaultHandler]
   625                              <1>  [global DefaultHandler%1]
   626                              <1>  DefaultHandler%1:
   627                              <1>  PushRegisters
   628 000002C0 50                  <2>  push eax
   629 000002C1 53                  <2>  push ebx
   630 000002C2 51                  <2>  push ecx
   631 000002C3 52                  <2>  push edx
   632 000002C4 56                  <2>  push esi
   633 000002C5 57                  <2>  push edi
   634 000002C6 55                  <2>  push ebp
   635 000002C7 1E                  <2>  push ds
   636 000002C8 06                  <2>  push es
   637 000002C9 0FA0                <2>  push fs
   638 000002CB 0FA8                <2>  push gs
   639                              <2> 
   640 000002CD 66B81000            <2>  mov ax, 2 * 8
   641 000002D1 8ED8                <2>  mov ds, ax
   642 000002D3 8EC0                <2>  mov es, ax
   643 000002D5 8EE8                <2>  mov gs, ax
   644 000002D7 8EE0                <2>  mov fs, ax
   645                              <1> 
   646 000002D9 54                  <1>  push esp
   647 000002DA 6A08                <1>  push %1
   648 000002DC E8(00000000)        <1>  call _DefaultHandler
   649 000002E1 83C408              <1>  add esp, 8
   650                              <1> 
   651 000002E4 09C0                <1>  or eax, eax
   652 000002E6 7403                <1>  jz .skip
   653 000002E8 83C404              <1>  add esp, 4
   654                              <1>  .skip:
   655                              <1>  PopRegisters
   656 000002EB 0FA9                <2>  pop gs
   657 000002ED 0FA1                <2>  pop fs
   658 000002EF 07                  <2>  pop es
   659 000002F0 1F                  <2>  pop ds
   660 000002F1 5D                  <2>  pop ebp
   661 000002F2 5F                  <2>  pop edi
   662 000002F3 5E                  <2>  pop esi
   663 000002F4 5A                  <2>  pop edx
   664 000002F5 59                  <2>  pop ecx
   665 000002F6 5B                  <2>  pop ebx
   666 000002F7 58                  <2>  pop eax
   667 000002F8 CF                  <1>  iretd
   668                                  DefaultHandler 9
   669                              <1>  [extern _DefaultHandler]
   670                              <1>  [global DefaultHandler%1]
   671                              <1>  DefaultHandler%1:
   672                              <1>  PushRegisters
   673 000002F9 50                  <2>  push eax
   674 000002FA 53                  <2>  push ebx
   675 000002FB 51                  <2>  push ecx
   676 000002FC 52                  <2>  push edx
   677 000002FD 56                  <2>  push esi
   678 000002FE 57                  <2>  push edi
   679 000002FF 55                  <2>  push ebp
   680 00000300 1E                  <2>  push ds
   681 00000301 06                  <2>  push es
   682 00000302 0FA0                <2>  push fs
   683 00000304 0FA8                <2>  push gs
   684                              <2> 
   685 00000306 66B81000            <2>  mov ax, 2 * 8
   686 0000030A 8ED8                <2>  mov ds, ax
   687 0000030C 8EC0                <2>  mov es, ax
   688 0000030E 8EE8                <2>  mov gs, ax
   689 00000310 8EE0                <2>  mov fs, ax
   690                              <1> 
   691 00000312 54                  <1>  push esp
   692 00000313 6A09                <1>  push %1
   693 00000315 E8(00000000)        <1>  call _DefaultHandler
   694 0000031A 83C408              <1>  add esp, 8
   695                              <1> 
   696 0000031D 09C0                <1>  or eax, eax
   697 0000031F 7403                <1>  jz .skip
   698 00000321 83C404              <1>  add esp, 4
   699                              <1>  .skip:
   700                              <1>  PopRegisters
   701 00000324 0FA9                <2>  pop gs
   702 00000326 0FA1                <2>  pop fs
   703 00000328 07                  <2>  pop es
   704 00000329 1F                  <2>  pop ds
   705 0000032A 5D                  <2>  pop ebp
   706 0000032B 5F                  <2>  pop edi
   707 0000032C 5E                  <2>  pop esi
   708 0000032D 5A                  <2>  pop edx
   709 0000032E 59                  <2>  pop ecx
   710 0000032F 5B                  <2>  pop ebx
   711 00000330 58                  <2>  pop eax
   712 00000331 CF                  <1>  iretd
   713                                  DefaultHandler 10
   714                              <1>  [extern _DefaultHandler]
   715                              <1>  [global DefaultHandler%1]
   716                              <1>  DefaultHandler%1:
   717                              <1>  PushRegisters
   718 00000332 50                  <2>  push eax
   719 00000333 53                  <2>  push ebx
   720 00000334 51                  <2>  push ecx
   721 00000335 52                  <2>  push edx
   722 00000336 56                  <2>  push esi
   723 00000337 57                  <2>  push edi
   724 00000338 55                  <2>  push ebp
   725 00000339 1E                  <2>  push ds
   726 0000033A 06                  <2>  push es
   727 0000033B 0FA0                <2>  push fs
   728 0000033D 0FA8                <2>  push gs
   729                              <2> 
   730 0000033F 66B81000            <2>  mov ax, 2 * 8
   731 00000343 8ED8                <2>  mov ds, ax
   732 00000345 8EC0                <2>  mov es, ax
   733 00000347 8EE8                <2>  mov gs, ax
   734 00000349 8EE0                <2>  mov fs, ax
   735                              <1> 
   736 0000034B 54                  <1>  push esp
   737 0000034C 6A0A                <1>  push %1
   738 0000034E E8(00000000)        <1>  call _DefaultHandler
   739 00000353 83C408              <1>  add esp, 8
   740                              <1> 
   741 00000356 09C0                <1>  or eax, eax
   742 00000358 7403                <1>  jz .skip
   743 0000035A 83C404              <1>  add esp, 4
   744                              <1>  .skip:
   745                              <1>  PopRegisters
   746 0000035D 0FA9                <2>  pop gs
   747 0000035F 0FA1                <2>  pop fs
   748 00000361 07                  <2>  pop es
   749 00000362 1F                  <2>  pop ds
   750 00000363 5D                  <2>  pop ebp
   751 00000364 5F                  <2>  pop edi
   752 00000365 5E                  <2>  pop esi
   753 00000366 5A                  <2>  pop edx
   754 00000367 59                  <2>  pop ecx
   755 00000368 5B                  <2>  pop ebx
   756 00000369 58                  <2>  pop eax
   757 0000036A CF                  <1>  iretd
   758                                  DefaultHandler 11
   759                              <1>  [extern _DefaultHandler]
   760                              <1>  [global DefaultHandler%1]
   761                              <1>  DefaultHandler%1:
   762                              <1>  PushRegisters
   763 0000036B 50                  <2>  push eax
   764 0000036C 53                  <2>  push ebx
   765 0000036D 51                  <2>  push ecx
   766 0000036E 52                  <2>  push edx
   767 0000036F 56                  <2>  push esi
   768 00000370 57                  <2>  push edi
   769 00000371 55                  <2>  push ebp
   770 00000372 1E                  <2>  push ds
   771 00000373 06                  <2>  push es
   772 00000374 0FA0                <2>  push fs
   773 00000376 0FA8                <2>  push gs
   774                              <2> 
   775 00000378 66B81000            <2>  mov ax, 2 * 8
   776 0000037C 8ED8                <2>  mov ds, ax
   777 0000037E 8EC0                <2>  mov es, ax
   778 00000380 8EE8                <2>  mov gs, ax
   779 00000382 8EE0                <2>  mov fs, ax
   780                              <1> 
   781 00000384 54                  <1>  push esp
   782 00000385 6A0B                <1>  push %1
   783 00000387 E8(00000000)        <1>  call _DefaultHandler
   784 0000038C 83C408              <1>  add esp, 8
   785                              <1> 
   786 0000038F 09C0                <1>  or eax, eax
   787 00000391 7403                <1>  jz .skip
   788 00000393 83C404              <1>  add esp, 4
   789                              <1>  .skip:
   790                              <1>  PopRegisters
   791 00000396 0FA9                <2>  pop gs
   792 00000398 0FA1                <2>  pop fs
   793 0000039A 07                  <2>  pop es
   794 0000039B 1F                  <2>  pop ds
   795 0000039C 5D                  <2>  pop ebp
   796 0000039D 5F                  <2>  pop edi
   797 0000039E 5E                  <2>  pop esi
   798 0000039F 5A                  <2>  pop edx
   799 000003A0 59                  <2>  pop ecx
   800 000003A1 5B                  <2>  pop ebx
   801 000003A2 58                  <2>  pop eax
   802 000003A3 CF                  <1>  iretd
   803                                  DefaultHandler 12
   804                              <1>  [extern _DefaultHandler]
   805                              <1>  [global DefaultHandler%1]
   806                              <1>  DefaultHandler%1:
   807                              <1>  PushRegisters
   808 000003A4 50                  <2>  push eax
   809 000003A5 53                  <2>  push ebx
   810 000003A6 51                  <2>  push ecx
   811 000003A7 52                  <2>  push edx
   812 000003A8 56                  <2>  push esi
   813 000003A9 57                  <2>  push edi
   814 000003AA 55                  <2>  push ebp
   815 000003AB 1E                  <2>  push ds
   816 000003AC 06                  <2>  push es
   817 000003AD 0FA0                <2>  push fs
   818 000003AF 0FA8                <2>  push gs
   819                              <2> 
   820 000003B1 66B81000            <2>  mov ax, 2 * 8
   821 000003B5 8ED8                <2>  mov ds, ax
   822 000003B7 8EC0                <2>  mov es, ax
   823 000003B9 8EE8                <2>  mov gs, ax
   824 000003BB 8EE0                <2>  mov fs, ax
   825                              <1> 
   826 000003BD 54                  <1>  push esp
   827 000003BE 6A0C                <1>  push %1
   828 000003C0 E8(00000000)        <1>  call _DefaultHandler
   829 000003C5 83C408              <1>  add esp, 8
   830                              <1> 
   831 000003C8 09C0                <1>  or eax, eax
   832 000003CA 7403                <1>  jz .skip
   833 000003CC 83C404              <1>  add esp, 4
   834                              <1>  .skip:
   835                              <1>  PopRegisters
   836 000003CF 0FA9                <2>  pop gs
   837 000003D1 0FA1                <2>  pop fs
   838 000003D3 07                  <2>  pop es
   839 000003D4 1F                  <2>  pop ds
   840 000003D5 5D                  <2>  pop ebp
   841 000003D6 5F                  <2>  pop edi
   842 000003D7 5E                  <2>  pop esi
   843 000003D8 5A                  <2>  pop edx
   844 000003D9 59                  <2>  pop ecx
   845 000003DA 5B                  <2>  pop ebx
   846 000003DB 58                  <2>  pop eax
   847 000003DC CF                  <1>  iretd
   848                                  DefaultHandler 13
   849                              <1>  [extern _DefaultHandler]
   850                              <1>  [global DefaultHandler%1]
   851                              <1>  DefaultHandler%1:
   852                              <1>  PushRegisters
   853 000003DD 50                  <2>  push eax
   854 000003DE 53                  <2>  push ebx
   855 000003DF 51                  <2>  push ecx
   856 000003E0 52                  <2>  push edx
   857 000003E1 56                  <2>  push esi
   858 000003E2 57                  <2>  push edi
   859 000003E3 55                  <2>  push ebp
   860 000003E4 1E                  <2>  push ds
   861 000003E5 06                  <2>  push es
   862 000003E6 0FA0                <2>  push fs
   863 000003E8 0FA8                <2>  push gs
   864                              <2> 
   865 000003EA 66B81000            <2>  mov ax, 2 * 8
   866 000003EE 8ED8                <2>  mov ds, ax
   867 000003F0 8EC0                <2>  mov es, ax
   868 000003F2 8EE8                <2>  mov gs, ax
   869 000003F4 8EE0                <2>  mov fs, ax
   870                              <1> 
   871 000003F6 54                  <1>  push esp
   872 000003F7 6A0D                <1>  push %1
   873 000003F9 E8(00000000)        <1>  call _DefaultHandler
   874 000003FE 83C408              <1>  add esp, 8
   875                              <1> 
   876 00000401 09C0                <1>  or eax, eax
   877 00000403 7403                <1>  jz .skip
   878 00000405 83C404              <1>  add esp, 4
   879                              <1>  .skip:
   880                              <1>  PopRegisters
   881 00000408 0FA9                <2>  pop gs
   882 0000040A 0FA1                <2>  pop fs
   883 0000040C 07                  <2>  pop es
   884 0000040D 1F                  <2>  pop ds
   885 0000040E 5D                  <2>  pop ebp
   886 0000040F 5F                  <2>  pop edi
   887 00000410 5E                  <2>  pop esi
   888 00000411 5A                  <2>  pop edx
   889 00000412 59                  <2>  pop ecx
   890 00000413 5B                  <2>  pop ebx
   891 00000414 58                  <2>  pop eax
   892 00000415 CF                  <1>  iretd
   893                                  DefaultHandler 14
   894                              <1>  [extern _DefaultHandler]
   895                              <1>  [global DefaultHandler%1]
   896                              <1>  DefaultHandler%1:
   897                              <1>  PushRegisters
   898 00000416 50                  <2>  push eax
   899 00000417 53                  <2>  push ebx
   900 00000418 51                  <2>  push ecx
   901 00000419 52                  <2>  push edx
   902 0000041A 56                  <2>  push esi
   903 0000041B 57                  <2>  push edi
   904 0000041C 55                  <2>  push ebp
   905 0000041D 1E                  <2>  push ds
   906 0000041E 06                  <2>  push es
   907 0000041F 0FA0                <2>  push fs
   908 00000421 0FA8                <2>  push gs
   909                              <2> 
   910 00000423 66B81000            <2>  mov ax, 2 * 8
   911 00000427 8ED8                <2>  mov ds, ax
   912 00000429 8EC0                <2>  mov es, ax
   913 0000042B 8EE8                <2>  mov gs, ax
   914 0000042D 8EE0                <2>  mov fs, ax
   915                              <1> 
   916 0000042F 54                  <1>  push esp
   917 00000430 6A0E                <1>  push %1
   918 00000432 E8(00000000)        <1>  call _DefaultHandler
   919 00000437 83C408              <1>  add esp, 8
   920                              <1> 
   921 0000043A 09C0                <1>  or eax, eax
   922 0000043C 7403                <1>  jz .skip
   923 0000043E 83C404              <1>  add esp, 4
   924                              <1>  .skip:
   925                              <1>  PopRegisters
   926 00000441 0FA9                <2>  pop gs
   927 00000443 0FA1                <2>  pop fs
   928 00000445 07                  <2>  pop es
   929 00000446 1F                  <2>  pop ds
   930 00000447 5D                  <2>  pop ebp
   931 00000448 5F                  <2>  pop edi
   932 00000449 5E                  <2>  pop esi
   933 0000044A 5A                  <2>  pop edx
   934 0000044B 59                  <2>  pop ecx
   935 0000044C 5B                  <2>  pop ebx
   936 0000044D 58                  <2>  pop eax
   937 0000044E CF                  <1>  iretd
   938                                  DefaultHandler 15
   939                              <1>  [extern _DefaultHandler]
   940                              <1>  [global DefaultHandler%1]
   941                              <1>  DefaultHandler%1:
   942                              <1>  PushRegisters
   943 0000044F 50                  <2>  push eax
   944 00000450 53                  <2>  push ebx
   945 00000451 51                  <2>  push ecx
   946 00000452 52                  <2>  push edx
   947 00000453 56                  <2>  push esi
   948 00000454 57                  <2>  push edi
   949 00000455 55                  <2>  push ebp
   950 00000456 1E                  <2>  push ds
   951 00000457 06                  <2>  push es
   952 00000458 0FA0                <2>  push fs
   953 0000045A 0FA8                <2>  push gs
   954                              <2> 
   955 0000045C 66B81000            <2>  mov ax, 2 * 8
   956 00000460 8ED8                <2>  mov ds, ax
   957 00000462 8EC0                <2>  mov es, ax
   958 00000464 8EE8                <2>  mov gs, ax
   959 00000466 8EE0                <2>  mov fs, ax
   960                              <1> 
   961 00000468 54                  <1>  push esp
   962 00000469 6A0F                <1>  push %1
   963 0000046B E8(00000000)        <1>  call _DefaultHandler
   964 00000470 83C408              <1>  add esp, 8
   965                              <1> 
   966 00000473 09C0                <1>  or eax, eax
   967 00000475 7403                <1>  jz .skip
   968 00000477 83C404              <1>  add esp, 4
   969                              <1>  .skip:
   970                              <1>  PopRegisters
   971 0000047A 0FA9                <2>  pop gs
   972 0000047C 0FA1                <2>  pop fs
   973 0000047E 07                  <2>  pop es
   974 0000047F 1F                  <2>  pop ds
   975 00000480 5D                  <2>  pop ebp
   976 00000481 5F                  <2>  pop edi
   977 00000482 5E                  <2>  pop esi
   978 00000483 5A                  <2>  pop edx
   979 00000484 59                  <2>  pop ecx
   980 00000485 5B                  <2>  pop ebx
   981 00000486 58                  <2>  pop eax
   982 00000487 CF                  <1>  iretd
   983                                  DefaultHandler 16
   984                              <1>  [extern _DefaultHandler]
   985                              <1>  [global DefaultHandler%1]
   986                              <1>  DefaultHandler%1:
   987                              <1>  PushRegisters
   988 00000488 50                  <2>  push eax
   989 00000489 53                  <2>  push ebx
   990 0000048A 51                  <2>  push ecx
   991 0000048B 52                  <2>  push edx
   992 0000048C 56                  <2>  push esi
   993 0000048D 57                  <2>  push edi
   994 0000048E 55                  <2>  push ebp
   995 0000048F 1E                  <2>  push ds
   996 00000490 06                  <2>  push es
   997 00000491 0FA0                <2>  push fs
   998 00000493 0FA8                <2>  push gs
   999                              <2> 
  1000 00000495 66B81000            <2>  mov ax, 2 * 8
  1001 00000499 8ED8                <2>  mov ds, ax
  1002 0000049B 8EC0                <2>  mov es, ax
  1003 0000049D 8EE8                <2>  mov gs, ax
  1004 0000049F 8EE0                <2>  mov fs, ax
  1005                              <1> 
  1006 000004A1 54                  <1>  push esp
  1007 000004A2 6A10                <1>  push %1
  1008 000004A4 E8(00000000)        <1>  call _DefaultHandler
  1009 000004A9 83C408              <1>  add esp, 8
  1010                              <1> 
  1011 000004AC 09C0                <1>  or eax, eax
  1012 000004AE 7403                <1>  jz .skip
  1013 000004B0 83C404              <1>  add esp, 4
  1014                              <1>  .skip:
  1015                              <1>  PopRegisters
  1016 000004B3 0FA9                <2>  pop gs
  1017 000004B5 0FA1                <2>  pop fs
  1018 000004B7 07                  <2>  pop es
  1019 000004B8 1F                  <2>  pop ds
  1020 000004B9 5D                  <2>  pop ebp
  1021 000004BA 5F                  <2>  pop edi
  1022 000004BB 5E                  <2>  pop esi
  1023 000004BC 5A                  <2>  pop edx
  1024 000004BD 59                  <2>  pop ecx
  1025 000004BE 5B                  <2>  pop ebx
  1026 000004BF 58                  <2>  pop eax
  1027 000004C0 CF                  <1>  iretd
  1028                                  DefaultHandler 17
  1029                              <1>  [extern _DefaultHandler]
  1030                              <1>  [global DefaultHandler%1]
  1031                              <1>  DefaultHandler%1:
  1032                              <1>  PushRegisters
  1033 000004C1 50                  <2>  push eax
  1034 000004C2 53                  <2>  push ebx
  1035 000004C3 51                  <2>  push ecx
  1036 000004C4 52                  <2>  push edx
  1037 000004C5 56                  <2>  push esi
  1038 000004C6 57                  <2>  push edi
  1039 000004C7 55                  <2>  push ebp
  1040 000004C8 1E                  <2>  push ds
  1041 000004C9 06                  <2>  push es
  1042 000004CA 0FA0                <2>  push fs
  1043 000004CC 0FA8                <2>  push gs
  1044                              <2> 
  1045 000004CE 66B81000            <2>  mov ax, 2 * 8
  1046 000004D2 8ED8                <2>  mov ds, ax
  1047 000004D4 8EC0                <2>  mov es, ax
  1048 000004D6 8EE8                <2>  mov gs, ax
  1049 000004D8 8EE0                <2>  mov fs, ax
  1050                              <1> 
  1051 000004DA 54                  <1>  push esp
  1052 000004DB 6A11                <1>  push %1
  1053 000004DD E8(00000000)        <1>  call _DefaultHandler
  1054 000004E2 83C408              <1>  add esp, 8
  1055                              <1> 
  1056 000004E5 09C0                <1>  or eax, eax
  1057 000004E7 7403                <1>  jz .skip
  1058 000004E9 83C404              <1>  add esp, 4
  1059                              <1>  .skip:
  1060                              <1>  PopRegisters
  1061 000004EC 0FA9                <2>  pop gs
  1062 000004EE 0FA1                <2>  pop fs
  1063 000004F0 07                  <2>  pop es
  1064 000004F1 1F                  <2>  pop ds
  1065 000004F2 5D                  <2>  pop ebp
  1066 000004F3 5F                  <2>  pop edi
  1067 000004F4 5E                  <2>  pop esi
  1068 000004F5 5A                  <2>  pop edx
  1069 000004F6 59                  <2>  pop ecx
  1070 000004F7 5B                  <2>  pop ebx
  1071 000004F8 58                  <2>  pop eax
  1072 000004F9 CF                  <1>  iretd
  1073                                  DefaultHandler 18
  1074                              <1>  [extern _DefaultHandler]
  1075                              <1>  [global DefaultHandler%1]
  1076                              <1>  DefaultHandler%1:
  1077                              <1>  PushRegisters
  1078 000004FA 50                  <2>  push eax
  1079 000004FB 53                  <2>  push ebx
  1080 000004FC 51                  <2>  push ecx
  1081 000004FD 52                  <2>  push edx
  1082 000004FE 56                  <2>  push esi
  1083 000004FF 57                  <2>  push edi
  1084 00000500 55                  <2>  push ebp
  1085 00000501 1E                  <2>  push ds
  1086 00000502 06                  <2>  push es
  1087 00000503 0FA0                <2>  push fs
  1088 00000505 0FA8                <2>  push gs
  1089                              <2> 
  1090 00000507 66B81000            <2>  mov ax, 2 * 8
  1091 0000050B 8ED8                <2>  mov ds, ax
  1092 0000050D 8EC0                <2>  mov es, ax
  1093 0000050F 8EE8                <2>  mov gs, ax
  1094 00000511 8EE0                <2>  mov fs, ax
  1095                              <1> 
  1096 00000513 54                  <1>  push esp
  1097 00000514 6A12                <1>  push %1
  1098 00000516 E8(00000000)        <1>  call _DefaultHandler
  1099 0000051B 83C408              <1>  add esp, 8
  1100                              <1> 
  1101 0000051E 09C0                <1>  or eax, eax
  1102 00000520 7403                <1>  jz .skip
  1103 00000522 83C404              <1>  add esp, 4
  1104                              <1>  .skip:
  1105                              <1>  PopRegisters
  1106 00000525 0FA9                <2>  pop gs
  1107 00000527 0FA1                <2>  pop fs
  1108 00000529 07                  <2>  pop es
  1109 0000052A 1F                  <2>  pop ds
  1110 0000052B 5D                  <2>  pop ebp
  1111 0000052C 5F                  <2>  pop edi
  1112 0000052D 5E                  <2>  pop esi
  1113 0000052E 5A                  <2>  pop edx
  1114 0000052F 59                  <2>  pop ecx
  1115 00000530 5B                  <2>  pop ebx
  1116 00000531 58                  <2>  pop eax
  1117 00000532 CF                  <1>  iretd
  1118                                  DefaultHandler 19
  1119                              <1>  [extern _DefaultHandler]
  1120                              <1>  [global DefaultHandler%1]
  1121                              <1>  DefaultHandler%1:
  1122                              <1>  PushRegisters
  1123 00000533 50                  <2>  push eax
  1124 00000534 53                  <2>  push ebx
  1125 00000535 51                  <2>  push ecx
  1126 00000536 52                  <2>  push edx
  1127 00000537 56                  <2>  push esi
  1128 00000538 57                  <2>  push edi
  1129 00000539 55                  <2>  push ebp
  1130 0000053A 1E                  <2>  push ds
  1131 0000053B 06                  <2>  push es
  1132 0000053C 0FA0                <2>  push fs
  1133 0000053E 0FA8                <2>  push gs
  1134                              <2> 
  1135 00000540 66B81000            <2>  mov ax, 2 * 8
  1136 00000544 8ED8                <2>  mov ds, ax
  1137 00000546 8EC0                <2>  mov es, ax
  1138 00000548 8EE8                <2>  mov gs, ax
  1139 0000054A 8EE0                <2>  mov fs, ax
  1140                              <1> 
  1141 0000054C 54                  <1>  push esp
  1142 0000054D 6A13                <1>  push %1
  1143 0000054F E8(00000000)        <1>  call _DefaultHandler
  1144 00000554 83C408              <1>  add esp, 8
  1145                              <1> 
  1146 00000557 09C0                <1>  or eax, eax
  1147 00000559 7403                <1>  jz .skip
  1148 0000055B 83C404              <1>  add esp, 4
  1149                              <1>  .skip:
  1150                              <1>  PopRegisters
  1151 0000055E 0FA9                <2>  pop gs
  1152 00000560 0FA1                <2>  pop fs
  1153 00000562 07                  <2>  pop es
  1154 00000563 1F                  <2>  pop ds
  1155 00000564 5D                  <2>  pop ebp
  1156 00000565 5F                  <2>  pop edi
  1157 00000566 5E                  <2>  pop esi
  1158 00000567 5A                  <2>  pop edx
  1159 00000568 59                  <2>  pop ecx
  1160 00000569 5B                  <2>  pop ebx
  1161 0000056A 58                  <2>  pop eax
  1162 0000056B CF                  <1>  iretd
  1163                                  
  1164                                  MakeIntHandler TimerHandler
  1165                              <1>  [global %1]
  1166                              <1>  [extern _%1]
  1167                              <1>  %1:
  1168                              <1>  PushRegisters
  1169 0000056C 50                  <2>  push eax
  1170 0000056D 53                  <2>  push ebx
  1171 0000056E 51                  <2>  push ecx
  1172 0000056F 52                  <2>  push edx
  1173 00000570 56                  <2>  push esi
  1174 00000571 57                  <2>  push edi
  1175 00000572 55                  <2>  push ebp
  1176 00000573 1E                  <2>  push ds
  1177 00000574 06                  <2>  push es
  1178 00000575 0FA0                <2>  push fs
  1179 00000577 0FA8                <2>  push gs
  1180                              <2> 
  1181 00000579 66B81000            <2>  mov ax, 2 * 8
  1182 0000057D 8ED8                <2>  mov ds, ax
  1183 0000057F 8EC0                <2>  mov es, ax
  1184 00000581 8EE8                <2>  mov gs, ax
  1185 00000583 8EE0                <2>  mov fs, ax
  1186                              <1> 
  1187 00000585 54                  <1>  push esp
  1188 00000586 E8(00000000)        <1>  call _%1
  1189 0000058B 83C404              <1>  add esp, 4
  1190                              <1> 
  1191                              <1>  PopRegisters
  1192 0000058E 0FA9                <2>  pop gs
  1193 00000590 0FA1                <2>  pop fs
  1194 00000592 07                  <2>  pop es
  1195 00000593 1F                  <2>  pop ds
  1196 00000594 5D                  <2>  pop ebp
  1197 00000595 5F                  <2>  pop edi
  1198 00000596 5E                  <2>  pop esi
  1199 00000597 5A                  <2>  pop edx
  1200 00000598 59                  <2>  pop ecx
  1201 00000599 5B                  <2>  pop ebx
  1202 0000059A 58                  <2>  pop eax
  1203 0000059B CF                  <1>  iretd
  1204                                  MakeIntHandler KeyboardHandler
  1205                              <1>  [global %1]
  1206                              <1>  [extern _%1]
  1207                              <1>  %1:
  1208                              <1>  PushRegisters
  1209 0000059C 50                  <2>  push eax
  1210 0000059D 53                  <2>  push ebx
  1211 0000059E 51                  <2>  push ecx
  1212 0000059F 52                  <2>  push edx
  1213 000005A0 56                  <2>  push esi
  1214 000005A1 57                  <2>  push edi
  1215 000005A2 55                  <2>  push ebp
  1216 000005A3 1E                  <2>  push ds
  1217 000005A4 06                  <2>  push es
  1218 000005A5 0FA0                <2>  push fs
  1219 000005A7 0FA8                <2>  push gs
  1220                              <2> 
  1221 000005A9 66B81000            <2>  mov ax, 2 * 8
  1222 000005AD 8ED8                <2>  mov ds, ax
  1223 000005AF 8EC0                <2>  mov es, ax
  1224 000005B1 8EE8                <2>  mov gs, ax
  1225 000005B3 8EE0                <2>  mov fs, ax
  1226                              <1> 
  1227 000005B5 54                  <1>  push esp
  1228 000005B6 E8(00000000)        <1>  call _%1
  1229 000005BB 83C404              <1>  add esp, 4
  1230                              <1> 
  1231                              <1>  PopRegisters
  1232 000005BE 0FA9                <2>  pop gs
  1233 000005C0 0FA1                <2>  pop fs
  1234 000005C2 07                  <2>  pop es
  1235 000005C3 1F                  <2>  pop ds
  1236 000005C4 5D                  <2>  pop ebp
  1237 000005C5 5F                  <2>  pop edi
  1238 000005C6 5E                  <2>  pop esi
  1239 000005C7 5A                  <2>  pop edx
  1240 000005C8 59                  <2>  pop ecx
  1241 000005C9 5B                  <2>  pop ebx
  1242 000005CA 58                  <2>  pop eax
  1243 000005CB CF                  <1>  iretd
  1244                                  MakeIntHandler MouseHandler
  1245                              <1>  [global %1]
  1246                              <1>  [extern _%1]
  1247                              <1>  %1:
  1248                              <1>  PushRegisters
  1249 000005CC 50                  <2>  push eax
  1250 000005CD 53                  <2>  push ebx
  1251 000005CE 51                  <2>  push ecx
  1252 000005CF 52                  <2>  push edx
  1253 000005D0 56                  <2>  push esi
  1254 000005D1 57                  <2>  push edi
  1255 000005D2 55                  <2>  push ebp
  1256 000005D3 1E                  <2>  push ds
  1257 000005D4 06                  <2>  push es
  1258 000005D5 0FA0                <2>  push fs
  1259 000005D7 0FA8                <2>  push gs
  1260                              <2> 
  1261 000005D9 66B81000            <2>  mov ax, 2 * 8
  1262 000005DD 8ED8                <2>  mov ds, ax
  1263 000005DF 8EC0                <2>  mov es, ax
  1264 000005E1 8EE8                <2>  mov gs, ax
  1265 000005E3 8EE0                <2>  mov fs, ax
  1266                              <1> 
  1267 000005E5 54                  <1>  push esp
  1268 000005E6 E8(00000000)        <1>  call _%1
  1269 000005EB 83C404              <1>  add esp, 4
  1270                              <1> 
  1271                              <1>  PopRegisters
  1272 000005EE 0FA9                <2>  pop gs
  1273 000005F0 0FA1                <2>  pop fs
  1274 000005F2 07                  <2>  pop es
  1275 000005F3 1F                  <2>  pop ds
  1276 000005F4 5D                  <2>  pop ebp
  1277 000005F5 5F                  <2>  pop edi
  1278 000005F6 5E                  <2>  pop esi
  1279 000005F7 5A                  <2>  pop edx
  1280 000005F8 59                  <2>  pop ecx
  1281 000005F9 5B                  <2>  pop ebx
  1282 000005FA 58                  <2>  pop eax
  1283 000005FB CF                  <1>  iretd
